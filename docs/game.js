// Generated by Haxe 3.4.2
(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var setImmediate;

    function addFromSetImmediateArguments(args) {
        tasksByHandle[nextHandle] = partiallyApplied.apply(undefined, args);
        return nextHandle++;
    }

    // This function accepts the same arguments as setImmediate, but
    // returns a function that requires no arguments.
    function partiallyApplied(handler) {
        var args = [].slice.call(arguments, 1);
        return function() {
            if (typeof handler === "function") {
                handler.apply(undefined, args);
            } else {
                (new Function("" + handler))();
            }
        };
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(partiallyApplied(runIfPresent, handle), 0);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    task();
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function installNextTickImplementation() {
        setImmediate = function() {
            var handle = addFromSetImmediateArguments(arguments);
            process.nextTick(partiallyApplied(runIfPresent, handle));
            return handle;
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        setImmediate = function() {
            var handle = addFromSetImmediateArguments(arguments);
            global.postMessage(messagePrefix + handle, "*");
            return handle;
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        setImmediate = function() {
            var handle = addFromSetImmediateArguments(arguments);
            channel.port2.postMessage(handle);
            return handle;
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        setImmediate = function() {
            var handle = addFromSetImmediateArguments(arguments);
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
            return handle;
        };
    }

    function installSetTimeoutImplementation() {
        setImmediate = function() {
            var handle = addFromSetImmediateArguments(arguments);
            setTimeout(partiallyApplied(runIfPresent, handle), 0);
            return handle;
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6â€“8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(new Function("return this")()));

(function ($hx_exports, $global) { "use strict";
$hx_exports["promhx"] = $hx_exports["promhx"] || {};
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var List = function() {
	this.length = 0;
};
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,pop: function() {
		if(this.h == null) {
			return null;
		}
		var x = this.h.item;
		this.h = this.h.next;
		if(this.h == null) {
			this.q = null;
		}
		this.length--;
		return x;
	}
	,isEmpty: function() {
		return this.h == null;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
var Main = function() { };
Main.__name__ = ["Main"];
Main.main = function() {
	mammoth_Mammoth.init(Main.onReady);
};
Main.onReady = function() {
	mammoth_Log.log("Loading...",mammoth_LogFunctions.Info,{ fileName : "Main.hx", lineNumber : 26, className : "Main", methodName : "onReady"});
	mammoth_Assets.loadJSON("assets/iso.json").then(function(data) {
		mammoth_loader_Loader.load(data);
		mammoth_Log.log("Done!",mammoth_LogFunctions.Info,{ fileName : "Main.hx", lineNumber : 30, className : "Main", methodName : "onReady"});
		var entity = mammoth_Mammoth.engine.entities();
		while(entity.hasNext()) {
			var entity1 = entity.next();
			var t = entity1.map.get(Type.getClassName(mammoth_components_Transform));
			if(t != null) {
				if(t.name == "Cube") {
					mammoth_Log.log("Adding spin to \"Cube\"!",mammoth_LogFunctions.Info,{ fileName : "Main.hx", lineNumber : 37, className : "Main", methodName : "onReady"});
					var spin = new components_Spin();
					spin.angle = 0;
					spin.speed = Math.PI / 10;
					entity1.add(spin);
				}
			}
		}
		mammoth_Mammoth.updatePhase.add(new systems_SpinSystem());
		mammoth_Mammoth.begin();
	},{ fileName : "Main.hx", lineNumber : 27, className : "Main", methodName : "onReady"}).catchError(function(e) {
		mammoth_Log.log(e,mammoth_LogFunctions.Error,{ fileName : "Main.hx", lineNumber : 51, className : "Main", methodName : "onReady"});
	});
	mammoth_Mammoth.begin();
};
Math.__name__ = ["Math"];
var Std = function() { };
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
StringTools.__name__ = ["StringTools"];
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var Type = function() { };
Type.__name__ = ["Type"];
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
var edge_IComponent = function() { };
edge_IComponent.__name__ = ["edge","IComponent"];
var components_Spin = function() {
	this.speed = 0.0;
	this.angle = 0.0;
};
components_Spin.__name__ = ["components","Spin"];
components_Spin.__interfaces__ = [edge_IComponent];
components_Spin.prototype = {
	__class__: components_Spin
};
var edge_Engine = function() {
	this.mapEntities = new haxe_ds_ObjectMap();
	this.listPhases = [];
};
edge_Engine.__name__ = ["edge","Engine"];
edge_Engine.prototype = {
	create: function(components) {
		var entity = new edge_Entity(this,components);
		this.mapEntities.set(entity,true);
		this.matchSystems(entity);
		return entity;
	}
	,entities: function() {
		return this.mapEntities.keys();
	}
	,createPhase: function() {
		var phase = new edge_Phase(this);
		this.listPhases.push(phase);
		return phase;
	}
	,eachSystem: function(f) {
		var _g = 0;
		var _g1 = this.listPhases;
		while(_g < _g1.length) {
			var phase = _g1[_g];
			++_g;
			var system = phase.systems();
			while(system.hasNext()) {
				var system1 = system.next();
				f(system1);
			}
		}
	}
	,addSystem: function(system) {
		this.eachSystem(function(s) {
			if(s == system) {
				throw new js__$Boot_HaxeError("System \"" + Std.string(system) + "\" already exists in Engine");
			}
		});
		var entity = this.mapEntities.keys();
		while(entity.hasNext()) {
			var entity1 = entity.next();
			system.__process__.addEntity(entity1);
		}
	}
	,removeSystem: function(system) {
		var entity = this.mapEntities.keys();
		while(entity.hasNext()) {
			var entity1 = entity.next();
			system.__process__.removeEntity(entity1);
		}
	}
	,updateSystem: function(system,t) {
		return system.__process__.update(this,t);
	}
	,matchSystems: function(entity) {
		var _gthis = this;
		this.eachSystem(function(system) {
			system.__process__.addEntity(entity);
		});
	}
	,__class__: edge_Engine
};
var edge_Entity = function(engine,components) {
	this.engine = engine;
	this.map = new haxe_ds_StringMap();
	if(null != components) {
		this.addMany(components);
	}
};
edge_Entity.__name__ = ["edge","Entity"];
edge_Entity.prototype = {
	add: function(component) {
		if(null == this.engine) {
			return;
		}
		this._add(component);
		this.engine.matchSystems(this);
	}
	,addMany: function(components) {
		var _gthis = this;
		if(null == this.engine) {
			return;
		}
		components.map(function(_) {
			_gthis._add(_);
			return;
		});
		this.engine.matchSystems(this);
	}
	,remove: function(component) {
		this._remove(component);
		this.engine.matchSystems(this);
	}
	,_add: function(component) {
		var type = this.key(component);
		var _this = this.map;
		if(__map_reserved[type] != null ? _this.existsReserved(type) : _this.h.hasOwnProperty(type)) {
			var _this1 = this.map;
			this.remove(__map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type]);
		}
		var _this2 = this.map;
		if(__map_reserved[type] != null) {
			_this2.setReserved(type,component);
		} else {
			_this2.h[type] = component;
		}
	}
	,_remove: function(component) {
		var type = this.key(component);
		this._removeTypeName(type);
	}
	,_removeTypeName: function(type) {
		this.map.remove(type);
	}
	,key: function(component) {
		var t = component == null ? null : js_Boot.getClass(component);
		var s = Type.getSuperClass(t);
		while(s != null && s != edge_IComponent) {
			t = s;
			s = Type.getSuperClass(t);
		}
		return Type.getClassName(t);
	}
	,__class__: edge_Entity
};
var edge_ISystem = function() { };
edge_ISystem.__name__ = ["edge","ISystem"];
edge_ISystem.prototype = {
	__class__: edge_ISystem
};
var edge_Phase = function(engine) {
	this.engine = engine;
	this.mapSystem = new haxe_ds_ObjectMap();
	this.mapType = new haxe_ds_StringMap();
	this.phases = [];
	this.enabled = true;
};
edge_Phase.__name__ = ["edge","Phase"];
edge_Phase.prototype = {
	add: function(system) {
		this.remove(system);
		var node = this.createNode(system);
		if(null == this.first) {
			this.first = node;
			this.last = node;
		} else {
			node.prev = this.last;
			this.last.next = node;
			this.last = node;
		}
	}
	,remove: function(system) {
		var node = this.mapSystem.h[system.__id__];
		this.mapType.remove(this.key(system));
		if(null == node) {
			return;
		}
		this.engine.removeSystem(system);
		this.mapSystem.remove(system);
		if(node == this.first && node == this.last) {
			this.first = this.last = null;
		} else if(node == this.first) {
			this.first = node.next;
			node.next.prev = null;
		} else if(node == this.last) {
			this.last = node.prev;
			node.prev.next = null;
		} else {
			node.prev.next = node.next;
			node.next.prev = node.prev;
		}
	}
	,systems: function() {
		return new edge_core_NodeSystemIterator(this.first);
	}
	,update: function(t) {
		if(!this.enabled) {
			return;
		}
		var result;
		var system = this.systems();
		while(system.hasNext()) {
			var system1 = system.next();
			result = this.engine.updateSystem(system1,t);
			if(!result) {
				return;
			}
		}
		var _g = 0;
		var _g1 = this.phases;
		while(_g < _g1.length) {
			var phase = _g1[_g];
			++_g;
			phase.update(t);
		}
	}
	,createNode: function(system) {
		var node = new edge_core_NodeSystem(system);
		this.mapSystem.set(system,node);
		var this1 = this.mapType;
		var key = this.key(system);
		var _this = this1;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,system);
		} else {
			_this.h[key] = system;
		}
		this.engine.addSystem(system);
		return node;
	}
	,key: function(system) {
		return Type.getClassName(system == null ? null : js_Boot.getClass(system));
	}
	,__class__: edge_Phase
};
var edge_View = function() {
	this.map = new haxe_ds_ObjectMap();
	this.count = 0;
};
edge_View.__name__ = ["edge","View"];
edge_View.prototype = {
	iterator: function() {
		var _gthis = this;
		var keys = this.map.keys();
		var holder = { entity : null, data : null};
		return { hasNext : function() {
			return keys.hasNext();
		}, next : function() {
			var key = keys.next();
			holder.entity = key;
			holder.data = _gthis.map.h[key.__id__];
			return holder;
		}};
	}
	,tryAdd: function(entity,data) {
		if(this.map.h.__keys__[entity.__id__] != null) {
			return false;
		}
		this.map.set(entity,data);
		this.count++;
		return true;
	}
	,tryRemove: function(entity) {
		var o = this.map.h[entity.__id__];
		if(null == o) {
			return null;
		}
		this.map.remove(entity);
		this.count--;
		return o;
	}
	,__class__: edge_View
};
var edge_core_ISystemProcess = function() { };
edge_core_ISystemProcess.__name__ = ["edge","core","ISystemProcess"];
edge_core_ISystemProcess.prototype = {
	__class__: edge_core_ISystemProcess
};
var edge_core_NodeSystem = function(system) {
	this.system = system;
};
edge_core_NodeSystem.__name__ = ["edge","core","NodeSystem"];
edge_core_NodeSystem.prototype = {
	__class__: edge_core_NodeSystem
};
var edge_core_NodeSystemIterator = function(node) {
	this.node = node;
};
edge_core_NodeSystemIterator.__name__ = ["edge","core","NodeSystemIterator"];
edge_core_NodeSystemIterator.prototype = {
	hasNext: function() {
		return null != this.node;
	}
	,next: function() {
		var system = this.node.system;
		this.node = this.node.next;
		return system;
	}
	,__class__: edge_core_NodeSystemIterator
};
var glm_GLM = function() { };
glm_GLM.__name__ = ["glm","GLM"];
var haxe_StackItem = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.toString = $estr;
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = ["haxe","CallStack"];
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			stack.push(haxe_StackItem.FilePos(method,site.getFileName(),site.getLineNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	__class__: haxe__$Int64__$_$_$Int64
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
haxe_crypto_BaseCode.__name__ = ["haxe","crypto","BaseCode"];
haxe_crypto_BaseCode.prototype = {
	initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i1 = _g1++;
			tbl[this.base.b[i1]] = i1;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255 & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	get: function(key) {
		return this.h[key];
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Error = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_FPHelper = function() { };
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0 ? -f : f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608);
	if(sig == 8388608 && exp < 128) {
		sig = 0;
		++exp;
	}
	return (f < 0 ? -2147483648 : 0) | exp + 127 << 23 | sig;
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) {
		return 0.0;
	}
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else if(!isFinite(v)) {
		if(v > 0) {
			i64.low = 0;
			i64.high = 2146435072;
		} else {
			i64.low = 0;
			i64.high = -1048576;
		}
	} else {
		var av = v < 0 ? -v : v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var sig = Math.round((av / Math.pow(2,exp) - 1) * 4503599627370496.);
		var sig_l = sig | 0;
		var sig_h = sig / 4294967296.0 | 0;
		i64.low = sig_l;
		i64.high = (v < 0 ? -2147483648 : 0) | exp + 1023 << 20 | sig_h;
	}
	return i64;
};
var haxe_io__$Float32Array_Float32Array_$Impl_$ = {};
haxe_io__$Float32Array_Float32Array_$Impl_$.__name__ = ["haxe","io","_Float32Array","Float32Array_Impl_"];
haxe_io__$Float32Array_Float32Array_$Impl_$.fromBytes = function(bytes,bytePos,length) {
	if(bytePos == null) {
		bytePos = 0;
	}
	if(length == null) {
		length = bytes.length - bytePos >> 2;
	}
	return new Float32Array(bytes.b.bufferValue,bytePos,length);
};
var haxe_io__$Int32Array_Int32Array_$Impl_$ = {};
haxe_io__$Int32Array_Int32Array_$Impl_$.__name__ = ["haxe","io","_Int32Array","Int32Array_Impl_"];
haxe_io__$Int32Array_Int32Array_$Impl_$.fromBytes = function(bytes,bytePos,length) {
	if(bytePos == null) {
		bytePos = 0;
	}
	if(length == null) {
		length = bytes.length - bytePos >> 2;
	}
	return new Int32Array(bytes.b.bufferValue,bytePos,length);
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_html__$CanvasElement_CanvasUtil = function() { };
js_html__$CanvasElement_CanvasUtil.__name__ = ["js","html","_CanvasElement","CanvasUtil"];
js_html__$CanvasElement_CanvasUtil.getContextWebGL = function(canvas,attribs) {
	var _g = 0;
	var _g1 = ["webgl","experimental-webgl"];
	while(_g < _g1.length) {
		var name = _g1[_g];
		++_g;
		var ctx = canvas.getContext(name,attribs);
		if(ctx != null) {
			return ctx;
		}
	}
	return null;
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	this.offset = byteOffset == null ? 0 : byteOffset;
	this.length = byteLength == null ? buffer.byteLength - this.offset : byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.byteLength = this.length;
	this.byteOffset = this.offset;
	this.buffer = this.buf;
};
js_html_compat_DataView.__name__ = ["js","html","compat","DataView"];
js_html_compat_DataView.prototype = {
	getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		if(v >= 128) {
			return v - 256;
		} else {
			return v;
		}
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		if(v >= 32768) {
			return v - 65536;
		} else {
			return v;
		}
	}
	,getUint16: function(byteOffset,littleEndian) {
		if(littleEndian) {
			return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8;
		} else {
			return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
		}
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		if(littleEndian) {
			return a | b << 8 | c << 16 | d << 24;
		} else {
			return d | c << 8 | b << 16 | a << 24;
		}
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		if(v < 0) {
			return v + 4294967296.;
		} else {
			return v;
		}
	}
	,getFloat32: function(byteOffset,littleEndian) {
		return haxe_io_FPHelper.i32ToFloat(this.getInt32(byteOffset,littleEndian));
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		return haxe_io_FPHelper.i64ToDouble(littleEndian ? a : b,littleEndian ? b : a);
	}
	,setInt8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value < 0 ? value + 128 & 255 : value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0 ? value + 65536 : value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,haxe_io_FPHelper.floatToI32(value),littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.doubleToI64(value);
		if(littleEndian) {
			this.setUint32(byteOffset,i64.low);
			this.setUint32(byteOffset,i64.high);
		} else {
			this.setUint32(byteOffset,i64.high);
			this.setUint32(byteOffset,i64.low);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Float32Array = function() { };
js_html_compat_Float32Array.__name__ = ["js","html","compat","Float32Array"];
js_html_compat_Float32Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = arr.length << 2;
		while(_g21 < _g11) {
			var i1 = _g21++;
			_g2.push(0);
		}
		arr.buffer = new js_html_compat_ArrayBuffer(_g2);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset >> 2;
		}
		arr = [];
		var _g12 = 0;
		var _g3 = length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var val = buffer.a[offset++] | buffer.a[offset++] << 8 | buffer.a[offset++] << 16 | buffer.a[offset++] << 24;
			arr.push(haxe_io_FPHelper.i32ToFloat(val));
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		var buffer1 = [];
		var _g4 = 0;
		while(_g4 < arr.length) {
			var f = arr[_g4];
			++_g4;
			var i3 = haxe_io_FPHelper.floatToI32(f);
			buffer1.push(i3 & 255);
			buffer1.push(i3 >> 8 & 255);
			buffer1.push(i3 >> 16 & 255);
			buffer1.push(i3 >>> 24);
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(buffer1);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Float32Array._subarray;
	arr.set = js_html_compat_Float32Array._set;
	return arr;
};
js_html_compat_Float32Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Float32Array._subarray = function(start,end) {
	var a = js_html_compat_Float32Array._new(this.slice(start,end));
	a.byteOffset = start * 4;
	return a;
};
var js_html_compat_Uint8Array = function() { };
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var mammoth_Assets = function() { };
mammoth_Assets.__name__ = ["mammoth","Assets"];
mammoth_Assets.load = function(path) {
	var d = new promhx_Deferred();
	var p = d.promise();
	var xhr = new XMLHttpRequest();
	xhr.open("GET",path,true);
	xhr.overrideMimeType("text/plain; charset=x-user-defined");
	xhr.responseType = "arraybuffer";
	xhr.onload = function() {
		if(xhr.status >= 200 && xhr.status < 300) {
			var buffer = xhr.response;
			var view = new DataView(buffer);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(view.byteLength));
			var _g1 = 0;
			var _g = view.byteLength;
			while(_g1 < _g) {
				var i = _g1++;
				bytes.b[i] = view.getUint8(i) & 255;
			}
			d.resolve(bytes);
		} else {
			var e = new mammoth_debug_Exception("error " + xhr.status + ": " + xhr.statusText,false,"HTTPResponse",null,{ fileName : "Assets.hx", lineNumber : 45, className : "mammoth.Assets", methodName : "load"});
			d.handleError(e);
		}
	};
	xhr.onerror = function() {
		var e1 = new mammoth_debug_Exception("unknown error",false,"HTTPRequest",null,{ fileName : "Assets.hx", lineNumber : 48, className : "mammoth.Assets", methodName : "load"});
		d.handleError(e1);
	};
	xhr.onabort = function() {
		var e2 = new mammoth_debug_Exception("aborted",false,"HTTPRequest",null,{ fileName : "Assets.hx", lineNumber : 49, className : "mammoth.Assets", methodName : "load"});
		d.handleError(e2);
	};
	xhr.ontimeout = function() {
		var e3 = new mammoth_debug_Exception("timed out",false,"HTTPRequest",null,{ fileName : "Assets.hx", lineNumber : 50, className : "mammoth.Assets", methodName : "load"});
		d.handleError(e3);
	};
	xhr.send();
	return p;
};
mammoth_Assets.loadJSON = function(path) {
	var d = new promhx_Deferred();
	var p = d.promise();
	mammoth_Assets.load(path).then(function(b) {
		var tmp = JSON.parse(b.toString());
		d.resolve(tmp);
	},{ fileName : "Assets.hx", lineNumber : 60, className : "mammoth.Assets", methodName : "loadJSON"}).catchError(function(e) {
		d.handleError(e);
	});
	return p;
};
var mammoth_LogFunctions = { __ename__ : true, __constructs__ : ["Fatal","Error","Warn","Info","Debug"] };
mammoth_LogFunctions.Fatal = ["Fatal",0];
mammoth_LogFunctions.Fatal.toString = $estr;
mammoth_LogFunctions.Fatal.__enum__ = mammoth_LogFunctions;
mammoth_LogFunctions.Error = ["Error",1];
mammoth_LogFunctions.Error.toString = $estr;
mammoth_LogFunctions.Error.__enum__ = mammoth_LogFunctions;
mammoth_LogFunctions.Warn = ["Warn",2];
mammoth_LogFunctions.Warn.toString = $estr;
mammoth_LogFunctions.Warn.__enum__ = mammoth_LogFunctions;
mammoth_LogFunctions.Info = ["Info",3];
mammoth_LogFunctions.Info.toString = $estr;
mammoth_LogFunctions.Info.__enum__ = mammoth_LogFunctions;
mammoth_LogFunctions.Debug = ["Debug",4];
mammoth_LogFunctions.Debug.toString = $estr;
mammoth_LogFunctions.Debug.__enum__ = mammoth_LogFunctions;
var mammoth_Log = function() { };
mammoth_Log.__name__ = ["mammoth","Log"];
mammoth_Log.log = function(v,func,pos) {
	var $console = window.console;
	switch(func[1]) {
	case 0:
		$console.error(pos.fileName + ":" + pos.lineNumber,v);
		throw new js__$Boot_HaxeError(new String("FATAL EXCEPTION: " + pos.fileName + ":" + pos.lineNumber + ": " + Std.string(v.toString())));
		break;
	case 1:
		$console.error(pos.fileName + ":" + pos.lineNumber,v);
		break;
	case 2:
		$console.warn(pos.fileName + ":" + pos.lineNumber,v);
		break;
	case 3:
		$console.info(pos.fileName + ":" + pos.lineNumber,v);
		break;
	case 4:
		$console.debug(pos.fileName + ":" + pos.lineNumber,v);
		break;
	}
};
var mammoth_gl_js_Graphics = function() {
};
mammoth_gl_js_Graphics.__name__ = ["mammoth","gl","js","Graphics"];
mammoth_gl_js_Graphics.prototype = {
	init: function() {
		var canvas = window.document.createElement("canvas");
		this.context = js_html__$CanvasElement_CanvasUtil.getContextWebGL(canvas,{ alpha : false, antialias : false, depth : true, premultipliedAlpha : false, preserveDrawingBuffer : true, stencil : true});
		if(this.context != null) {
			this.context.getExtension("OES_texture_float");
			this.context.getExtension("OES_texture_float_linear");
			this.halfFloat = this.context.getExtension("OES_texture_half_float");
			this.context.getExtension("OES_texture_half_float_linear");
			this.depthTexture = this.context.getExtension("WEBGL_depth_texture");
			this.context.getExtension("EXT_shader_texture_lod");
			this.context.getExtension("OES_standard_derivatives");
			this.anisotropicFilter = this.context.getExtension("EXT_texture_filter_anisotropic");
			if(this.anisotropicFilter == null) {
				this.anisotropicFilter = this.context.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
			}
			this.drawBuffers = this.context.getExtension("WEBGL_draw_buffers");
		}
		window.document.body.appendChild(canvas);
	}
	,checkWindowSize: function() {
		var displayWidth = Math.floor(this.context.canvas.clientWidth * window.devicePixelRatio);
		var displayHeight = Math.floor(this.context.canvas.clientHeight * window.devicePixelRatio);
		if(this.context.canvas.width != displayWidth || this.context.canvas.height != displayHeight) {
			this.context.canvas.width = displayWidth;
			this.context.canvas.height = displayHeight;
		}
	}
	,__class__: mammoth_gl_js_Graphics
};
var mammoth_input_js_Input = function() {
	this.mouseDown = false;
	this.mouseY = 0;
	this.mouseX = 0;
};
mammoth_input_js_Input.__name__ = ["mammoth","input","js","Input"];
mammoth_input_js_Input.prototype = {
	init: function() {
		mammoth_Mammoth.gl.context.canvas.addEventListener("mousemove",$bind(this,this.updateMousePosition));
		mammoth_Mammoth.gl.context.canvas.addEventListener("mousedown",$bind(this,this.updateMouseDown));
		mammoth_Mammoth.gl.context.canvas.addEventListener("mouseup",$bind(this,this.updateMouseUp));
	}
	,updateMousePosition: function(evt) {
		var rect = mammoth_Mammoth.gl.context.canvas.getBoundingClientRect();
		this.mouseX = Math.floor((evt.clientX - rect.left) / (rect.right - rect.left) * mammoth_Mammoth.gl.context.canvas.width);
		this.mouseY = Math.floor((evt.clientY - rect.top) / (rect.bottom - rect.top) * mammoth_Mammoth.gl.context.canvas.height);
	}
	,updateMouseDown: function(evt) {
		if(evt.button == 0) {
			this.mouseDown = true;
		}
	}
	,updateMouseUp: function(evt) {
		if(evt.button == 0) {
			this.mouseDown = false;
		}
	}
	,__class__: mammoth_input_js_Input
};
var mammoth_Stats = function() {
	this.renderEnd = 0;
	this.renderStart = 0;
	this.renderFrameCount = 0;
	this.renderTime = 0;
	this.triangles = 0;
	this.drawCalls = 0;
};
mammoth_Stats.__name__ = ["mammoth","Stats"];
mammoth_Stats.prototype = {
	get_fps: function() {
		if(Math.abs(this.renderTime) <= 0.00000001) {
			return -1;
		}
		return 1 / this.renderTime;
	}
	,startRenderTimer: function() {
		if(this.renderFrameCount == 0) {
			this.renderStart = new Date().getTime() / 1000;
		}
	}
	,endRenderTimer: function() {
		this.renderFrameCount++;
		if(this.renderFrameCount == 120) {
			this.renderEnd = new Date().getTime() / 1000;
			this.renderTime = (this.renderEnd - this.renderStart) / 120;
			this.renderFrameCount = 0;
		}
	}
	,__class__: mammoth_Stats
};
var mammoth_Mammoth = function() { };
mammoth_Mammoth.__name__ = ["mammoth","Mammoth"];
mammoth_Mammoth.init = function(onReady,updateRate) {
	if(updateRate == null) {
		updateRate = 60;
	}
	mammoth_Mammoth.gl.init();
	mammoth_Mammoth.input.init();
	mammoth_Mammoth.debugView = new mammoth_debug_DebugView();
	mammoth_Timing.dt = 1 / updateRate;
	mammoth_Mammoth.engine = new edge_Engine();
	mammoth_Mammoth.preUpdatePhase = mammoth_Mammoth.engine.createPhase();
	mammoth_Mammoth.updatePhase = mammoth_Mammoth.engine.createPhase();
	mammoth_Mammoth.postUpdatePhase = mammoth_Mammoth.engine.createPhase();
	mammoth_Mammoth.renderPhase = mammoth_Mammoth.engine.createPhase();
	mammoth_Mammoth.preUpdatePhase.add(new mammoth_systems_PreTransformSystem());
	mammoth_Mammoth.renderPhase.add(new mammoth_systems_ModelMatrixSystem());
	mammoth_Mammoth.renderPhase.add(new mammoth_systems_CameraSystem());
	mammoth_Mammoth.renderPhase.add(new mammoth_systems_RenderSystem());
	if(onReady != null) {
		onReady();
	}
};
mammoth_Mammoth.begin = function() {
	mammoth_Timing.onUpdate = mammoth_Mammoth.onUpdate;
	mammoth_Timing.onRender = mammoth_Mammoth.onRender;
	mammoth_Timing.start();
};
mammoth_Mammoth.onUpdate = function(dt) {
	tusk_Tusk.draw.newFrame();
	tusk_Tusk.updateInput(mammoth_Mammoth.input.mouseX,mammoth_Mammoth.input.mouseY,mammoth_Mammoth.input.mouseDown);
	mammoth_Mammoth.preUpdatePhase.update(dt);
	mammoth_Mammoth.updatePhase.update(dt);
	mammoth_Mammoth.postUpdatePhase.update(dt);
	tusk_Tusk.window(0,mammoth_Mammoth.gl.context.drawingBufferWidth - 160,10,150,75,"Stats");
	tusk_Tusk.label("Render t: " + Math.round(mammoth_Mammoth.stats.renderTime * 1000 * 10) / 10 + "ms");
	tusk_Tusk.label("FPS: " + Math.round(mammoth_Mammoth.stats.get_fps() * 10) / 10);
	tusk_Tusk.label("Draw calls: " + mammoth_Mammoth.stats.drawCalls);
	tusk_Tusk.label("Triangles: " + mammoth_Mammoth.stats.triangles);
};
mammoth_Mammoth.onRender = function(dt,alpha) {
	mammoth_Mammoth.stats.drawCalls = 0;
	mammoth_Mammoth.stats.triangles = 0;
	mammoth_Mammoth.stats.startRenderTimer();
	mammoth_Mammoth.gl.checkWindowSize();
	mammoth_Mammoth.renderPhase.update(dt);
	mammoth_Mammoth.stats.endRenderTimer();
	mammoth_Mammoth.debugView.draw();
};
var mammoth_Timing = function() { };
mammoth_Timing.__name__ = ["mammoth","Timing"];
mammoth_Timing.onRenderFrame = function(ts) {
	mammoth_Timing.time = ts / 1000;
	var delta = mammoth_Timing.time - mammoth_Timing.lastTime;
	mammoth_Timing.lastTime = mammoth_Timing.time;
	mammoth_Timing.accumulator += delta;
	while(mammoth_Timing.accumulator >= mammoth_Timing.dt) {
		mammoth_Timing.onUpdate(mammoth_Timing.dt);
		mammoth_Timing.accumulator -= mammoth_Timing.dt;
	}
	mammoth_Timing.alpha = mammoth_Timing.accumulator / mammoth_Timing.dt;
	mammoth_Timing.onRender(delta,mammoth_Timing.alpha);
	mammoth_Timing.animationFrameID = window.requestAnimationFrame(mammoth_Timing.onRenderFrame);
};
mammoth_Timing.start = function() {
	mammoth_Timing.animationFrameID = window.requestAnimationFrame(mammoth_Timing.onRenderFrame);
};
var mammoth_components_ProjectionMode = { __ename__ : true, __constructs__ : ["Orthographic","Perspective"] };
mammoth_components_ProjectionMode.Orthographic = function(size) { var $x = ["Orthographic",0,size]; $x.__enum__ = mammoth_components_ProjectionMode; $x.toString = $estr; return $x; };
mammoth_components_ProjectionMode.Perspective = function(fieldOfView) { var $x = ["Perspective",1,fieldOfView]; $x.__enum__ = mammoth_components_ProjectionMode; $x.toString = $estr; return $x; };
var mammoth_components_Camera = function() {
	var this1 = new Float32Array(16);
	this1[0] = 1.0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	this1[4] = 0;
	this1[5] = 0;
	this1[6] = 0;
	this1[7] = 0;
	this1[8] = 0;
	this1[9] = 0;
	this1[10] = 0;
	this1[11] = 0;
	this1[12] = 0;
	this1[13] = 0;
	this1[14] = 0;
	this1[15] = 0;
	this.vp = this1;
	var this11 = new Float32Array(16);
	this11[0] = 1.0;
	this11[1] = 0;
	this11[2] = 0;
	this11[3] = 0;
	this11[4] = 0;
	this11[5] = 0;
	this11[6] = 0;
	this11[7] = 0;
	this11[8] = 0;
	this11[9] = 0;
	this11[10] = 0;
	this11[11] = 0;
	this11[12] = 0;
	this11[13] = 0;
	this11[14] = 0;
	this11[15] = 0;
	this.p = this11;
	var this12 = new Float32Array(16);
	this12[0] = 1.0;
	this12[1] = 0;
	this12[2] = 0;
	this12[3] = 0;
	this12[4] = 0;
	this12[5] = 0;
	this12[6] = 0;
	this12[7] = 0;
	this12[8] = 0;
	this12[9] = 0;
	this12[10] = 0;
	this12[11] = 0;
	this12[12] = 0;
	this12[13] = 0;
	this12[14] = 0;
	this12[15] = 0;
	this.v = this12;
	this.clearColour = mammoth_utilities_Colours.Black;
	var this13 = new Float32Array(4);
	this13[0] = 1;
	this13[1] = 1;
	this.viewportMax = this13;
	var this14 = new Float32Array(4);
	this14[0] = 0;
	this14[1] = 0;
	this.viewportMin = this14;
	this.projection = mammoth_components_ProjectionMode.Perspective(60);
	this.far = 100;
	this.near = 0.1;
	this.pDirty = true;
};
mammoth_components_Camera.__name__ = ["mammoth","components","Camera"];
mammoth_components_Camera.__interfaces__ = [edge_IComponent];
mammoth_components_Camera.prototype = {
	setNearFar: function(near,far) {
		this.near = near;
		this.far = far;
		this.pDirty = true;
		return this;
	}
	,setProjection: function(projection) {
		this.projection = projection;
		this.pDirty = true;
		return this;
	}
	,setViewport: function(min,max) {
		this.viewportMin = min;
		this.viewportMax = max;
		return this;
	}
	,setClearColour: function(colour) {
		this.clearColour = colour;
		return this;
	}
	,__class__: mammoth_components_Camera
};
var mammoth_components_DirectionalLight = function() {
	this.colour = mammoth_utilities_Colours.White;
};
mammoth_components_DirectionalLight.__name__ = ["mammoth","components","DirectionalLight"];
mammoth_components_DirectionalLight.__interfaces__ = [edge_IComponent];
mammoth_components_DirectionalLight.prototype = {
	setColour: function(colour) {
		this.colour = colour;
		return this;
	}
	,__class__: mammoth_components_DirectionalLight
};
var mammoth_components_MeshRenderer = function() {
	var this1 = new Float32Array(16);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	this1[4] = 0;
	this1[5] = 0;
	this1[6] = 0;
	this1[7] = 0;
	this1[8] = 0;
	this1[9] = 0;
	this1[10] = 0;
	this1[11] = 0;
	this1[12] = 0;
	this1[13] = 0;
	this1[14] = 0;
	this1[15] = 0;
	var dest = this1;
	dest[0] = 1;
	dest[1] = 0;
	dest[2] = 0;
	dest[3] = 0;
	dest[4] = 0;
	dest[5] = 1;
	dest[6] = 0;
	dest[7] = 0;
	dest[8] = 0;
	dest[9] = 0;
	dest[10] = 1;
	dest[11] = 0;
	dest[12] = 0;
	dest[13] = 0;
	dest[14] = 0;
	dest[15] = 1;
	this.MVP = dest;
};
mammoth_components_MeshRenderer.__name__ = ["mammoth","components","MeshRenderer"];
mammoth_components_MeshRenderer.__interfaces__ = [edge_IComponent];
mammoth_components_MeshRenderer.prototype = {
	setMesh: function(mesh) {
		this.mesh = mesh;
		return this;
	}
	,setMaterial: function(material) {
		this.material = material;
		return this;
	}
	,__class__: mammoth_components_MeshRenderer
};
var mammoth_components_PointLight = function() {
	this.distance = 25;
	this.colour = mammoth_utilities_Colours.White;
};
mammoth_components_PointLight.__name__ = ["mammoth","components","PointLight"];
mammoth_components_PointLight.__interfaces__ = [edge_IComponent];
mammoth_components_PointLight.prototype = {
	setColour: function(colour) {
		this.colour = colour;
		return this;
	}
	,setDistance: function(distance) {
		this.distance = distance;
		return this;
	}
	,__class__: mammoth_components_PointLight
};
var mammoth_components_Transform = function() {
	var this1 = new Float32Array(16);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	this1[4] = 0;
	this1[5] = 0;
	this1[6] = 0;
	this1[7] = 0;
	this1[8] = 0;
	this1[9] = 0;
	this1[10] = 0;
	this1[11] = 0;
	this1[12] = 0;
	this1[13] = 0;
	this1[14] = 0;
	this1[15] = 0;
	var dest = this1;
	dest[0] = 1;
	dest[1] = 0;
	dest[2] = 0;
	dest[3] = 0;
	dest[4] = 0;
	dest[5] = 1;
	dest[6] = 0;
	dest[7] = 0;
	dest[8] = 0;
	dest[9] = 0;
	dest[10] = 1;
	dest[11] = 0;
	dest[12] = 0;
	dest[13] = 0;
	dest[14] = 0;
	dest[15] = 1;
	this.m = dest;
	var this11 = new Float32Array(4);
	this11[0] = 0;
	this11[1] = 0;
	this11[2] = 0;
	this.lastScale = this11;
	var this12 = new Float32Array(4);
	this12[0] = 0;
	this12[1] = 0;
	this12[2] = 0;
	this12[3] = 1;
	this.lastRotation = this12;
	var this13 = new Float32Array(4);
	this13[0] = 0;
	this13[1] = 0;
	this13[2] = 0;
	this.lastPosition = this13;
	var this14 = new Float32Array(4);
	this14[0] = 1;
	this14[1] = 1;
	this14[2] = 1;
	this.scale = this14;
	var this15 = new Float32Array(4);
	this15[0] = 0;
	this15[1] = 0;
	this15[2] = 0;
	this15[3] = 1;
	var dest1 = this15;
	dest1[0] = 0;
	dest1[1] = 0;
	dest1[2] = 0;
	dest1[3] = 1;
	this.rotation = dest1;
	var this16 = new Float32Array(4);
	this16[0] = 0;
	this16[1] = 0;
	this16[2] = 0;
	this.position = this16;
	this.parent = null;
	this.name = "";
};
mammoth_components_Transform.__name__ = ["mammoth","components","Transform"];
mammoth_components_Transform.__interfaces__ = [edge_IComponent];
mammoth_components_Transform.prototype = {
	__class__: mammoth_components_Transform
};
var mammoth_debug_DebugView = function() {
	this.colourLoc = 0;
	this.uvLoc = 0;
	this.positionLoc = 0;
	var _gthis = this;
	this.context = mammoth_Mammoth.gl.context;
	var vert = this.context.createShader(35633);
	this.context.shaderSource(vert,tusk_Tusk.vertexShaderSrc);
	this.context.compileShader(vert);
	if(!this.context.getShaderParameter(vert,35713)) {
		var info = this.context.getShaderInfoLog(vert);
		throw new js__$Boot_HaxeError(new mammoth_debug_Exception(info,true,"CompileVertShader",null,{ fileName : "DebugView.hx", lineNumber : 36, className : "mammoth.debug.DebugView", methodName : "new"}));
	}
	var frag = this.context.createShader(35632);
	this.context.shaderSource(frag,tusk_Tusk.fragmentShaderSrc);
	this.context.compileShader(frag);
	if(!this.context.getShaderParameter(frag,35713)) {
		var info1 = this.context.getShaderInfoLog(frag);
		throw new js__$Boot_HaxeError(new mammoth_debug_Exception(info1,true,"CompileFragShader",null,{ fileName : "DebugView.hx", lineNumber : 45, className : "mammoth.debug.DebugView", methodName : "new"}));
	}
	this.program = this.context.createProgram();
	this.context.attachShader(this.program,vert);
	this.context.attachShader(this.program,frag);
	this.context.linkProgram(this.program);
	if(!this.context.getProgramParameter(this.program,35714)) {
		var info2 = this.context.getProgramInfoLog(this.program);
		throw new js__$Boot_HaxeError(new mammoth_debug_Exception(info2,true,"LinkProgram",null,{ fileName : "DebugView.hx", lineNumber : 55, className : "mammoth.debug.DebugView", methodName : "new"}));
	}
	this.context.useProgram(this.program);
	this.positionLoc = this.context.getAttribLocation(this.program,"position");
	this.uvLoc = this.context.getAttribLocation(this.program,"uv");
	this.colourLoc = this.context.getAttribLocation(this.program,"colour");
	this.vpLoc = this.context.getUniformLocation(this.program,"VP");
	this.fontTexture = this.context.createTexture();
	this.context.bindTexture(3553,this.fontTexture);
	this.context.texImage2D(3553,0,6408,1,1,0,6408,5121,new Uint8Array([255,0,255,255]));
	this.textureLoc = this.context.getUniformLocation(this.program,"texture");
	this.fontImage = window.document.createElement("img");
	this.fontImage.addEventListener("load",function() {
		_gthis.context.bindTexture(3553,_gthis.fontTexture);
		_gthis.context.texParameteri(3553,10242,33071);
		_gthis.context.texParameteri(3553,10243,33071);
		_gthis.context.texParameteri(3553,10241,9728);
		_gthis.context.texParameteri(3553,10240,9728);
		_gthis.context.texImage2D(3553,0,6408,6408,5121,_gthis.fontImage);
	});
	this.fontImage.src = tusk_Tusk.fontTextureSrc;
	this.buffer = this.context.createBuffer();
	this.context.useProgram(null);
};
mammoth_debug_DebugView.__name__ = ["mammoth","debug","DebugView"];
mammoth_debug_DebugView.prototype = {
	draw: function() {
		this.context.viewport(0,0,mammoth_Mammoth.gl.context.drawingBufferWidth | 0,mammoth_Mammoth.gl.context.drawingBufferHeight | 0);
		this.context.scissor(0,0,mammoth_Mammoth.gl.context.drawingBufferWidth | 0,mammoth_Mammoth.gl.context.drawingBufferHeight | 0);
		tusk_Tusk.draw.set_screenWidth(mammoth_Mammoth.gl.context.drawingBufferWidth);
		tusk_Tusk.draw.set_screenHeight(mammoth_Mammoth.gl.context.drawingBufferHeight);
		if(tusk_Tusk.draw.numVertices == 0) {
			return;
		}
		this.context.disable(2884);
		this.context.disable(2929);
		this.context.enable(3042);
		this.context.blendFunc(770,771);
		this.context.useProgram(this.program);
		this.context.bindBuffer(34962,this.buffer);
		this.context.bufferData(34962,tusk_Tusk.draw.buffer,35048);
		this.context.uniformMatrix4fv(this.vpLoc,false,tusk_Tusk.draw.get_vpMatrix());
		this.context.uniform1i(this.textureLoc,0);
		this.context.activeTexture(33984);
		this.context.bindTexture(3553,this.fontTexture);
		this.context.enableVertexAttribArray(this.positionLoc);
		this.context.vertexAttribPointer(this.positionLoc,2,5126,false,32,0);
		this.context.enableVertexAttribArray(this.uvLoc);
		this.context.vertexAttribPointer(this.uvLoc,2,5126,false,32,8);
		this.context.enableVertexAttribArray(this.colourLoc);
		this.context.vertexAttribPointer(this.colourLoc,4,5126,false,32,16);
		this.context.drawArrays(4,0,tusk_Tusk.draw.numVertices);
	}
	,__class__: mammoth_debug_DebugView
};
var mammoth_debug_Exception = function(message,fatal,type,showStackTrace,pos) {
	if(showStackTrace == null) {
		showStackTrace = true;
	}
	if(type == null) {
		type = "";
	}
	if(fatal == null) {
		fatal = false;
	}
	if(message == null) {
		message = "";
	}
	this.message = message;
	this.fatal = fatal;
	this.type = type;
	this.showStackTrace = showStackTrace;
	this.stack = haxe_CallStack.callStack();
	this.pos = pos;
};
mammoth_debug_Exception.__name__ = ["mammoth","debug","Exception"];
mammoth_debug_Exception.prototype = {
	translateStackItem: function(item) {
		switch(item[1]) {
		case 0:
			return "in function";
		case 1:
			var m = item[2];
			return "in module " + m;
		case 2:
			var line = item[4];
			var file = item[3];
			var s = item[2];
			return "in file '" + file + "' at line " + line + (s == null ? "" : ": " + this.translateStackItem(s));
		case 3:
			var method = item[3];
			var className = item[2];
			return "in class '" + className + "' in method '" + method + "'";
		case 4:
			var v = item[2];
			return "in local function (" + v + ")";
		}
	}
	,toString: function() {
		var stackString = this.stack.map($bind(this,this.translateStackItem));
		var posInfo = this.pos == null ? "" : " in class: " + this.pos.className + " (" + this.pos.fileName + ") in function " + this.pos.methodName + "() at line " + this.pos.lineNumber;
		return (this.fatal ? "fatal " : "") + this.type + " exception" + posInfo + ": " + this.message + (this.showStackTrace ? "\nstack trace:\n  " + stackString.join("\n  ") : "");
	}
	,__class__: mammoth_debug_Exception
};
var mammoth_defaults_StandardAttributes = { __ename__ : true, __constructs__ : ["UV","Colour"] };
mammoth_defaults_StandardAttributes.UV = ["UV",0];
mammoth_defaults_StandardAttributes.UV.toString = $estr;
mammoth_defaults_StandardAttributes.UV.__enum__ = mammoth_defaults_StandardAttributes;
mammoth_defaults_StandardAttributes.Colour = ["Colour",1];
mammoth_defaults_StandardAttributes.Colour.toString = $estr;
mammoth_defaults_StandardAttributes.Colour.__enum__ = mammoth_defaults_StandardAttributes;
var mammoth_defaults_StandardUniforms = { __ename__ : true, __constructs__ : ["DirectionalLights","PointLights","Texture"] };
mammoth_defaults_StandardUniforms.DirectionalLights = ["DirectionalLights",0];
mammoth_defaults_StandardUniforms.DirectionalLights.toString = $estr;
mammoth_defaults_StandardUniforms.DirectionalLights.__enum__ = mammoth_defaults_StandardUniforms;
mammoth_defaults_StandardUniforms.PointLights = ["PointLights",1];
mammoth_defaults_StandardUniforms.PointLights.toString = $estr;
mammoth_defaults_StandardUniforms.PointLights.__enum__ = mammoth_defaults_StandardUniforms;
mammoth_defaults_StandardUniforms.Texture = ["Texture",2];
mammoth_defaults_StandardUniforms.Texture.toString = $estr;
mammoth_defaults_StandardUniforms.Texture.__enum__ = mammoth_defaults_StandardUniforms;
var mammoth_defaults_StandardShader = function(origin) {
	this.fragment = "";
	this.vertex = "";
	this.uniforms = 0;
	this.attributes = 0;
	this.built = false;
	if(origin == null) {
		return;
	}
	var this1 = origin.attributes;
	this.attributes = this1;
	var this2 = origin.uniforms;
	this.uniforms = this2;
	this.albedoColour = origin.albedoColour;
	this.ambientColour = origin.ambientColour;
};
mammoth_defaults_StandardShader.__name__ = ["mammoth","defaults","StandardShader"];
mammoth_defaults_StandardShader.prototype = {
	get_vertex: function() {
		if(!this.built) {
			this.build();
		}
		return this.vertex;
	}
	,get_fragment: function() {
		if(!this.built) {
			this.build();
		}
		return this.fragment;
	}
	,build: function() {
		var prepends = [];
		if((this.attributes & 1 << mammoth_defaults_StandardAttributes.UV[1]) != 0) {
			prepends.push("#define ATTRIBUTE_NORMAL");
		}
		if((this.attributes & 1 << mammoth_defaults_StandardAttributes.Colour[1]) != 0) {
			prepends.push("#define ATTRIBUTE_COLOUR");
		}
		if((this.uniforms & 1 << mammoth_defaults_StandardUniforms.DirectionalLights[1]) != 0) {
			prepends.push("#define UNIFORM_DIRECTIONAL_LIGHTS");
			prepends.push("#define NUMBER_DIRECTIONAL_LIGHTS 1");
		}
		if((this.uniforms & 1 << mammoth_defaults_StandardUniforms.PointLights[1]) != 0) {
			prepends.push("#define UNIFORM_POINT_LIGHTS");
			prepends.push("#define NUMBER_POINT_LIGHTS 1");
		}
		if((this.uniforms & 1 << mammoth_defaults_StandardUniforms.Texture[1]) != 0) {
			prepends.push("#define UNIFORM_TEXTURE");
		}
		var pre = prepends.join("\n");
		this.vertex = pre + "\n\n" + mammoth_defaults_StandardShader.vertexStandard;
		this.fragment = pre + "\n\n" + mammoth_defaults_StandardShader.fragmentStandard;
		this.built = true;
	}
	,setAttribute: function(attribute) {
		this.attributes |= 1 << attribute[1];
		this.built = false;
		return this;
	}
	,setUniform: function(uniform) {
		this.uniforms |= 1 << uniform[1];
		this.built = false;
		return this;
	}
	,hasUniform: function(uniform) {
		return (this.uniforms & 1 << uniform[1]) != 0;
	}
	,__class__: mammoth_defaults_StandardShader
};
var mammoth_loader_Loader = function() { };
mammoth_loader_Loader.__name__ = ["mammoth","loader","Loader"];
mammoth_loader_Loader.toColour = function(colour) {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	var c = this1;
	c[0] = colour[0];
	c[1] = colour[1];
	c[2] = colour[2];
	if(colour.length > 3) {
		c[3] = colour[3];
	}
	return c;
};
mammoth_loader_Loader.loadCamera = function(camera) {
	var cam = new mammoth_components_Camera();
	cam.setNearFar(camera.near,camera.far);
	cam.setClearColour(mammoth_loader_Loader.toColour(camera.clearColour));
	var _g = camera.type;
	var tmp;
	switch(_g) {
	case "orthographic":
		tmp = mammoth_components_ProjectionMode.Orthographic(camera.ortho_size);
		break;
	case "perspective":
		tmp = mammoth_components_ProjectionMode.Perspective(camera.fov);
		break;
	}
	cam.setProjection(tmp);
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	var this2 = new Float32Array(4);
	this2[0] = 1;
	this2[1] = 1;
	cam.setViewport(this1,this2);
	var _this = mammoth_loader_Loader.cameras;
	var key = camera.name;
	if(__map_reserved[key] != null) {
		_this.setReserved(key,cam);
	} else {
		_this.h[key] = cam;
	}
};
mammoth_loader_Loader.loadLight = function(light) {
	var _this = mammoth_loader_Loader.lights;
	var key = light.name;
	var value;
	var _g = light.type;
	switch(_g) {
	case "directional":
		var dirLight = new mammoth_components_DirectionalLight();
		dirLight.setColour(mammoth_loader_Loader.toColour(light.colour));
		value = dirLight;
		break;
	case "point":
		var pointLight = new mammoth_components_PointLight();
		pointLight.setColour(mammoth_loader_Loader.toColour(light.colour));
		pointLight.setDistance(Math.sqrt(light.distance));
		value = pointLight;
		break;
	}
	if(__map_reserved[key] != null) {
		_this.setReserved(key,value);
	} else {
		_this.h[key] = value;
	}
};
mammoth_loader_Loader.loadShader = function(shad) {
	var shader = new mammoth_defaults_StandardShader();
	if(shad.unlit != null) {
		shader.albedoColour = mammoth_loader_Loader.toColour(shad.unlit.colour);
	} else if(shad.diffuse != null) {
		shader.setUniform(mammoth_defaults_StandardUniforms.DirectionalLights);
		shader.setUniform(mammoth_defaults_StandardUniforms.PointLights);
		shader.albedoColour = mammoth_loader_Loader.toColour(shad.diffuse.colour);
		shader.ambientColour = mammoth_loader_Loader.toColour(shad.diffuse.ambient);
	}
	if(shad.textures.length > 0) {
		shader.setUniform(mammoth_defaults_StandardUniforms.Texture);
	}
	var _this = mammoth_loader_Loader.shaders;
	var key = shad.name;
	if(__map_reserved[key] != null) {
		_this.setReserved(key,shader);
	} else {
		_this.h[key] = shader;
	}
};
mammoth_loader_Loader.loadMesh = function(me) {
	var mesh = new mammoth_render_Mesh(me.name,me.vlayout);
	mesh.setVertexData(mammoth_loader_Loader.parseFloatArrayURI(me.vertices));
	mesh.setIndexData(mammoth_loader_Loader.parseIntArrayURI(me.indices));
	var _this = mammoth_loader_Loader.meshes;
	var key = me.name;
	if(__map_reserved[key] != null) {
		_this.setReserved(key,mesh);
	} else {
		_this.h[key] = mesh;
	}
};
mammoth_loader_Loader.loadObject = function(parentTransform,object) {
	var entity = mammoth_Mammoth.engine.create([]);
	if(object.transform != null) {
		var transform = new mammoth_components_Transform();
		var newPosition = object.transform.translation;
		transform.position[0] = newPosition[0];
		transform.position[1] = newPosition[1];
		transform.position[2] = newPosition[2];
		var rot = object.transform.rotation;
		transform.rotation[0] = rot[0];
		transform.rotation[1] = rot[1];
		transform.rotation[2] = rot[2];
		transform.rotation[3] = rot[3];
		var newScale = object.transform.scale;
		transform.scale[0] = newScale[0];
		transform.scale[1] = newScale[1];
		transform.scale[2] = newScale[2];
		transform.name = object.name;
		if(parentTransform != transform) {
			transform.parent = parentTransform;
		}
		if(object.children != null) {
			var _g = 0;
			var _g1 = object.children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				mammoth_loader_Loader.loadObject(transform,child);
			}
		}
		entity.add(transform);
	}
	if(object.render != null && object.render.shader != null) {
		var renderer = new mammoth_components_MeshRenderer();
		var _this = mammoth_loader_Loader.meshes;
		var key = object.render.mesh;
		var renderer1 = renderer.setMesh(__map_reserved[key] != null ? _this.getReserved(key) : _this.h[key]);
		var material = new mammoth_render_Material(object.render.mesh + "->" + object.render.shader);
		var _this1 = mammoth_loader_Loader.shaders;
		var key1 = object.render.shader;
		material.setStandardShader(__map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1]);
		var _g2 = 0;
		var _g11 = renderer1.mesh.attributeNames;
		while(_g2 < _g11.length) {
			var attribute = _g11[_g2];
			++_g2;
			switch(attribute) {
			case "colour":
				material.standardShader.setAttribute(mammoth_defaults_StandardAttributes.Colour);
				break;
			case "normal":
				break;
			case "position":
				break;
			case "uv":
				material.standardShader.setAttribute(mammoth_defaults_StandardAttributes.UV);
				break;
			default:
				throw new js__$Boot_HaxeError(new mammoth_debug_Exception("Unknown vertex attribute '" + attribute + "'!",false,"UnknownAttribute",null,{ fileName : "Loader.hx", lineNumber : 153, className : "mammoth.loader.Loader", methodName : "loadObject"}));
			}
		}
		material.compile();
		var offset = 0;
		var attributes = [];
		var _g3 = 0;
		var _g12 = renderer1.mesh.attributeNames;
		while(_g3 < _g12.length) {
			var attribute1 = _g12[_g3];
			++_g3;
			switch(attribute1) {
			case "colour":
				attributes.push(new mammoth_render_Attribute("colour",mammoth_render_TAttribute.Vec3,0,offset));
				offset += 12;
				break;
			case "normal":
				attributes.push(new mammoth_render_Attribute("normal",mammoth_render_TAttribute.Vec3,0,offset));
				offset += 12;
				break;
			case "position":
				attributes.push(new mammoth_render_Attribute("position",mammoth_render_TAttribute.Vec3,0,offset));
				offset += 12;
				break;
			case "uv":
				attributes.push(new mammoth_render_Attribute("uv",mammoth_render_TAttribute.Vec2,0,offset));
				offset += 8;
				break;
			}
		}
		var _g4 = 0;
		while(_g4 < attributes.length) {
			var attribute2 = attributes[_g4];
			++_g4;
			attribute2.stride = offset;
			material.registerAttribute(attribute2.name,attribute2);
		}
		material.setUniform("albedoColour",mammoth_render_TUniform.RGB(material.standardShader.albedoColour));
		material.setUniform("ambientColour",mammoth_render_TUniform.RGB(material.standardShader.ambientColour));
		var this1 = new Float32Array(16);
		this1[0] = 0;
		this1[1] = 0;
		this1[2] = 0;
		this1[3] = 0;
		this1[4] = 0;
		this1[5] = 0;
		this1[6] = 0;
		this1[7] = 0;
		this1[8] = 0;
		this1[9] = 0;
		this1[10] = 0;
		this1[11] = 0;
		this1[12] = 0;
		this1[13] = 0;
		this1[14] = 0;
		this1[15] = 0;
		var dest = this1;
		dest[0] = 1;
		dest[1] = 0;
		dest[2] = 0;
		dest[3] = 0;
		dest[4] = 0;
		dest[5] = 1;
		dest[6] = 0;
		dest[7] = 0;
		dest[8] = 0;
		dest[9] = 0;
		dest[10] = 1;
		dest[11] = 0;
		dest[12] = 0;
		dest[13] = 0;
		dest[14] = 0;
		dest[15] = 1;
		material.setUniform("MVP",mammoth_render_TUniform.Mat4(dest));
		var this2 = new Float32Array(16);
		this2[0] = 0;
		this2[1] = 0;
		this2[2] = 0;
		this2[3] = 0;
		this2[4] = 0;
		this2[5] = 0;
		this2[6] = 0;
		this2[7] = 0;
		this2[8] = 0;
		this2[9] = 0;
		this2[10] = 0;
		this2[11] = 0;
		this2[12] = 0;
		this2[13] = 0;
		this2[14] = 0;
		this2[15] = 0;
		var dest1 = this2;
		dest1[0] = 1;
		dest1[1] = 0;
		dest1[2] = 0;
		dest1[3] = 0;
		dest1[4] = 0;
		dest1[5] = 1;
		dest1[6] = 0;
		dest1[7] = 0;
		dest1[8] = 0;
		dest1[9] = 0;
		dest1[10] = 1;
		dest1[11] = 0;
		dest1[12] = 0;
		dest1[13] = 0;
		dest1[14] = 0;
		dest1[15] = 1;
		material.setUniform("M",mammoth_render_TUniform.Mat4(dest1));
		if(material.standardShader.hasUniform(mammoth_defaults_StandardUniforms.DirectionalLights)) {
			var this3 = new Float32Array(4);
			this3[0] = 0;
			this3[1] = 0;
			this3[2] = 0;
			material.setUniform("directionalLights[0].direction",mammoth_render_TUniform.Vec3(this3));
			material.setUniform("directionalLights[0].colour",mammoth_render_TUniform.RGB(mammoth_utilities_Colours.Black));
		}
		if(material.standardShader.hasUniform(mammoth_defaults_StandardUniforms.PointLights)) {
			var this4 = new Float32Array(4);
			this4[0] = 0;
			this4[1] = 0;
			this4[2] = 0;
			material.setUniform("pointLights[0].position",mammoth_render_TUniform.Vec3(this4));
			material.setUniform("pointLights[0].colour",mammoth_render_TUniform.RGB(mammoth_utilities_Colours.Black));
			material.setUniform("pointLights[0].distance",mammoth_render_TUniform.Float(0.0));
		}
		renderer1.setMaterial(material);
		entity.add(renderer1);
	}
	if(object.camera != null) {
		var _this2 = mammoth_loader_Loader.cameras;
		var key2 = object.camera;
		entity.add(__map_reserved[key2] != null ? _this2.getReserved(key2) : _this2.h[key2]);
	}
	if(object.light != null) {
		var _this3 = mammoth_loader_Loader.lights;
		var key3 = object.light;
		entity.add(__map_reserved[key3] != null ? _this3.getReserved(key3) : _this3.h[key3]);
	}
};
mammoth_loader_Loader.load = function(file) {
	mammoth_Log.log("Loading data from " + file.meta.file + "..",mammoth_LogFunctions.Info,{ fileName : "Loader.hx", lineNumber : 224, className : "mammoth.loader.Loader", methodName : "load"});
	mammoth_loader_Loader.cameras = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = file.cameras;
	while(_g < _g1.length) {
		var camera = _g1[_g];
		++_g;
		mammoth_loader_Loader.loadCamera(camera);
	}
	mammoth_loader_Loader.lights = new haxe_ds_StringMap();
	var _g2 = 0;
	var _g11 = file.lights;
	while(_g2 < _g11.length) {
		var light = _g11[_g2];
		++_g2;
		mammoth_loader_Loader.loadLight(light);
	}
	mammoth_loader_Loader.shaders = new haxe_ds_StringMap();
	var _g3 = 0;
	var _g12 = file.shaders;
	while(_g3 < _g12.length) {
		var shad = _g12[_g3];
		++_g3;
		mammoth_loader_Loader.loadShader(shad);
	}
	mammoth_loader_Loader.meshes = new haxe_ds_StringMap();
	var _g4 = 0;
	var _g13 = file.meshes;
	while(_g4 < _g13.length) {
		var me = _g13[_g4];
		++_g4;
		mammoth_loader_Loader.loadMesh(me);
	}
	var _g5 = 0;
	var _g14 = file.objects;
	while(_g5 < _g14.length) {
		var object = _g14[_g5];
		++_g5;
		mammoth_loader_Loader.loadObject(null,object);
	}
};
mammoth_loader_Loader.parseFloatArrayURI = function(uri) {
	if(!StringTools.startsWith(uri,"data:text/plain;base64,")) {
		return [];
	}
	var data = haxe_crypto_Base64.decode(HxOverrides.substr(uri,"data:text/plain;base64,".length,null));
	var arr = haxe_io__$Float32Array_Float32Array_$Impl_$.fromBytes(data);
	var ret = [];
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		ret.push(arr[i]);
	}
	return ret;
};
mammoth_loader_Loader.parseIntArrayURI = function(uri) {
	if(!StringTools.startsWith(uri,"data:text/plain;base64,")) {
		return [];
	}
	var data = haxe_crypto_Base64.decode(HxOverrides.substr(uri,"data:text/plain;base64,".length,null));
	var arr = haxe_io__$Int32Array_Int32Array_$Impl_$.fromBytes(data);
	var ret = [];
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		ret.push(arr[i]);
	}
	return ret;
};
var mammoth_render_Attribute = function(name,type,stride,offset) {
	this.bound = false;
	this.name = name;
	this.type = type;
	this.stride = stride;
	this.offset = offset;
};
mammoth_render_Attribute.__name__ = ["mammoth","render","Attribute"];
mammoth_render_Attribute.prototype = {
	__class__: mammoth_render_Attribute
};
var mammoth_render_CullMode = { __ename__ : true, __constructs__ : ["None","Front","Back","Both"] };
mammoth_render_CullMode.None = ["None",0];
mammoth_render_CullMode.None.toString = $estr;
mammoth_render_CullMode.None.__enum__ = mammoth_render_CullMode;
mammoth_render_CullMode.Front = ["Front",1];
mammoth_render_CullMode.Front.toString = $estr;
mammoth_render_CullMode.Front.__enum__ = mammoth_render_CullMode;
mammoth_render_CullMode.Back = ["Back",2];
mammoth_render_CullMode.Back.toString = $estr;
mammoth_render_CullMode.Back.__enum__ = mammoth_render_CullMode;
mammoth_render_CullMode.Both = ["Both",3];
mammoth_render_CullMode.Both.toString = $estr;
mammoth_render_CullMode.Both.__enum__ = mammoth_render_CullMode;
var mammoth_render_DepthCompareMode = { __ename__ : true, __constructs__ : ["Never","Less","Equal","LessOrEqual","Greater","NotEqual","GreaterOrEqual","Always"] };
mammoth_render_DepthCompareMode.Never = ["Never",0];
mammoth_render_DepthCompareMode.Never.toString = $estr;
mammoth_render_DepthCompareMode.Never.__enum__ = mammoth_render_DepthCompareMode;
mammoth_render_DepthCompareMode.Less = ["Less",1];
mammoth_render_DepthCompareMode.Less.toString = $estr;
mammoth_render_DepthCompareMode.Less.__enum__ = mammoth_render_DepthCompareMode;
mammoth_render_DepthCompareMode.Equal = ["Equal",2];
mammoth_render_DepthCompareMode.Equal.toString = $estr;
mammoth_render_DepthCompareMode.Equal.__enum__ = mammoth_render_DepthCompareMode;
mammoth_render_DepthCompareMode.LessOrEqual = ["LessOrEqual",3];
mammoth_render_DepthCompareMode.LessOrEqual.toString = $estr;
mammoth_render_DepthCompareMode.LessOrEqual.__enum__ = mammoth_render_DepthCompareMode;
mammoth_render_DepthCompareMode.Greater = ["Greater",4];
mammoth_render_DepthCompareMode.Greater.toString = $estr;
mammoth_render_DepthCompareMode.Greater.__enum__ = mammoth_render_DepthCompareMode;
mammoth_render_DepthCompareMode.NotEqual = ["NotEqual",5];
mammoth_render_DepthCompareMode.NotEqual.toString = $estr;
mammoth_render_DepthCompareMode.NotEqual.__enum__ = mammoth_render_DepthCompareMode;
mammoth_render_DepthCompareMode.GreaterOrEqual = ["GreaterOrEqual",6];
mammoth_render_DepthCompareMode.GreaterOrEqual.toString = $estr;
mammoth_render_DepthCompareMode.GreaterOrEqual.__enum__ = mammoth_render_DepthCompareMode;
mammoth_render_DepthCompareMode.Always = ["Always",7];
mammoth_render_DepthCompareMode.Always.toString = $estr;
mammoth_render_DepthCompareMode.Always.__enum__ = mammoth_render_DepthCompareMode;
var mammoth_render_Material = function(name) {
	this.depthMode = mammoth_render_DepthCompareMode.LessOrEqual;
	this.depthWrite = true;
	this.cullMode = mammoth_render_CullMode.Back;
	this.name = name;
	this.attributes = new haxe_ds_StringMap();
	this.uniforms = new haxe_ds_StringMap();
};
mammoth_render_Material.__name__ = ["mammoth","render","Material"];
mammoth_render_Material.prototype = {
	compileShader: function(type,source) {
		var shader = mammoth_Mammoth.gl.context.createShader(type);
		mammoth_Mammoth.gl.context.shaderSource(shader,source);
		mammoth_Mammoth.gl.context.compileShader(shader);
		if(!mammoth_Mammoth.gl.context.getShaderParameter(shader,35713)) {
			var info = mammoth_Mammoth.gl.context.getShaderInfoLog(shader);
			var typeStr = type == 35633 ? "Vertex" : "Fragment";
			throw new js__$Boot_HaxeError(new mammoth_debug_Exception(info,true,"Compile" + typeStr + "Shader",null,{ fileName : "Material.hx", lineNumber : 57, className : "mammoth.render.Material", methodName : "compileShader"}));
		}
		return shader;
	}
	,setStandardShader: function(shader) {
		this.standardShader = new mammoth_defaults_StandardShader(shader);
		return this;
	}
	,compile: function() {
		var vertex = this.compileShader(35633,this.standardShader == null ? this.vertexShader : this.standardShader.get_vertex());
		var fragment = this.compileShader(35632,this.standardShader == null ? this.fragmentShader : this.standardShader.get_fragment());
		this.program = mammoth_Mammoth.gl.context.createProgram();
		mammoth_Mammoth.gl.context.attachShader(this.program,vertex);
		mammoth_Mammoth.gl.context.attachShader(this.program,fragment);
		mammoth_Mammoth.gl.context.linkProgram(this.program);
		if(!mammoth_Mammoth.gl.context.getProgramParameter(this.program,35714)) {
			var info = mammoth_Mammoth.gl.context.getProgramInfoLog(this.program);
			throw new js__$Boot_HaxeError(new mammoth_debug_Exception(info,true,"LinkProgram",null,{ fileName : "Material.hx", lineNumber : 90, className : "mammoth.render.Material", methodName : "compile"}));
		}
		return this;
	}
	,registerAttribute: function(name,attribute) {
		var _this = this.attributes;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,attribute);
		} else {
			_this.h[name] = attribute;
		}
		return this;
	}
	,setUniform: function(name,value) {
		var _this = this.uniforms;
		if(__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) {
			var _this1 = this.uniforms;
			(__map_reserved[name] != null ? _this1.getReserved(name) : _this1.h[name]).value = value;
		} else {
			var uniform = new mammoth_render_Uniform();
			uniform.value = value;
			var _this2 = this.uniforms;
			if(__map_reserved[name] != null) {
				_this2.setReserved(name,uniform);
			} else {
				_this2.h[name] = uniform;
			}
		}
		return this;
	}
	,bindAttributes: function() {
		var name = this.attributes.keys();
		while(name.hasNext()) {
			var name1 = name.next();
			var _this = this.attributes;
			var attribute = __map_reserved[name1] != null ? _this.getReserved(name1) : _this.h[name1];
			if(attribute.bound) {
				continue;
			}
			attribute.location = mammoth_Mammoth.gl.context.getAttribLocation(this.program,name1);
			attribute.bound = true;
		}
	}
	,bindUniforms: function() {
		var name = this.uniforms.keys();
		while(name.hasNext()) {
			var name1 = name.next();
			var _this = this.uniforms;
			var uniform = __map_reserved[name1] != null ? _this.getReserved(name1) : _this.h[name1];
			if(uniform.bound) {
				continue;
			}
			var _g = uniform.value;
			uniform.location = mammoth_render_TLocation.Uniform(mammoth_Mammoth.gl.context.getUniformLocation(this.program,name1));
			uniform.bound = true;
		}
	}
	,applyCullMode: function() {
		var _g = this.cullMode;
		switch(_g[1]) {
		case 0:
			mammoth_Mammoth.gl.context.disable(2884);
			break;
		case 1:
			mammoth_Mammoth.gl.context.enable(2884);
			mammoth_Mammoth.gl.context.cullFace(1028);
			break;
		case 2:
			mammoth_Mammoth.gl.context.enable(2884);
			mammoth_Mammoth.gl.context.cullFace(1029);
			break;
		case 3:
			mammoth_Mammoth.gl.context.enable(2884);
			mammoth_Mammoth.gl.context.cullFace(1032);
			break;
		}
	}
	,applyDepthMode: function() {
		if(this.depthWrite) {
			mammoth_Mammoth.gl.context.enable(2929);
		} else {
			mammoth_Mammoth.gl.context.disable(2929);
		}
		var _this = mammoth_Mammoth.gl;
		var func;
		var _g = this.depthMode;
		switch(_g[1]) {
		case 0:
			func = 512;
			break;
		case 1:
			func = 513;
			break;
		case 2:
			func = 514;
			break;
		case 3:
			func = 515;
			break;
		case 4:
			func = 516;
			break;
		case 5:
			func = 517;
			break;
		case 6:
			func = 518;
			break;
		case 7:
			func = 519;
			break;
		}
		_this.context.depthFunc(func);
		mammoth_Mammoth.gl.context.depthMask(this.depthWrite);
	}
	,applyStencilMode: function() {
	}
	,applyBlendingMode: function() {
	}
	,apply: function() {
		this.applyCullMode();
		this.applyDepthMode();
		this.applyStencilMode();
		this.applyBlendingMode();
		mammoth_Mammoth.gl.context.useProgram(this.program);
		this.bindUniforms();
		var _this = this.uniforms;
		var uniform = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(uniform.hasNext()) {
			var uniform1 = uniform.next();
			var _g = uniform1.location;
			var location = _g[2];
			var _g1 = uniform1.value;
			switch(_g1[1]) {
			case 0:
				var b = _g1[2];
				mammoth_Mammoth.gl.context.uniform1i(location,b ? 1 : 0);
				break;
			case 1:
				var i = _g1[2];
				mammoth_Mammoth.gl.context.uniform1i(location,i);
				break;
			case 2:
				var x = _g1[2];
				mammoth_Mammoth.gl.context.uniform1f(location,x);
				break;
			case 3:
				var y = _g1[3];
				var x1 = _g1[2];
				mammoth_Mammoth.gl.context.uniform2f(location,x1,y);
				break;
			case 4:
				var z = _g1[4];
				var y1 = _g1[3];
				var x2 = _g1[2];
				mammoth_Mammoth.gl.context.uniform3f(location,x2,y1,z);
				break;
			case 5:
				var w = _g1[5];
				var z1 = _g1[4];
				var y2 = _g1[3];
				var x3 = _g1[2];
				mammoth_Mammoth.gl.context.uniform4f(location,x3,y2,z1,w);
				break;
			case 6:
				var x4 = _g1[2];
				mammoth_Mammoth.gl.context.uniform1fv(location,x4);
				break;
			case 7:
				var v = _g1[2];
				mammoth_Mammoth.gl.context.uniform2f(location,v[0],v[1]);
				break;
			case 8:
				var v1 = _g1[2];
				mammoth_Mammoth.gl.context.uniform3f(location,v1[0],v1[1],v1[2]);
				break;
			case 9:
				var v2 = _g1[2];
				mammoth_Mammoth.gl.context.uniform4f(location,v2[0],v2[1],v2[2],v2[3]);
				break;
			case 10:
				var m = _g1[2];
				mammoth_Mammoth.gl.context.uniformMatrix4fv(location,false,m);
				break;
			case 11:
				var c = _g1[2];
				mammoth_Mammoth.gl.context.uniform3f(location,c[0],c[1],c[2]);
				break;
			case 12:
				var c1 = _g1[2];
				mammoth_Mammoth.gl.context.uniform4f(location,c1[0],c1[1],c1[2],c1[3]);
				break;
			}
		}
		this.bindAttributes();
	}
	,__class__: mammoth_render_Material
};
var mammoth_render_Mesh = function(name,attributeNames) {
	this.name = name;
	this.attributeNames = attributeNames;
	this.vertexBuffer = mammoth_Mammoth.gl.context.createBuffer();
	this.indexBuffer = mammoth_Mammoth.gl.context.createBuffer();
};
mammoth_render_Mesh.__name__ = ["mammoth","render","Mesh"];
mammoth_render_Mesh.prototype = {
	setVertexData: function(data) {
		mammoth_Mammoth.gl.context.bindBuffer(34962,this.vertexBuffer);
		var _this = mammoth_Mammoth.gl;
		var data1 = new Float32Array(data);
		_this.context.bufferData(34962,data1,35044);
		mammoth_Mammoth.gl.context.bindBuffer(34962,null);
	}
	,setIndexData: function(data) {
		mammoth_Mammoth.gl.context.bindBuffer(34963,this.indexBuffer);
		var _this = mammoth_Mammoth.gl;
		var data1 = new Int16Array(data);
		_this.context.bufferData(34963,data1,35044);
		mammoth_Mammoth.gl.context.bindBuffer(34963,null);
		this.vertexCount = data.length;
	}
	,__class__: mammoth_render_Mesh
};
var mammoth_render_TAttribute = { __ename__ : true, __constructs__ : ["Float","Vec2","Vec3","Vec4"] };
mammoth_render_TAttribute.Float = ["Float",0];
mammoth_render_TAttribute.Float.toString = $estr;
mammoth_render_TAttribute.Float.__enum__ = mammoth_render_TAttribute;
mammoth_render_TAttribute.Vec2 = ["Vec2",1];
mammoth_render_TAttribute.Vec2.toString = $estr;
mammoth_render_TAttribute.Vec2.__enum__ = mammoth_render_TAttribute;
mammoth_render_TAttribute.Vec3 = ["Vec3",2];
mammoth_render_TAttribute.Vec3.toString = $estr;
mammoth_render_TAttribute.Vec3.__enum__ = mammoth_render_TAttribute;
mammoth_render_TAttribute.Vec4 = ["Vec4",3];
mammoth_render_TAttribute.Vec4.toString = $estr;
mammoth_render_TAttribute.Vec4.__enum__ = mammoth_render_TAttribute;
var mammoth_render_TLocation = { __ename__ : true, __constructs__ : ["Uniform"] };
mammoth_render_TLocation.Uniform = function(location) { var $x = ["Uniform",0,location]; $x.__enum__ = mammoth_render_TLocation; $x.toString = $estr; return $x; };
var mammoth_render_TUniform = { __ename__ : true, __constructs__ : ["Bool","Int","Float","Float2","Float3","Float4","Floats","Vec2","Vec3","Vec4","Mat4","RGB","RGBA"] };
mammoth_render_TUniform.Bool = function(x) { var $x = ["Bool",0,x]; $x.__enum__ = mammoth_render_TUniform; $x.toString = $estr; return $x; };
mammoth_render_TUniform.Int = function(x) { var $x = ["Int",1,x]; $x.__enum__ = mammoth_render_TUniform; $x.toString = $estr; return $x; };
mammoth_render_TUniform.Float = function(x) { var $x = ["Float",2,x]; $x.__enum__ = mammoth_render_TUniform; $x.toString = $estr; return $x; };
mammoth_render_TUniform.Float2 = function(x,y) { var $x = ["Float2",3,x,y]; $x.__enum__ = mammoth_render_TUniform; $x.toString = $estr; return $x; };
mammoth_render_TUniform.Float3 = function(x,y,z) { var $x = ["Float3",4,x,y,z]; $x.__enum__ = mammoth_render_TUniform; $x.toString = $estr; return $x; };
mammoth_render_TUniform.Float4 = function(x,y,z,w) { var $x = ["Float4",5,x,y,z,w]; $x.__enum__ = mammoth_render_TUniform; $x.toString = $estr; return $x; };
mammoth_render_TUniform.Floats = function(x) { var $x = ["Floats",6,x]; $x.__enum__ = mammoth_render_TUniform; $x.toString = $estr; return $x; };
mammoth_render_TUniform.Vec2 = function(x) { var $x = ["Vec2",7,x]; $x.__enum__ = mammoth_render_TUniform; $x.toString = $estr; return $x; };
mammoth_render_TUniform.Vec3 = function(x) { var $x = ["Vec3",8,x]; $x.__enum__ = mammoth_render_TUniform; $x.toString = $estr; return $x; };
mammoth_render_TUniform.Vec4 = function(x) { var $x = ["Vec4",9,x]; $x.__enum__ = mammoth_render_TUniform; $x.toString = $estr; return $x; };
mammoth_render_TUniform.Mat4 = function(v) { var $x = ["Mat4",10,v]; $x.__enum__ = mammoth_render_TUniform; $x.toString = $estr; return $x; };
mammoth_render_TUniform.RGB = function(c) { var $x = ["RGB",11,c]; $x.__enum__ = mammoth_render_TUniform; $x.toString = $estr; return $x; };
mammoth_render_TUniform.RGBA = function(c) { var $x = ["RGBA",12,c]; $x.__enum__ = mammoth_render_TUniform; $x.toString = $estr; return $x; };
var mammoth_render_Uniform = function() {
	this.bound = false;
};
mammoth_render_Uniform.__name__ = ["mammoth","render","Uniform"];
mammoth_render_Uniform.prototype = {
	__class__: mammoth_render_Uniform
};
var mammoth_systems_CameraSystem = function() {
	this.__process__ = new mammoth_systems_CameraSystem_$SystemProcess(this);
};
mammoth_systems_CameraSystem.__name__ = ["mammoth","systems","CameraSystem"];
mammoth_systems_CameraSystem.__interfaces__ = [edge_ISystem];
mammoth_systems_CameraSystem.prototype = {
	update: function(transform,camera) {
		var src = transform.m;
		var dest = camera.v;
		dest[0] = src[0];
		dest[1] = src[1];
		dest[2] = src[2];
		dest[3] = src[3];
		dest[4] = src[4];
		dest[5] = src[5];
		dest[6] = src[6];
		dest[7] = src[7];
		dest[8] = src[8];
		dest[9] = src[9];
		dest[10] = src[10];
		dest[11] = src[11];
		dest[12] = src[12];
		dest[13] = src[13];
		dest[14] = src[14];
		dest[15] = src[15];
		camera.v = dest;
		var src1 = camera.v;
		var dest1 = camera.v;
		var a00 = src1[0];
		var a01 = src1[4];
		var a02 = src1[8];
		var a03 = src1[12];
		var a10 = src1[1];
		var a11 = src1[5];
		var a12 = src1[9];
		var a13 = src1[13];
		var a20 = src1[2];
		var a21 = src1[6];
		var a22 = src1[10];
		var a23 = src1[14];
		var a30 = src1[3];
		var a31 = src1[7];
		var a32 = src1[11];
		var a33 = src1[15];
		var t00 = a12 * a23 * a31 - a13 * a22 * a31 + a13 * a21 * a32 - a11 * a23 * a32 - a12 * a21 * a33 + a11 * a22 * a33;
		var t01 = a03 * a22 * a31 - a02 * a23 * a31 - a03 * a21 * a32 + a01 * a23 * a32 + a02 * a21 * a33 - a01 * a22 * a33;
		var t02 = a02 * a13 * a31 - a03 * a12 * a31 + a03 * a11 * a32 - a01 * a13 * a32 - a02 * a11 * a33 + a01 * a12 * a33;
		var t03 = a03 * a12 * a21 - a02 * a13 * a21 - a03 * a11 * a22 + a01 * a13 * a22 + a02 * a11 * a23 - a01 * a12 * a23;
		var det = a00 * t00 + a10 * t01 + a20 * t02 + a30 * t03;
		if(Math.abs(det) <= glm_GLM.EPSILON) {
			throw new js__$Boot_HaxeError("Can't invert matrix, det (" + det + ") is too small!");
		}
		var idet = 1 / det;
		dest1[0] = t00 * idet;
		dest1[1] = (a13 * a22 * a30 - a12 * a23 * a30 - a13 * a20 * a32 + a10 * a23 * a32 + a12 * a20 * a33 - a10 * a22 * a33) * idet;
		dest1[2] = (a11 * a23 * a30 - a13 * a21 * a30 + a13 * a20 * a31 - a10 * a23 * a31 - a11 * a20 * a33 + a10 * a21 * a33) * idet;
		dest1[3] = (a12 * a21 * a30 - a11 * a22 * a30 - a12 * a20 * a31 + a10 * a22 * a31 + a11 * a20 * a32 - a10 * a21 * a32) * idet;
		dest1[4] = t01 * idet;
		dest1[5] = (a02 * a23 * a30 - a03 * a22 * a30 + a03 * a20 * a32 - a00 * a23 * a32 - a02 * a20 * a33 + a00 * a22 * a33) * idet;
		dest1[6] = (a03 * a21 * a30 - a01 * a23 * a30 - a03 * a20 * a31 + a00 * a23 * a31 + a01 * a20 * a33 - a00 * a21 * a33) * idet;
		dest1[7] = (a01 * a22 * a30 - a02 * a21 * a30 + a02 * a20 * a31 - a00 * a22 * a31 - a01 * a20 * a32 + a00 * a21 * a32) * idet;
		dest1[8] = t02 * idet;
		dest1[9] = (a03 * a12 * a30 - a02 * a13 * a30 - a03 * a10 * a32 + a00 * a13 * a32 + a02 * a10 * a33 - a00 * a12 * a33) * idet;
		dest1[10] = (a01 * a13 * a30 - a03 * a11 * a30 + a03 * a10 * a31 - a00 * a13 * a31 - a01 * a10 * a33 + a00 * a11 * a33) * idet;
		dest1[11] = (a02 * a11 * a30 - a01 * a12 * a30 - a02 * a10 * a31 + a00 * a12 * a31 + a01 * a10 * a32 - a00 * a11 * a32) * idet;
		dest1[12] = t03 * idet;
		dest1[13] = (a02 * a13 * a20 - a03 * a12 * a20 + a03 * a10 * a22 - a00 * a13 * a22 - a02 * a10 * a23 + a00 * a12 * a23) * idet;
		dest1[14] = (a03 * a11 * a20 - a01 * a13 * a20 - a03 * a10 * a21 + a00 * a13 * a21 + a01 * a10 * a23 - a00 * a11 * a23) * idet;
		dest1[15] = (a01 * a12 * a20 - a02 * a11 * a20 + a02 * a10 * a21 - a00 * a12 * a21 - a01 * a10 * a22 + a00 * a11 * a22) * idet;
		var _this = mammoth_Mammoth.gl;
		var aspect = _this.context.canvas.clientWidth / _this.context.canvas.clientHeight;
		camera.pDirty = true;
		if(camera.pDirty) {
			var _g = camera.projection;
			var tmp;
			switch(_g[1]) {
			case 0:
				var size = _g[2];
				var halfX = size * 0.5;
				var halfY = halfX / aspect;
				var left = -halfX;
				var bottom = -halfY;
				var near = camera.near;
				var far = camera.far;
				var dest2 = camera.p;
				var rl = 1 / (halfX - left);
				var tb = 1 / (halfY - bottom);
				var fn = 1 / (far - near);
				dest2[0] = 2 * rl;
				dest2[4] = 0;
				dest2[8] = 0;
				dest2[12] = -1 * (left + halfX) * rl;
				dest2[1] = 0;
				dest2[5] = 2 * tb;
				dest2[9] = 0;
				dest2[13] = -1 * (halfY + bottom) * tb;
				dest2[2] = 0;
				dest2[6] = 0;
				dest2[10] = -2 * fn;
				dest2[14] = -1 * (far + near) * fn;
				dest2[3] = 0;
				dest2[7] = 0;
				dest2[11] = 0;
				dest2[15] = 1;
				tmp = dest2;
				break;
			case 1:
				var fov = _g[2];
				var near1 = camera.near;
				var far1 = camera.far;
				var dest3 = camera.p;
				var f = 1 / Math.tan(fov / 2);
				var nf = 1 / (near1 - far1);
				dest3[0] = f / aspect;
				dest3[1] = 0;
				dest3[2] = 0;
				dest3[3] = 0;
				dest3[4] = 0;
				dest3[5] = f;
				dest3[6] = 0;
				dest3[7] = 0;
				dest3[8] = 0;
				dest3[9] = 0;
				dest3[10] = (far1 + near1) * nf;
				dest3[11] = -1;
				dest3[12] = 0;
				dest3[13] = 0;
				dest3[14] = 2 * far1 * near1 * nf;
				dest3[15] = 0;
				tmp = dest3;
				break;
			}
			camera.p = tmp;
			var a = camera.p;
			var b = camera.v;
			var dest4 = camera.vp;
			var a001 = a[0];
			var a011 = a[1];
			var a021 = a[2];
			var a031 = a[3];
			var a101 = a[4];
			var a111 = a[5];
			var a121 = a[6];
			var a131 = a[7];
			var a201 = a[8];
			var a211 = a[9];
			var a221 = a[10];
			var a231 = a[11];
			var a301 = a[12];
			var a311 = a[13];
			var a321 = a[14];
			var a331 = a[15];
			var b00 = b[0];
			var b01 = b[1];
			var b02 = b[2];
			var b03 = b[3];
			var b10 = b[4];
			var b11 = b[5];
			var b12 = b[6];
			var b13 = b[7];
			var b20 = b[8];
			var b21 = b[9];
			var b22 = b[10];
			var b23 = b[11];
			var b30 = b[12];
			var b31 = b[13];
			var b32 = b[14];
			var b33 = b[15];
			dest4[0] = b00 * a001 + b01 * a101 + b02 * a201 + b03 * a301;
			dest4[1] = b00 * a011 + b01 * a111 + b02 * a211 + b03 * a311;
			dest4[2] = b00 * a021 + b01 * a121 + b02 * a221 + b03 * a321;
			dest4[3] = b00 * a031 + b01 * a131 + b02 * a231 + b03 * a331;
			dest4[4] = b10 * a001 + b11 * a101 + b12 * a201 + b13 * a301;
			dest4[5] = b10 * a011 + b11 * a111 + b12 * a211 + b13 * a311;
			dest4[6] = b10 * a021 + b11 * a121 + b12 * a221 + b13 * a321;
			dest4[7] = b10 * a031 + b11 * a131 + b12 * a231 + b13 * a331;
			dest4[8] = b20 * a001 + b21 * a101 + b22 * a201 + b23 * a301;
			dest4[9] = b20 * a011 + b21 * a111 + b22 * a211 + b23 * a311;
			dest4[10] = b20 * a021 + b21 * a121 + b22 * a221 + b23 * a321;
			dest4[11] = b20 * a031 + b21 * a131 + b22 * a231 + b23 * a331;
			dest4[12] = b30 * a001 + b31 * a101 + b32 * a201 + b33 * a301;
			dest4[13] = b30 * a011 + b31 * a111 + b32 * a211 + b33 * a311;
			dest4[14] = b30 * a021 + b31 * a121 + b32 * a221 + b33 * a321;
			dest4[15] = b30 * a031 + b31 * a131 + b32 * a231 + b33 * a331;
			camera.vp = dest4;
			camera.pDirty = false;
		}
		return true;
	}
	,__class__: mammoth_systems_CameraSystem
};
var mammoth_systems_CameraSystem_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
mammoth_systems_CameraSystem_$SystemProcess.__name__ = ["mammoth","systems","CameraSystem_SystemProcess"];
mammoth_systems_CameraSystem_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
mammoth_systems_CameraSystem_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.transform,data.camera);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 2;
		var o = { transform : null, camera : null};
		var component = entity.map.iterator();
		while(component.hasNext()) {
			var component1 = component.next();
			if(js_Boot.__instanceof(component1,mammoth_components_Transform)) {
				o.transform = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if(js_Boot.__instanceof(component1,mammoth_components_Camera)) {
				o.camera = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: mammoth_systems_CameraSystem_$SystemProcess
};
var mammoth_systems_ModelMatrixSystem = function() {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this.scale = this1;
	var this11 = new Float32Array(4);
	this11[0] = 0;
	this11[1] = 0;
	this11[2] = 0;
	this11[3] = 1;
	this.rotation = this11;
	var this12 = new Float32Array(4);
	this12[0] = 0;
	this12[1] = 0;
	this12[2] = 0;
	this.position = this12;
	this.__process__ = new mammoth_systems_ModelMatrixSystem_$SystemProcess(this);
};
mammoth_systems_ModelMatrixSystem.__name__ = ["mammoth","systems","ModelMatrixSystem"];
mammoth_systems_ModelMatrixSystem.__interfaces__ = [edge_ISystem];
mammoth_systems_ModelMatrixSystem.prototype = {
	calculateModelMatrix: function(transform) {
		var a = transform.lastPosition;
		var b = transform.position;
		var t = mammoth_Timing.alpha;
		var dest = this.position;
		var a1 = a[0];
		dest[0] = a1 + t * (b[0] - a1);
		var a2 = a[1];
		dest[1] = a2 + t * (b[1] - a2);
		var a3 = a[2];
		dest[2] = a3 + t * (b[2] - a3);
		var a4 = transform.lastRotation;
		var b1 = transform.rotation;
		var t1 = mammoth_Timing.alpha;
		var dest1 = this.rotation;
		var bx = b1[0];
		var by = b1[1];
		var bz = b1[2];
		var bw = b1[3];
		var cosTheta = a4[0] * b1[0] + a4[1] * b1[1] + a4[2] * b1[2] + a4[3] * b1[3];
		if(cosTheta < 0) {
			cosTheta = -cosTheta;
			bx = -bx;
			by = -by;
			bz = -bz;
			bw = -bw;
		}
		if(cosTheta > 1 - glm_GLM.EPSILON) {
			var a5 = a4[0];
			dest1[0] = a5 + t1 * (b1[0] - a5);
			var a6 = a4[1];
			dest1[1] = a6 + t1 * (b1[1] - a6);
			var a7 = a4[2];
			dest1[2] = a7 + t1 * (b1[2] - a7);
			var a8 = a4[3];
			dest1[3] = a8 + t1 * (b1[3] - a8);
		} else {
			var angle = Math.acos(cosTheta);
			var sa = 1 / Math.sin(angle);
			var i = Math.sin((1 - t1) * angle);
			var j = Math.sin(t1 * angle);
			dest1[0] = (i * a4[0] + j * bx) * sa;
			dest1[1] = (i * a4[1] + j * by) * sa;
			dest1[2] = (i * a4[2] + j * bz) * sa;
			dest1[3] = (i * a4[3] + j * bw) * sa;
		}
		var a9 = transform.lastScale;
		var b2 = transform.scale;
		var t2 = mammoth_Timing.alpha;
		var dest2 = this.scale;
		var a10 = a9[0];
		dest2[0] = a10 + t2 * (b2[0] - a10);
		var a11 = a9[1];
		dest2[1] = a11 + t2 * (b2[1] - a11);
		var a12 = a9[2];
		dest2[2] = a12 + t2 * (b2[2] - a12);
		var translation = this.position;
		var rotation = this.rotation;
		var scale = this.scale;
		var dest3 = transform.m;
		var x2 = rotation[0] + rotation[0];
		var y2 = rotation[1] + rotation[1];
		var z2 = rotation[2] + rotation[2];
		var xx = rotation[0] * x2;
		var xy = rotation[0] * y2;
		var xz = rotation[0] * z2;
		var yy = rotation[1] * y2;
		var yz = rotation[1] * z2;
		var zz = rotation[2] * z2;
		var wx = rotation[3] * x2;
		var wy = rotation[3] * y2;
		var wz = rotation[3] * z2;
		dest3[0] = (1 - (yy + zz)) * scale[0];
		dest3[1] = (xy + wz) * scale[0];
		dest3[2] = (xz - wy) * scale[0];
		dest3[3] = 0;
		dest3[4] = (xy - wz) * scale[1];
		dest3[5] = (1 - (xx + zz)) * scale[1];
		dest3[6] = (yz + wx) * scale[1];
		dest3[7] = 0;
		dest3[8] = (xz + wy) * scale[2];
		dest3[9] = (yz - wx) * scale[2];
		dest3[10] = (1 - (xx + yy)) * scale[2];
		dest3[11] = 0;
		dest3[12] = translation[0];
		dest3[13] = translation[1];
		dest3[14] = translation[2];
		dest3[15] = 1;
		if(transform.parent != null) {
			this.calculateModelMatrix(transform.parent);
			var a13 = transform.parent.m;
			var b3 = transform.m;
			var dest4 = transform.m;
			var a00 = a13[0];
			var a01 = a13[1];
			var a02 = a13[2];
			var a03 = a13[3];
			var a101 = a13[4];
			var a111 = a13[5];
			var a121 = a13[6];
			var a131 = a13[7];
			var a20 = a13[8];
			var a21 = a13[9];
			var a22 = a13[10];
			var a23 = a13[11];
			var a30 = a13[12];
			var a31 = a13[13];
			var a32 = a13[14];
			var a33 = a13[15];
			var b00 = b3[0];
			var b01 = b3[1];
			var b02 = b3[2];
			var b03 = b3[3];
			var b10 = b3[4];
			var b11 = b3[5];
			var b12 = b3[6];
			var b13 = b3[7];
			var b20 = b3[8];
			var b21 = b3[9];
			var b22 = b3[10];
			var b23 = b3[11];
			var b30 = b3[12];
			var b31 = b3[13];
			var b32 = b3[14];
			var b33 = b3[15];
			dest4[0] = b00 * a00 + b01 * a101 + b02 * a20 + b03 * a30;
			dest4[1] = b00 * a01 + b01 * a111 + b02 * a21 + b03 * a31;
			dest4[2] = b00 * a02 + b01 * a121 + b02 * a22 + b03 * a32;
			dest4[3] = b00 * a03 + b01 * a131 + b02 * a23 + b03 * a33;
			dest4[4] = b10 * a00 + b11 * a101 + b12 * a20 + b13 * a30;
			dest4[5] = b10 * a01 + b11 * a111 + b12 * a21 + b13 * a31;
			dest4[6] = b10 * a02 + b11 * a121 + b12 * a22 + b13 * a32;
			dest4[7] = b10 * a03 + b11 * a131 + b12 * a23 + b13 * a33;
			dest4[8] = b20 * a00 + b21 * a101 + b22 * a20 + b23 * a30;
			dest4[9] = b20 * a01 + b21 * a111 + b22 * a21 + b23 * a31;
			dest4[10] = b20 * a02 + b21 * a121 + b22 * a22 + b23 * a32;
			dest4[11] = b20 * a03 + b21 * a131 + b22 * a23 + b23 * a33;
			dest4[12] = b30 * a00 + b31 * a101 + b32 * a20 + b33 * a30;
			dest4[13] = b30 * a01 + b31 * a111 + b32 * a21 + b33 * a31;
			dest4[14] = b30 * a02 + b31 * a121 + b32 * a22 + b33 * a32;
			dest4[15] = b30 * a03 + b31 * a131 + b32 * a23 + b33 * a33;
		}
	}
	,update: function(transform) {
		this.calculateModelMatrix(transform);
		return true;
	}
	,__class__: mammoth_systems_ModelMatrixSystem
};
var mammoth_systems_ModelMatrixSystem_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
mammoth_systems_ModelMatrixSystem_$SystemProcess.__name__ = ["mammoth","systems","ModelMatrixSystem_SystemProcess"];
mammoth_systems_ModelMatrixSystem_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
mammoth_systems_ModelMatrixSystem_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.transform);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 1;
		var o = { transform : null};
		var component = entity.map.iterator();
		while(component.hasNext()) {
			var component1 = component.next();
			if(js_Boot.__instanceof(component1,mammoth_components_Transform)) {
				o.transform = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: mammoth_systems_ModelMatrixSystem_$SystemProcess
};
var mammoth_systems_PreTransformSystem = function() {
	this.__process__ = new mammoth_systems_PreTransformSystem_$SystemProcess(this);
};
mammoth_systems_PreTransformSystem.__name__ = ["mammoth","systems","PreTransformSystem"];
mammoth_systems_PreTransformSystem.__interfaces__ = [edge_ISystem];
mammoth_systems_PreTransformSystem.prototype = {
	update: function(transform) {
		var src = transform.position;
		var dest = transform.lastPosition;
		dest[0] = src[0];
		dest[1] = src[1];
		dest[2] = src[2];
		var src1 = transform.rotation;
		var dest1 = transform.lastRotation;
		dest1[0] = src1[0];
		dest1[1] = src1[1];
		dest1[2] = src1[2];
		dest1[3] = src1[3];
		var src2 = transform.scale;
		var dest2 = transform.lastScale;
		dest2[0] = src2[0];
		dest2[1] = src2[1];
		dest2[2] = src2[2];
		return true;
	}
	,__class__: mammoth_systems_PreTransformSystem
};
var mammoth_systems_PreTransformSystem_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
mammoth_systems_PreTransformSystem_$SystemProcess.__name__ = ["mammoth","systems","PreTransformSystem_SystemProcess"];
mammoth_systems_PreTransformSystem_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
mammoth_systems_PreTransformSystem_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.transform);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 1;
		var o = { transform : null};
		var component = entity.map.iterator();
		while(component.hasNext()) {
			var component1 = component.next();
			if(js_Boot.__instanceof(component1,mammoth_components_Transform)) {
				o.transform = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: mammoth_systems_PreTransformSystem_$SystemProcess
};
var mammoth_systems_RenderSystem = function() {
	this.__process__ = new mammoth_systems_RenderSystem_$SystemProcess(this);
};
mammoth_systems_RenderSystem.__name__ = ["mammoth","systems","RenderSystem"];
mammoth_systems_RenderSystem.__interfaces__ = [edge_ISystem];
mammoth_systems_RenderSystem.prototype = {
	update: function(camera) {
		var vpX = camera.viewportMin[0] * mammoth_Mammoth.gl.context.drawingBufferWidth | 0;
		var vpY = camera.viewportMin[1] * mammoth_Mammoth.gl.context.drawingBufferHeight | 0;
		var vpW = (camera.viewportMax[0] - camera.viewportMin[0]) * mammoth_Mammoth.gl.context.drawingBufferWidth | 0;
		var vpH = (camera.viewportMax[1] - camera.viewportMin[1]) * mammoth_Mammoth.gl.context.drawingBufferHeight | 0;
		mammoth_Mammoth.gl.context.viewport(vpX,vpY,vpW,vpH);
		mammoth_Mammoth.gl.context.scissor(vpX,vpY,vpW,vpH);
		var colour = camera.clearColour;
		mammoth_Mammoth.gl.context.clearColor(colour[0],colour[1],colour[2],colour[3]);
		mammoth_Mammoth.gl.context.clear(16640);
		var o = this.objects.iterator();
		while(o.hasNext()) {
			var o1 = o.next();
			var transform = o1.data.transform;
			var renderer = o1.data.renderer;
			var mesh = renderer.mesh;
			var material = renderer.material;
			var a = camera.vp;
			var b = transform.m;
			var dest = renderer.MVP;
			var a00 = a[0];
			var a01 = a[1];
			var a02 = a[2];
			var a03 = a[3];
			var a10 = a[4];
			var a11 = a[5];
			var a12 = a[6];
			var a13 = a[7];
			var a20 = a[8];
			var a21 = a[9];
			var a22 = a[10];
			var a23 = a[11];
			var a30 = a[12];
			var a31 = a[13];
			var a32 = a[14];
			var a33 = a[15];
			var b00 = b[0];
			var b01 = b[1];
			var b02 = b[2];
			var b03 = b[3];
			var b10 = b[4];
			var b11 = b[5];
			var b12 = b[6];
			var b13 = b[7];
			var b20 = b[8];
			var b21 = b[9];
			var b22 = b[10];
			var b23 = b[11];
			var b30 = b[12];
			var b31 = b[13];
			var b32 = b[14];
			var b33 = b[15];
			dest[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;
			dest[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;
			dest[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;
			dest[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;
			dest[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;
			dest[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;
			dest[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;
			dest[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;
			dest[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;
			dest[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;
			dest[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;
			dest[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;
			dest[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;
			dest[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;
			dest[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;
			dest[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;
			renderer.MVP = dest;
			var _this = material.uniforms;
			if(__map_reserved["MVP"] != null ? _this.existsReserved("MVP") : _this.h.hasOwnProperty("MVP")) {
				material.setUniform("MVP",mammoth_render_TUniform.Mat4(renderer.MVP));
			}
			var _this1 = material.uniforms;
			if(__map_reserved["M"] != null ? _this1.existsReserved("M") : _this1.h.hasOwnProperty("M")) {
				material.setUniform("M",mammoth_render_TUniform.Mat4(transform.m));
			}
			var _this2 = material.uniforms;
			if(__map_reserved["VP"] != null ? _this2.existsReserved("VP") : _this2.h.hasOwnProperty("VP")) {
				material.setUniform("VP",mammoth_render_TUniform.Mat4(camera.vp));
			}
			var _this3 = material.uniforms;
			if(__map_reserved["V"] != null ? _this3.existsReserved("V") : _this3.h.hasOwnProperty("V")) {
				material.setUniform("V",mammoth_render_TUniform.Mat4(camera.v));
			}
			var _this4 = material.uniforms;
			if(__map_reserved["P"] != null ? _this4.existsReserved("P") : _this4.h.hasOwnProperty("P")) {
				material.setUniform("P",mammoth_render_TUniform.Mat4(camera.p));
			}
			var _this5 = material.uniforms;
			if(__map_reserved["directionalLights[0].direction"] != null ? _this5.existsReserved("directionalLights[0].direction") : _this5.h.hasOwnProperty("directionalLights[0].direction")) {
				var i = 0;
				var dl = this.directionalLights.iterator();
				while(dl.hasNext()) {
					var dl1 = dl.next();
					var m = dl1.data.transform.m;
					var this1 = new Float32Array(4);
					this1[0] = 0;
					this1[1] = 0;
					this1[2] = 1;
					this1[3] = 1;
					var v = this1;
					var this2 = new Float32Array(4);
					this2[0] = 0;
					this2[1] = 0;
					this2[2] = 0;
					this2[3] = 0;
					var dest1 = this2;
					var x = v[0];
					var y = v[1];
					var z = v[2];
					var w = v[3];
					dest1[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;
					dest1[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;
					dest1[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;
					dest1[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;
					var dir = dest1;
					var this3 = new Float32Array(4);
					this3[0] = dir[0];
					this3[1] = dir[1];
					this3[2] = dir[2];
					material.setUniform("directionalLights[" + i + "].direction",mammoth_render_TUniform.Vec3(this3));
					material.setUniform("directionalLights[" + i + "].colour",mammoth_render_TUniform.RGB(dl1.data.light.colour));
					++i;
				}
			}
			var _this6 = material.uniforms;
			if(__map_reserved["pointLights[0].position"] != null ? _this6.existsReserved("pointLights[0].position") : _this6.h.hasOwnProperty("pointLights[0].position")) {
				var i1 = 0;
				var pl = this.pointLights.iterator();
				while(pl.hasNext()) {
					var pl1 = pl.next();
					material.setUniform("pointLights[" + i1 + "].position",mammoth_render_TUniform.Vec3(pl1.data.transform.position));
					material.setUniform("pointLights[" + i1 + "].colour",mammoth_render_TUniform.RGB(pl1.data.light.colour));
					material.setUniform("pointLights[" + i1 + "].distance",mammoth_render_TUniform.Float(pl1.data.light.distance));
					++i1;
				}
			}
			material.apply();
			mammoth_Mammoth.gl.context.bindBuffer(34962,mesh.vertexBuffer);
			var _g = 0;
			var _g1 = mesh.attributeNames;
			while(_g < _g1.length) {
				var attributeName = _g1[_g];
				++_g;
				var _this7 = material.attributes;
				if(!(__map_reserved[attributeName] != null ? _this7.existsReserved(attributeName) : _this7.h.hasOwnProperty(attributeName))) {
					continue;
				}
				var _this8 = material.attributes;
				var attribute = __map_reserved[attributeName] != null ? _this8.getReserved(attributeName) : _this8.h[attributeName];
				mammoth_Mammoth.gl.context.enableVertexAttribArray(attribute.location);
				var _this9 = mammoth_Mammoth.gl;
				var indx = attribute.location;
				var size;
				var _g2 = attribute.type;
				switch(_g2[1]) {
				case 0:
					size = 1;
					break;
				case 1:
					size = 2;
					break;
				case 2:
					size = 3;
					break;
				case 3:
					size = 4;
					break;
				}
				_this9.context.vertexAttribPointer(indx,size,5126,false,attribute.stride,attribute.offset);
			}
			mammoth_Mammoth.gl.context.bindBuffer(34963,mesh.indexBuffer);
			mammoth_Mammoth.gl.context.drawElements(4,mesh.vertexCount,5123,0);
			mammoth_Mammoth.stats.drawCalls++;
			mammoth_Mammoth.stats.triangles += mesh.vertexCount / 3 | 0;
		}
		return true;
	}
	,__class__: mammoth_systems_RenderSystem
};
var mammoth_systems_RenderSystem_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
	system.objects = new edge_View();
	system.directionalLights = new edge_View();
	system.pointLights = new edge_View();
};
mammoth_systems_RenderSystem_$SystemProcess.__name__ = ["mammoth","systems","RenderSystem_SystemProcess"];
mammoth_systems_RenderSystem_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
mammoth_systems_RenderSystem_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
		this.system.objects.tryRemove(entity);
		this.system.directionalLights.tryRemove(entity);
		this.system.pointLights.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.objectsMatchRequirements(entity);
		this.directionalLightsMatchRequirements(entity);
		this.pointLightsMatchRequirements(entity);
		this.updateMatchRequirements(entity);
	}
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.camera);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,objectsMatchRequirements: function(entity) {
		var removed = this.system.objects.tryRemove(entity);
		var count = 2;
		var o = { transform : null, renderer : null};
		var component = entity.map.iterator();
		while(component.hasNext()) {
			var component1 = component.next();
			if(js_Boot.__instanceof(component1,mammoth_components_Transform)) {
				o.transform = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if(js_Boot.__instanceof(component1,mammoth_components_MeshRenderer)) {
				o.renderer = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.system.objects.tryAdd(entity,o);
	}
	,directionalLightsMatchRequirements: function(entity) {
		var removed = this.system.directionalLights.tryRemove(entity);
		var count = 2;
		var o = { transform : null, light : null};
		var component = entity.map.iterator();
		while(component.hasNext()) {
			var component1 = component.next();
			if(js_Boot.__instanceof(component1,mammoth_components_Transform)) {
				o.transform = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if(js_Boot.__instanceof(component1,mammoth_components_DirectionalLight)) {
				o.light = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.system.directionalLights.tryAdd(entity,o);
	}
	,pointLightsMatchRequirements: function(entity) {
		var removed = this.system.pointLights.tryRemove(entity);
		var count = 2;
		var o = { transform : null, light : null};
		var component = entity.map.iterator();
		while(component.hasNext()) {
			var component1 = component.next();
			if(js_Boot.__instanceof(component1,mammoth_components_Transform)) {
				o.transform = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if(js_Boot.__instanceof(component1,mammoth_components_PointLight)) {
				o.light = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.system.pointLights.tryAdd(entity,o);
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 1;
		var o = { camera : null};
		var component = entity.map.iterator();
		while(component.hasNext()) {
			var component1 = component.next();
			if(js_Boot.__instanceof(component1,mammoth_components_Camera)) {
				o.camera = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: mammoth_systems_RenderSystem_$SystemProcess
};
var mammoth_utilities_Colours = function() { };
mammoth_utilities_Colours.__name__ = ["mammoth","utilities","Colours"];
var promhx_base_AsyncBase = function(d,pos) {
	this.parentConstructorPos = [];
	var tmp = promhx_base_AsyncBase;
	tmp.id_ctr += 1;
	this.id = tmp.id_ctr;
	this.constructorPos = pos;
	this._resolved = false;
	this._pending = false;
	this._errorPending = false;
	this._fulfilled = false;
	this._update = [];
	this._error = [];
	this._errored = false;
	if(d != null) {
		var next = this;
		var f = function(x) {
			return x;
		};
		next.parentConstructorPos = d.parentConstructorPos.concat([]);
		next.parentConstructorPos.push(d.constructorPos);
		d._update.push({ async : next, linkf : function(x1) {
			var tmp1 = f(x1);
			next.handleResolve(tmp1);
		}});
		promhx_base_AsyncBase.immediateLinkUpdate(d,next,f);
	}
};
promhx_base_AsyncBase.__name__ = ["promhx","base","AsyncBase"];
promhx_base_AsyncBase.link = function(current,next,f) {
	next.parentConstructorPos = current.parentConstructorPos.concat([]);
	next.parentConstructorPos.push(current.constructorPos);
	current._update.push({ async : next, linkf : function(x) {
		var tmp = f(x);
		next.handleResolve(tmp);
	}});
	promhx_base_AsyncBase.immediateLinkUpdate(current,next,f);
};
promhx_base_AsyncBase.immediateLinkUpdate = function(current,next,f) {
	if(current._errored && !current._errorPending && current._error.length <= 0) {
		next.handleError(current._errorVal);
	}
	if(current._resolved && !current._pending) {
		try {
			next.handleResolve(f(current._val));
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			next.handleError(e);
		}
	}
};
promhx_base_AsyncBase.linkAll = function(all,next) {
	var cthen = function(arr,current,v) {
		if(arr.length == 0 || promhx_base_AsyncBase.allFulfilled(arr)) {
			var _g = [];
			var a = $iterator(all)();
			while(a.hasNext()) {
				var a1 = a.next();
				_g.push(a1 == current ? v : a1._val);
			}
			var vals = _g;
			next.handleResolve(vals);
		}
		return;
	};
	var a2 = $iterator(all)();
	while(a2.hasNext()) {
		var a3 = a2.next();
		var a4 = a3._update;
		var f = [cthen];
		var _g1 = [];
		var a21 = $iterator(all)();
		while(a21.hasNext()) {
			var a22 = a21.next();
			if(a22 != a3) {
				_g1.push(a22);
			}
		}
		var tmp = (function(a23,a11,f1) {
			return function(v1) {
				f1[0](a11[0],a23[0],v1);
				return;
			};
		})([a3],[_g1],f);
		a4.push({ async : next, linkf : tmp});
	}
	if(promhx_base_AsyncBase.allFulfilled(all)) {
		var _g2 = [];
		var a5 = $iterator(all)();
		while(a5.hasNext()) {
			var a6 = a5.next();
			_g2.push(a6._val);
		}
		next.handleResolve(_g2);
	}
};
promhx_base_AsyncBase.pipeLink = function(current,ret,f) {
	var linked = false;
	var linkf = function(x) {
		if(!linked) {
			linked = true;
			var pipe_ret = f(x);
			pipe_ret._update.push({ async : ret, linkf : $bind(ret,ret.handleResolve)});
			promhx_base_AsyncBase.immediateLinkUpdate(pipe_ret,ret,function(x1) {
				return x1;
			});
		}
	};
	current._update.push({ async : ret, linkf : linkf});
	if(current._resolved && !current._pending) {
		try {
			linkf(current._val);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			ret.handleError(e);
		}
	}
};
promhx_base_AsyncBase.allResolved = function($as) {
	var a = $iterator($as)();
	while(a.hasNext()) {
		var a1 = a.next();
		if(!a1._resolved) {
			return false;
		}
	}
	return true;
};
promhx_base_AsyncBase.allFulfilled = function($as) {
	var a = $iterator($as)();
	while(a.hasNext()) {
		var a1 = a.next();
		if(!a1._fulfilled) {
			return false;
		}
	}
	return true;
};
promhx_base_AsyncBase.prototype = {
	catchError: function(f) {
		this._error.push(f);
		return this;
	}
	,handleResolve: function(val) {
		this._resolve(val);
	}
	,_resolve: function(val) {
		var _gthis = this;
		if(this._pending) {
			var f = $bind(this,this._resolve);
			var a1 = val;
			var tmp = function() {
				f(a1);
			};
			promhx_base_EventLoop.queue.add(tmp);
			promhx_base_EventLoop.continueOnNextLoop();
		} else {
			this._resolved = true;
			this._pending = true;
			promhx_base_EventLoop.queue.add(function() {
				_gthis._val = val;
				var _g = 0;
				var _g1 = _gthis._update;
				while(_g < _g1.length) {
					var up = _g1[_g];
					++_g;
					try {
						up.linkf(val);
					} catch( e ) {
						if (e instanceof js__$Boot_HaxeError) e = e.val;
						up.async.handleError(e);
					}
				}
				_gthis._fulfilled = true;
				_gthis._pending = false;
			});
			promhx_base_EventLoop.continueOnNextLoop();
		}
	}
	,handleError: function(error) {
		this._handleError(error);
	}
	,_handleError: function(error) {
		var _gthis = this;
		var update_errors = function(e) {
			if(_gthis._error.length > 0) {
				var _g = 0;
				var _g1 = _gthis._error;
				while(_g < _g1.length) {
					var ef = _g1[_g];
					++_g;
					ef(e);
				}
			} else if(_gthis._update.length > 0) {
				var _g2 = 0;
				var _g11 = _gthis._update;
				while(_g2 < _g11.length) {
					var up = _g11[_g2];
					++_g2;
					up.async.handleError(e);
				}
			} else {
				var stacks = _gthis.parentConstructorPos.concat([]);
				stacks.push(_gthis.constructorPos);
				var set = new haxe_ds_StringMap();
				var i = 0;
				while(i < stacks.length) {
					var key = stacks[i].className + stacks[i].methodName + stacks[i].lineNumber;
					if(__map_reserved[key] != null ? set.existsReserved(key) : set.h.hasOwnProperty(key)) {
						stacks.splice(i,1);
					} else {
						if(__map_reserved[key] != null) {
							set.setReserved(key,true);
						} else {
							set.h[key] = true;
						}
						++i;
					}
				}
				var stackString = "Promise Call Stack:\n\t" + stacks.map(function(s) {
					return "" + s.fileName + ":" + s.lineNumber + " " + s.className + "." + s.methodName + "()";
				}).join("\n\t");
				console.log(stackString);
				throw js__$Boot_HaxeError.wrap(e);
			}
			_gthis._errorPending = false;
		};
		if(!this._errorPending) {
			this._errorPending = true;
			this._errored = true;
			this._errorVal = error;
			promhx_base_EventLoop.queue.add(function() {
				if(_gthis._errorMap != null) {
					try {
						var tmp = _gthis._errorMap(error);
						_gthis._resolve(tmp);
					} catch( e1 ) {
						if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
						update_errors(e1);
					}
				} else {
					update_errors(error);
				}
			});
			promhx_base_EventLoop.continueOnNextLoop();
		}
	}
	,__class__: promhx_base_AsyncBase
};
var promhx_Deferred = $hx_exports["promhx"]["Deferred"] = function() {
	promhx_base_AsyncBase.call(this,null,{ fileName : "Deferred.hx", lineNumber : 7, className : "promhx.Deferred", methodName : "new"});
};
promhx_Deferred.__name__ = ["promhx","Deferred"];
promhx_Deferred.__super__ = promhx_base_AsyncBase;
promhx_Deferred.prototype = $extend(promhx_base_AsyncBase.prototype,{
	resolve: function(val) {
		this.handleResolve(val);
	}
	,promise: function() {
		return new promhx_Promise(this,{ fileName : "Deferred.hx", lineNumber : 20, className : "promhx.Deferred", methodName : "promise"});
	}
	,__class__: promhx_Deferred
});
var promhx_Promise = $hx_exports["promhx"]["Promise"] = function(d,pos) {
	promhx_base_AsyncBase.call(this,d,pos);
	this._rejected = false;
};
promhx_Promise.__name__ = ["promhx","Promise"];
promhx_Promise.__super__ = promhx_base_AsyncBase;
promhx_Promise.prototype = $extend(promhx_base_AsyncBase.prototype,{
	handleResolve: function(val) {
		if(this._resolved) {
			var msg = "Promise has already been resolved";
			throw new js__$Boot_HaxeError(promhx_error_PromiseError.AlreadyResolved(msg));
		}
		this._resolve(val);
	}
	,then: function(f,pos) {
		var ret = new promhx_Promise(null,pos);
		var next = ret;
		var f1 = f;
		next.parentConstructorPos = this.parentConstructorPos.concat([]);
		next.parentConstructorPos.push(this.constructorPos);
		this._update.push({ async : next, linkf : function(x) {
			var tmp = f1(x);
			next.handleResolve(tmp);
		}});
		promhx_base_AsyncBase.immediateLinkUpdate(this,next,f1);
		return ret;
	}
	,handleError: function(error) {
		this._rejected = true;
		this._handleError(error);
	}
	,__class__: promhx_Promise
});
var promhx_base_EventLoop = function() { };
promhx_base_EventLoop.__name__ = ["promhx","base","EventLoop"];
promhx_base_EventLoop.f = function() {
	var fn = promhx_base_EventLoop.queue.pop();
	if(fn != null) {
		fn();
	}
	if(!promhx_base_EventLoop.queue.isEmpty()) {
		promhx_base_EventLoop.continueOnNextLoop();
	}
};
promhx_base_EventLoop.continueOnNextLoop = function() {
	if(promhx_base_EventLoop.nextLoop != null) {
		promhx_base_EventLoop.nextLoop(promhx_base_EventLoop.f);
	} else {
		setImmediate(promhx_base_EventLoop.f);
	}
};
var promhx_error_PromiseError = { __ename__ : true, __constructs__ : ["AlreadyResolved","DownstreamNotFullfilled"] };
promhx_error_PromiseError.AlreadyResolved = function(message) { var $x = ["AlreadyResolved",0,message]; $x.__enum__ = promhx_error_PromiseError; $x.toString = $estr; return $x; };
promhx_error_PromiseError.DownstreamNotFullfilled = function(message) { var $x = ["DownstreamNotFullfilled",1,message]; $x.__enum__ = promhx_error_PromiseError; $x.toString = $estr; return $x; };
var systems_SpinSystem = function() {
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 1;
	this.axis = this1;
	this.__process__ = new systems_SpinSystem_$SystemProcess(this);
};
systems_SpinSystem.__name__ = ["systems","SpinSystem"];
systems_SpinSystem.__interfaces__ = [edge_ISystem];
systems_SpinSystem.prototype = {
	update: function(transform,spin) {
		spin.angle += spin.speed * mammoth_Timing.dt;
		var axis = this.axis;
		var angle = spin.angle;
		var dest = transform.rotation;
		angle *= 0.5;
		var s = Math.sin(angle);
		dest[0] = s * axis[0];
		dest[1] = s * axis[1];
		dest[2] = s * axis[2];
		dest[3] = Math.cos(angle);
		return true;
	}
	,__class__: systems_SpinSystem
};
var systems_SpinSystem_$SystemProcess = function(system) {
	this.system = system;
	this.updateItems = new edge_View();
};
systems_SpinSystem_$SystemProcess.__name__ = ["systems","SpinSystem_SystemProcess"];
systems_SpinSystem_$SystemProcess.__interfaces__ = [edge_core_ISystemProcess];
systems_SpinSystem_$SystemProcess.prototype = {
	removeEntity: function(entity) {
		this.updateItems.tryRemove(entity);
	}
	,addEntity: function(entity) {
		this.updateMatchRequirements(entity);
	}
	,update: function(engine,delta) {
		var result = true;
		var data;
		var item = this.updateItems.iterator();
		while(item.hasNext()) {
			var item1 = item.next();
			data = item1.data;
			result = this.system.update(data.transform,data.spin);
			if(!result) {
				break;
			}
		}
		return result;
	}
	,updateMatchRequirements: function(entity) {
		var removed = this.updateItems.tryRemove(entity);
		var count = 2;
		var o = { transform : null, spin : null};
		var component = entity.map.iterator();
		while(component.hasNext()) {
			var component1 = component.next();
			if(js_Boot.__instanceof(component1,mammoth_components_Transform)) {
				o.transform = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
			if(js_Boot.__instanceof(component1,components_Spin)) {
				o.spin = component1;
				if(--count == 0) {
					break;
				} else {
					continue;
				}
			}
		}
		var added = count == 0 && this.updateItems.tryAdd(entity,o);
	}
	,__class__: systems_SpinSystem_$SystemProcess
};
var thx_Either = { __ename__ : true, __constructs__ : ["Left","Right"] };
thx_Either.Left = function(value) { var $x = ["Left",0,value]; $x.__enum__ = thx_Either; $x.toString = $estr; return $x; };
thx_Either.Right = function(value) { var $x = ["Right",1,value]; $x.__enum__ = thx_Either; $x.toString = $estr; return $x; };
var tusk_Control = function() {
};
tusk_Control.__name__ = ["tusk","Control"];
tusk_Control.prototype = {
	__class__: tusk_Control
};
var tusk_Draw = function() {
	this.numVertices = 0;
	this.buffer = new Float32Array(1536);
	var this1 = new Float32Array(16);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	this1[4] = 0;
	this1[5] = 0;
	this1[6] = 0;
	this1[7] = 0;
	this1[8] = 0;
	this1[9] = 0;
	this1[10] = 0;
	this1[11] = 0;
	this1[12] = 0;
	this1[13] = 0;
	this1[14] = 0;
	this1[15] = 0;
	var dest = this1;
	dest[0] = 1;
	dest[1] = 0;
	dest[2] = 0;
	dest[3] = 0;
	dest[4] = 0;
	dest[5] = 1;
	dest[6] = 0;
	dest[7] = 0;
	dest[8] = 0;
	dest[9] = 0;
	dest[10] = 1;
	dest[11] = 0;
	dest[12] = 0;
	dest[13] = 0;
	dest[14] = 0;
	dest[15] = 1;
	this.vpMatrix = dest;
	this.vpDirty = true;
	this.screenHeight = 1;
	this.screenWidth = 1;
	this.font = tusk_text_Font.fromFontSrc(tusk_Tusk.fontSrc);
};
tusk_Draw.__name__ = ["tusk","Draw"];
tusk_Draw.prototype = {
	set_screenWidth: function(w) {
		if(w != this.screenWidth) {
			this.vpDirty = true;
		}
		return this.screenWidth = w;
	}
	,set_screenHeight: function(h) {
		if(h != this.screenHeight) {
			this.vpDirty = true;
		}
		return this.screenHeight = h;
	}
	,get_vpMatrix: function() {
		if(this.vpDirty) {
			var right = this.screenWidth;
			var bottom = this.screenHeight;
			var dest = this.vpMatrix;
			var rl = 1 / right;
			var tb = 1 / (0 - bottom);
			var fn = 1.;
			dest[0] = 2 * rl;
			dest[4] = 0;
			dest[8] = 0;
			dest[12] = -1 * right * rl;
			dest[1] = 0;
			dest[5] = 2 * tb;
			dest[9] = 0;
			dest[13] = -1 * bottom * tb;
			dest[2] = 0;
			dest[6] = 0;
			dest[10] = -2 * fn;
			dest[14] = -1 * fn;
			dest[3] = 0;
			dest[7] = 0;
			dest[11] = 0;
			dest[15] = 1;
			this.vpDirty = false;
		}
		return this.vpMatrix;
	}
	,newFrame: function() {
		this.numVertices = 0;
	}
	,addVertex: function(x,y,u,v,colour) {
		var i = this.numVertices * 8;
		this.buffer[i] = x;
		this.buffer[i + 1] = y;
		this.buffer[i + 2] = u;
		this.buffer[i + 3] = v;
		this.buffer[i + 4] = colour[0];
		this.buffer[i + 5] = colour[1];
		this.buffer[i + 6] = colour[2];
		this.buffer[i + 7] = colour[3];
		this.numVertices++;
		if(this.numVertices * 8 >= this.buffer.length) {
			var newBuffer = new Float32Array(this.buffer.length + 1536);
			var _g1 = 0;
			var _g = this.buffer.length;
			while(_g1 < _g) {
				var i1 = _g1++;
				newBuffer[i1] = this.buffer[i1];
			}
			this.buffer = newBuffer;
		}
	}
	,text: function(x,y,text,colour) {
		var _gthis = this;
		if(colour == null) {
			colour = tusk_TuskConfig.text_Colour;
		}
		this.font.print(x,y + this.font.ascent,text,function(_x,_y,_u,_v) {
			_gthis.addVertex(_x,_y,_u,_v,colour);
		});
	}
	,window: function(x,y,w,h,title) {
		this.addVertex(x,y + tusk_TuskConfig.window_headerHeight,1,1,tusk_TuskConfig.window_bodyColour);
		this.addVertex(x + w,y + tusk_TuskConfig.window_headerHeight,1,1,tusk_TuskConfig.window_bodyColour);
		this.addVertex(x,y + h,1,1,tusk_TuskConfig.window_bodyColour);
		this.addVertex(x,y + h,1,1,tusk_TuskConfig.window_bodyColour);
		this.addVertex(x + w,y + tusk_TuskConfig.window_headerHeight,1,1,tusk_TuskConfig.window_bodyColour);
		this.addVertex(x + w,y + h,1,1,tusk_TuskConfig.window_bodyColour);
		this.addVertex(x,y,1,1,tusk_TuskConfig.window_headerColour);
		this.addVertex(x + w,y,1,1,tusk_TuskConfig.window_headerColour);
		this.addVertex(x,y + tusk_TuskConfig.window_headerHeight,1,1,tusk_TuskConfig.window_headerColour);
		this.addVertex(x,y + tusk_TuskConfig.window_headerHeight,1,1,tusk_TuskConfig.window_headerColour);
		this.addVertex(x + w,y,1,1,tusk_TuskConfig.window_headerColour);
		this.addVertex(x + w,y + tusk_TuskConfig.window_headerHeight,1,1,tusk_TuskConfig.window_headerColour);
		this.text(Math.floor(x + (w - this.font.textWidth(title)) * 0.5),Math.floor(y + (tusk_TuskConfig.window_headerHeight - this.font.lineHeight) * 0.5),title,tusk_TuskConfig.window_headerTextColour);
	}
	,__class__: tusk_Draw
};
var tusk_text_Font = function(bmFont) {
	this.glyphs = new haxe_ds_IntMap();
	this.base = bmFont.common.base;
	this.lineHeight = bmFont.common.lineHeight;
	this.descent = this.lineHeight - this.base;
	this.ascent = 0;
	var x = bmFont.common.scaleW;
	var y = bmFont.common.scaleH;
	var this1 = new Float32Array(4);
	this1[0] = x;
	this1[1] = y;
	var imSize = this1;
	var _g = 0;
	var _g1 = bmFont.chars;
	while(_g < _g1.length) {
		var $char = _g1[_g];
		++_g;
		var g = new tusk_text_Glyph($char,imSize);
		this.glyphs.h[$char.id] = g;
		var a = this.base - g.size[1];
		if(a > this.ascent) {
			this.ascent = a;
		}
	}
	var _this = this.glyphs;
	var key = HxOverrides.cca("?",0);
	this.unknownGlyph = _this.h[key];
	var _this1 = this.glyphs;
	var key1 = HxOverrides.cca(" ",0);
	this.spaceWidth = _this1.h[key1].xAdvance;
};
tusk_text_Font.__name__ = ["tusk","text","Font"];
tusk_text_Font.fromFontSrc = function(src) {
	return new tusk_text_Font(JSON.parse(src));
};
tusk_text_Font.prototype = {
	textWidth: function(text) {
		var width = 0;
		var maxWidth = 0;
		var _g1 = 0;
		var _g = text.length;
		while(_g1 < _g) {
			var i = _g1++;
			var idx = HxOverrides.cca(text,i);
			if(idx == null) {
				continue;
			}
			var width1;
			switch(idx) {
			case 9:
				width1 = 4 * this.spaceWidth;
				break;
			case 10:
				if(width > maxWidth) {
					maxWidth = width;
				}
				width1 = -1 * width;
				break;
			case 13:
				if(width > maxWidth) {
					maxWidth = width;
				}
				width1 = -1 * width;
				break;
			case 32:
				width1 = this.spaceWidth;
				break;
			default:
				var g = this.glyphs.h[idx];
				if(g == null) {
					g = this.unknownGlyph;
				}
				width1 = g.xAdvance;
			}
			width += width1;
		}
		if(width > maxWidth) {
			maxWidth = width;
		}
		return maxWidth;
	}
	,print: function(x,y,text,addVertex) {
		var _x = x;
		var _y = y;
		var _g1 = 0;
		var _g = text.length;
		while(_g1 < _g) {
			var i = _g1++;
			var idx = HxOverrides.cca(text,i);
			if(idx == null) {
				continue;
			}
			if(idx == HxOverrides.cca(" ",0)) {
				_x += this.spaceWidth;
				continue;
			} else if(idx == HxOverrides.cca("\n",0)) {
				_x = x;
				_y += this.lineHeight;
				continue;
			} else if(idx == HxOverrides.cca("\r",0)) {
				_x = x;
				continue;
			} else if(idx == HxOverrides.cca("\t",0)) {
				_x += this.spaceWidth * 4;
				continue;
			}
			var g = this.glyphs.h[idx];
			if(g == null) {
				g = this.unknownGlyph;
			}
			var x0 = _x + g.offset[0];
			var x1 = x0 + g.size[0];
			var y0 = _y + g.offset[1] - this.base;
			var y1 = y0 + g.size[1];
			addVertex(x0,y0,g.uvMin[0],g.uvMin[1]);
			addVertex(x1,y0,g.uvMax[0],g.uvMin[1]);
			addVertex(x0,y1,g.uvMin[0],g.uvMax[1]);
			addVertex(x0,y1,g.uvMin[0],g.uvMax[1]);
			addVertex(x1,y0,g.uvMax[0],g.uvMin[1]);
			addVertex(x1,y1,g.uvMax[0],g.uvMax[1]);
			_x += g.xAdvance;
		}
	}
	,__class__: tusk_text_Font
};
var tusk_text_Glyph = function($char,imSize) {
	var x = $char.x / imSize[0];
	var y = $char.y / imSize[1];
	var this1 = new Float32Array(4);
	this1[0] = x;
	this1[1] = y;
	this.uvMin = this1;
	var x1 = this.uvMin[0] + $char.width / imSize[0];
	var y1 = this.uvMin[1] + $char.height / imSize[1];
	var this2 = new Float32Array(4);
	this2[0] = x1;
	this2[1] = y1;
	this.uvMax = this2;
	this.xAdvance = $char.xadvance;
	var x2 = $char.width;
	var y2 = $char.height;
	var this3 = new Float32Array(4);
	this3[0] = x2;
	this3[1] = y2;
	this.size = this3;
	var x3 = $char.xoffset;
	var y3 = $char.yoffset;
	var this4 = new Float32Array(4);
	this4[0] = x3;
	this4[1] = y3;
	this.offset = this4;
};
tusk_text_Glyph.__name__ = ["tusk","text","Glyph"];
tusk_text_Glyph.prototype = {
	__class__: tusk_text_Glyph
};
var tusk_Tusk = function() { };
tusk_Tusk.__name__ = ["tusk","Tusk"];
tusk_Tusk.updateInput = function(mx,my,mouseDown) {
	var dest = tusk_Tusk.mousePos;
	dest[0] = mx;
	dest[1] = my;
	tusk_Tusk.mousePressed = mouseDown && !tusk_Tusk.mouseDown;
	tusk_Tusk.mouseReleased = !mouseDown && tusk_Tusk.mouseDown;
	tusk_Tusk.mouseDown = mouseDown;
};
tusk_Tusk.window = function(uuid,x,y,w,h,title) {
	if(!tusk_Tusk.controls.h.hasOwnProperty(uuid)) {
		var _this = tusk_Tusk.controls;
		var value = new tusk_Control();
		_this.h[uuid] = value;
	}
	var control = tusk_Tusk.controls.h[uuid];
	var dest = tusk_Tusk.nextPos;
	dest[0] = x + 2;
	dest[1] = y + 2 + tusk_TuskConfig.window_headerHeight;
	tusk_Tusk.currentWidth = w - 4;
	tusk_Tusk.draw.window(x,y,w,h,title);
};
tusk_Tusk.label = function(text) {
	tusk_Tusk.draw.text(tusk_Tusk.nextPos[0],tusk_Tusk.nextPos[1],text);
	var _g = tusk_Tusk.nextPos;
	_g[1] += tusk_Tusk.draw.font.lineHeight + 4;
};
var tusk_TuskConfig = function() { };
tusk_TuskConfig.__name__ = ["tusk","TuskConfig"];
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = ["String"];
Array.__name__ = ["Array"];
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var DataView = $global.DataView || js_html_compat_DataView;
var Float32Array = $global.Float32Array || js_html_compat_Float32Array._new;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
var global = window;
glm_GLM.EPSILON = 0.0000001;
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ds_ObjectMap.count = 0;
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	$r = this1;
	return $r;
}(this));
js_Boot.__toStr = ({ }).toString;
js_html_compat_Float32Array.BYTES_PER_ELEMENT = 4;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
mammoth_Mammoth.gl = new mammoth_gl_js_Graphics();
mammoth_Mammoth.input = new mammoth_input_js_Input();
mammoth_Mammoth.stats = new mammoth_Stats();
mammoth_Timing.animationFrameID = 0;
mammoth_Timing.time = 0;
mammoth_Timing.lastTime = 0;
mammoth_Timing.accumulator = 0;
mammoth_Timing.dt = 0.0333333333333333329;
mammoth_Timing.alpha = 0;
mammoth_defaults_StandardShader.vertexStandard = "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n// attribute inputs\nattribute vec3 position;\nattribute vec3 normal;\n\n#ifdef ATTRIBUTE_UV\nattribute vec2 uv;\n#endif\n#ifdef ATTRIBUTE_COLOUR\nattribute vec3 colour;\n#endif\n\n// camera uniforms\nuniform mat4 MVP;\nuniform mat4 M;\n\n// material uniforms\nuniform vec3 albedoColour;\nuniform vec3 ambientColour;\n\n// outputs\nvarying vec3 v_position;\nvarying vec3 v_normal;\nvarying vec3 v_colour;\n#ifdef ATTRIBUTE_UV\nvarying vec2 v_uv;\n#endif\n\nvoid main() {\n    // transform position to world space\n    vec3 worldPosition = (M * vec4(position, 1.0)).xyz;\n    v_position = worldPosition;\n\n\t// transform normals into world space\n\tvec3 worldNormal = (M * vec4(normal, 0.0)).xyz;\n    v_normal = worldNormal;\n\t\n    vec3 colour = albedoColour * ambientColour;\n\n    v_colour = colour;\n    #ifdef ATTRIBUTE_UV\n\tv_uv = uv;\n    #endif\n\n    // set the camera-space position of the vertex\n\tgl_Position = MVP * vec4(position, 1.0);\n}";
mammoth_defaults_StandardShader.fragmentStandard = "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n// lights\n#ifdef UNIFORM_DIRECTIONAL_LIGHTS\nstruct SDirectionalLight {\n    vec3 direction;\n    vec3 colour;\n};\nuniform SDirectionalLight directionalLights[NUMBER_DIRECTIONAL_LIGHTS];\n#endif\n#ifdef UNIFORM_POINT_LIGHTS\nstruct SPointLight {\n    vec3 position;\n    vec3 colour;\n    float distance;\n};\nuniform SPointLight pointLights[NUMBER_POINT_LIGHTS];\n#endif\n\n// material uniforms\nuniform vec3 albedoColour;\nuniform vec3 ambientColour;\n\n// inputs\nvarying vec3 v_position;\nvarying vec3 v_normal;\nvarying vec3 v_colour;\n#ifdef ATTRIBUTE_UV\nvarying vec2 v_uv;\n#endif\n\n#ifdef UNIFORM_TEXTURE\nuniform sampler2D texture;\n#endif\n\nvoid main() {\n    // base colour from vertex shader\n    vec3 colour = v_colour;\n\n    #ifdef UNIFORM_DIRECTIONAL_LIGHTS\n\t// sun diffuse term\n\tfloat dLight0 = clamp(dot(v_normal, directionalLights[0].direction), 0.0, 1.0);\n    colour += directionalLights[0].colour * dLight0 * albedoColour;\n    #endif\n\n    #ifdef UNIFORM_POINT_LIGHTS\n    vec3 pLightDir0 = pointLights[0].position - v_position;\n    float pDist0 = length(pLightDir0);\n\tfloat pLight0 = clamp(dot(v_normal, pLightDir0), 0.0, 1.0) * pointLights[0].distance / (pDist0 * pDist0);\n    colour += pointLights[0].colour * pLight0 * albedoColour;\n    #endif\n\n    vec4 outColour = vec4(colour, 1.0);\n    #ifdef UNIFORM_TEXTURE\n    outColour *= texture2D(texture, v_uv);\n    #endif\n\n    // gamma\n    gl_FragColor = vec4(pow(outColour.rgb, vec3(1.0/2.2)), outColour.a);\n}";
mammoth_loader_Loader.cameras = new haxe_ds_StringMap();
mammoth_loader_Loader.lights = new haxe_ds_StringMap();
mammoth_loader_Loader.shaders = new haxe_ds_StringMap();
mammoth_loader_Loader.meshes = new haxe_ds_StringMap();
mammoth_utilities_Colours.Black = (function($this) {
	var $r;
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 1;
	$r = this1;
	return $r;
}(this));
mammoth_utilities_Colours.White = (function($this) {
	var $r;
	var this1 = new Float32Array(4);
	this1[0] = 1;
	this1[1] = 1;
	this1[2] = 1;
	this1[3] = 1;
	$r = this1;
	return $r;
}(this));
promhx_base_AsyncBase.id_ctr = 0;
promhx_base_EventLoop.queue = new List();
tusk_Tusk.vertexShaderSrc = "precision mediump float;\n\nattribute vec2 position;\nattribute vec2 uv;\nattribute vec4 colour;\n\nuniform mat4 VP;\n\nvarying vec2 v_uv;\nvarying vec4 v_colour;\n\nvoid main() {\n    v_colour = colour;\n\tv_uv = uv;\n\tgl_Position = VP * vec4(position, 0, 1.0);\n}";
tusk_Tusk.fragmentShaderSrc = "precision mediump float;\n\nvarying vec2 v_uv;\nvarying vec4 v_colour;\n\nuniform sampler2D texture;\n\nvoid main() {\n    gl_FragColor = texture2D(texture, v_uv) * v_colour;\n}";
tusk_Tusk.fontTextureSrc = "data:image/png;base64," + "iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAD8GlDQ1BJQ0MgUHJvZmlsZQAAOI2NVd1v21QUP4lvXKQWP6Cxjg4Vi69VU1u5GxqtxgZJk6XpQhq5zdgqpMl1bhpT1za2021Vn/YCbwz4A4CyBx6QeEIaDMT2su0BtElTQRXVJKQ9dNpAaJP2gqpwrq9Tu13GuJGvfznndz7v0TVAx1ea45hJGWDe8l01n5GPn5iWO1YhCc9BJ/RAp6Z7TrpcLgIuxoVH1sNfIcHeNwfa6/9zdVappwMknkJsVz19HvFpgJSpO64PIN5G+fAp30Hc8TziHS4miFhheJbjLMMzHB8POFPqKGKWi6TXtSriJcT9MzH5bAzzHIK1I08t6hq6zHpRdu2aYdJYuk9Q/881bzZa8Xrx6fLmJo/iu4/VXnfH1BB/rmu5ScQvI77m+BkmfxXxvcZcJY14L0DymZp7pML5yTcW61PvIN6JuGr4halQvmjNlCa4bXJ5zj6qhpxrujeKPYMXEd+q00KR5yNAlWZzrF+Ie+uNsdC/MO4tTOZafhbroyXuR3Df08bLiHsQf+ja6gTPWVimZl7l/oUrjl8OcxDWLbNU5D6JRL2gxkDu16fGuC054OMhclsyXTOOFEL+kmMGs4i5kfNuQ62EnBuam8tzP+Q+tSqhz9SuqpZlvR1EfBiOJTSgYMMM7jpYsAEyqJCHDL4dcFFTAwNMlFDUUpQYiadhDmXteeWAw3HEmA2s15k1RmnP4RHuhBybdBOF7MfnICmSQ2SYjIBM3iRvkcMki9IRcnDTthyLz2Ld2fTzPjTQK+Mdg8y5nkZfFO+se9LQr3/09xZr+5GcaSufeAfAww60mAPx+q8u/bAr8rFCLrx7s+vqEkw8qb+p26n11Aruq6m1iJH6PbWGv1VIY25mkNE8PkaQhxfLIF7DZXx80HD/A3l2jLclYs061xNpWCfoB6WHJTjbH0mV35Q/lRXlC+W8cndbl9t2SfhU+Fb4UfhO+F74GWThknBZ+Em4InwjXIyd1ePnY/Psg3pb1TJNu15TMKWMtFt6ScpKL0ivSMXIn9QtDUlj0h7U7N48t3i8eC0GnMC91dX2sTivgloDTgUVeEGHLTizbf5Da9JLhkhh29QOs1luMcScmBXTIIt7xRFxSBxnuJWfuAd1I7jntkyd/pgKaIwVr3MgmDo2q8x6IdB5QH162mcX7ajtnHGN2bov71OU1+U0fqqoXLD0wX5ZM005UHmySz3qLtDqILDvIL+iH6jB9y2x83ok898GOPQX3lk3Itl0A+BrD6D7tUjWh3fis58BXDigN9yF8M5PJH4B8Gr79/F/XRm8m241mw/wvur4BGDj42bzn+Vmc+NL9L8GcMn8F1kAcXgSteGGAAAPdklEQVR4Ae2c4XbdyA2D056+/yu3QbyfgouQ1Eiy3bV35odJggA44pVvNjk9/fFjn72BvYG9gR///XlYAznxDFdfXD+uEe41uSIax8AnzD3hgWWkv+rLnYjo8aX2mD20iU93QOO+8Luec30WfI9wnQf26AXAkHiY/ky4AJhzulxc71X1hOVMcTnpK7zC4K9G9/A8/dXTcd+pnnrp4VzPndfmZwL182AmXDkRPGP2vfb8TOd915FnFF9YHvd5ksvX9Vdr1ypPvferHhjxjsc4lAswgAjOQOE6jpNPOD0iGmKHqz/10Htc4YvDOdOK5xzlYBnhgVOjEa7j+EoPvmt/GdkPOG1McRLN60grjjD3qmp0zvM8NdlDnzzHu7zycszzM//kMjPxqzU+VXQv5XkqjTDxqt6/Af/183ieAvoZ0XRRPmiU63TcDpe+0gnDW1rVedLT+dmr6o6vOV2v8rmLaU6n1Xw/zpt03vsPIoEyo1aeGL2MbriqkQczPBdGrciBS7+aQw+N3wusipMue5U+MWl8tnuA5/3B8UIzecGt4l1d5fUlsVyoHkIYp3so9b2Xtfe+av4dn+nls6geMDGvu1ym3nsZ8oULf6bjj4B8WL6CeE6JEkMD7sbovEdOj+i65HS9CU8P5qxEaTtv6bue4+LlHbzvPcdTlz3vTz3xvO/z1CuPC0TIuhKtcFxX8RPz2vPqTmd9n41eGp3srdSp89pzZuH5Xj380t/xqjfNf/kGSCOvZeJvUtbVYGGuUZ467/s8z6VJL++v5Dk36xWP9+KsPPN7zZLPNO94AURi0Tk8l5U1/GmQcyo9syuPCsPP4yrPNcrzPl57Djf11DyD6rt3wYs4eU496bu+3+14ASTwRieGp77zha+cSZd+qv0e8k/Oykx07vXEh5nuxwzv3Z2BR3o6ftbzft7TfY5/CJpILiDXw3Ua4Rz4isK6pUy4ehz3y1z+jmWNh6LzpvwKd/LxXt7Le5+R+/zjG0AP6o2VB0eT3AqXd/L8Yc/6zlXOXTtdh6cPNX7Ud6J7+LOyDzy9J6zTZU91aoXlmeZd3Ut6L9f+UMuiIF71gE90u8S89lyarN3nu+XHHwHf5cH04XW/JXywxO/yzE+e43gBcilVLUznzsA35e+f7vEbXfeWRh5E/PLrD1yRXveCONfz7n6O5z2k7/qJu9ZzPLjLSg8OMT2q+pe/BDrVMMdbg58N53leabzvOfMrjfeq3H08r7yyX/md6dLDa89Xvd9jHnOJZ57HN0B3ySs4v2EafvW37MqcFS53WeF+d47vIj+b428BWgLEJx/epPW3cuLd/UDSM+vON5eStXQVBo6vz1P+0c/L3JXIffyO0r28AAIgKn/vk8NX/H2J4t/xWJlzl+P3yZdk6t2dd1fH3Yj4/PEC0FiN+QFJ5w++6lPxJp98ENf7nfAgwvNaOX5EeH+nePee/kzu8fJsvjQ1qlqYzoswiq7f4cxSXyfs2nKFu8LxAR1fOGfii0MfPhHco/MTv6uTT/qe1T77UZ6DHpn9JZ48p57k3leeJ++nfmLUUw/OPzp+xILwJFYLvtv7aK/K/2+PaZkcv6wwrzOf+vhNHPll/6z2OySXXofTz3iVL700nPTzfvbQEOmrJq/i1Pee5+kz9Q6ukzw/CH8lV3pXuDnnrK68HVOuc+ZzpZ9+U+09zzXPa8+v3CW5qz4vfwuYRN7Tf0n6QO8Jzz7cxFMH72msfDW7ws9mpebuM6RumuszXQfuGD5TTxz10XmO/uUtREAT864Gzzjpznrqc9L3bi2/1DKj6okLntF76Umv88YLndee4wOvqrue+3ieHsc3gN6OJLr5nTw9eQNXvJyre3m9ol/hpG/WZx7T89Gr7k3vzP9pX88jj+oOeB8vwBkRQUaGgOewrOE9id3MDn8y60x79/lcl/c+m7naZ4b8yVP78gJk02u/ZJp5PQ1zP2nc03tTnv7pcecu07yP6vm9/c7TPDS5g0mjHrs+nSNjP2fG6ovvvLPauV0+eVzpub90nBXcOV0uP+9l7b2Pyn2m56vzjm8AiU/fkFXXh7y8R9Z37DuPDr8z4/+h0f354O88y/G/B8BIZjr+MCv1L9HPH34JdPQqT+d4v8une3aaOzj3Qps1eBeT77XyPOlDHzxrcEXtRMcx5a5RTt9zsD+ikzwX0WvP/zAJrvfRZaw4jmWOPvGuFp/jnA4TRz3nkifutedXPCbuWY97JW+6y8sfAW5QvVHe/+icSyu+1106L3BFfy7Npec4OX3qq3HyvuqVfN+Z58lbrlkOcVXo/CoHI8qXPOPZTPjwvFbuBw6RHrWiMI/eO8vRwjurOx64x/Ty3ofmdwdLp5OXAyPSpyaCr0RpOMkXnlhXJzfrTue4NH7oOUZOT1GY155nb6rV43Qexx8BIojsxPzqyBqu6ypOhUkLTsQvo/yTA0Z0jbjCHaMmpp9zlWffazxc431wx1zjONyPiJfm+AWvXCZ1WV/xcq58OI4rF+7R+2jgZM9rzyu+96e80053mfzUQwsva3C4Hr1X5X7fl786vDR+vj4u7nrC9aZVfcfwyrcSPX2PVQ+MOPGdo9y5yrkLPKJ6E1/9J+c9vVe8/Lnae6eR157LwGvPs9cOs0bqrdWmaIgt8UKj8gIjXrAbqfhlHEUnTbycJkzHscwf/5bL0IfwW5WDsnYNvVWt+NKLT8TjveJ0v5xZ1X6PfK4zb2ld43zHxfOeap3kvKH1z5f/CHRhPlQtf0Nd5zw8iN5DU/WEOVc5fHBqovBJN/Xw9Oi+jp/lPkceXqOdvCfN5KXe5MvsjMc/BcvAj5vlpbyXhl6jI3pv5/UG9BmoQ4SVNThx+kwm7fENMBloyNT3AclTrb5H+bmGPLXiVQe+equaysexzlN43l06x90HrmOed3PgVM9TYfBX4qQ/XoAVo4rDIuh1deLTpfCqYvpkXWnOsPTIutLr/vAUnUPPMeXwwbMGX40+d9rnNOflBZgMvacLTgN5AAYTwb9S5DmJfncwovfu5L5j96zw3GnWzHctmMfjBUgDr8mJbqBceGKqeQiicypNxXMNeaWldzd+hGd1l26OcH9+r4V7XflW2IrmeAEqg1UsL35Ht6oR7+68acYVT+d2nnCI8LzWBwSe0XnZo570cDxWL8TLCzAZ0qtMfIjnaBxbebAVjnuST7qph/6rRX+mbteOO59nfXkBnOBCkdUT5hxMpjjxfcbEm/w/uud3ZBZ3Xe3BR/+Z8Wz2ywtw52I5IOvJs+P6YpMz1ZXOMd0l9RWWnKz9mbqecM32vufVXPdNrffeMz/+IWjVVBfTucq/omFRxNVZ8InoVHOu3AP9Z0TdT3fjqGauMOVE5d7P2nnqZS2Mc3wDTIb0iIiJPiA5WaNRdJ3qiZv8M674K8fv0HlOnKlXzZ/43fwOr/zBNGdFd7wACK/GHJR157dyOdemb9bOXc3TI2t8prtOPfTE9M8a3mqUHu6Ve6BRPP4IcDM1qlqYjvqr503x++eq7p/Gy716TU7UbpTrQ+d4T33hiQnPc3wDIPAImWFdDZ5RXolR3/VE/5kxF+nP1fXA8zk/8958ltPM4wUQCYE/4CT+qN7d5XU6cJ7xyr2nXdztXZnvd57mXfWE//IC8LYSId2N6ZN153v3QStdhXVzvyOu59feT58tSV57LqOqFqbjg6Z66rmH59JwHH+S46foPlN9peeeyqXleE9YV9Mj4tPxHT/Lj2+A/E3JejK6wp18znrTHJZTcejJP/tZn91hpf8Z83Tvac7KPS9xNIyzKhTfuV57Lk7WrjvLXet5pTvro0leV3d45wNeRXlxqv4VDB/FSXd8A4jk5PzNyNpNJ53zPD97gydP9ab7+Bzl7jX1rnhy/yuavEdqs867Xqnd6+q+fs3Jy64Od53n0md9x7PS4Et0TmJZd9zkZS3dCjZxqp7fx3NxOY4rF15h8Ks+/PYbAALRTfztUt978BXF817qnJu567wHXnkxz3tg7uE5fo49zd3T7+K458xzLHVT7T15yccx92XWHzFJXnvOAAymHpwuSstxjrD3rN3L85U51f3wSL3wCkt+xUnMa8/xIqqnQ018Q3//BM94fAPojamMEHS9Mx36jPLLt5T6iafm4JMzsz6bc+ZT9SuMuT6PfTofDH4XfXfu6Xz3dfxWvnqxylxajvfBPHp/yqWZ+tm7yk/9Z9Rnd1Sfk/cRnthq3f5bfRr4kNW3Sxrneu15zppq6ei7N9h7xuqO3XzHdYc7d3OPK/or98z9vLwATy6AsV/c/c76rhPXtdnDy2PHB6881Ktw961ydERxPO9qvO7MRJtRc8HwPbsL/JfoRmpk/UK2Inlee26S0zR1WadB9s/q1Fe1PHSy94b+/kk/uV57Ln7WeHQx+VmnLvtZO//43wM4mHkaZJ18ar2R4nLAn0b5PfHgPh7Tj98mx8UXzvHe3Vyers3aex+RH38L+AhzeWpZlbce1HtZVxphLGiVX/n43Kr/1TE9H3vSs0zPe7wAV0S+oLs698h88qSniA7Ma3IWUb0wFYbuavT7SOv1dL+rc1b5Pn9V0/JYIoSswTMmz2vPpcs6vT671n04PhtM0fG7efpkja9wP+BP4/ENMBnlGzxxv0uv+w3qcH04XW/ayepuO++cW9U+v/P5xZFYCdGFXZ5crz2vfNX3wwxh5KmbenCT47h6HJ/xNMeTWPmpV+FPsPT0mpxYzTm+AUTibfRYid4LG9/GG0N4Bkk9Vz3NgptROg491Z7TV/QZHcf5q7m84PoMsCfxeAHcxAcK52HAVy8hHhr3f5Lj6fGJn7TyqiK+PD91N9ufFU9pHCf3Pr5VzNkVZwU79eFixDR1vMul8d7kkT2v0yNrcSes6rn/lXzy8p7nnf8Kx7Xi+/Ge585RTo+cCN5GiIo6LdEayatqYTomO03fFL9/pqDyc8zz1F6tK68KO/P9DI3PICee3e9WP82zvmW6IKrmJJb1gm1LcS/PW0HRuKoT309h+QuaON5T3nk8wn3II6ML4uphwLjPBbtPoXK/K8PuaK74H/+adkW0uZ+7AX8JVv/j8XNvuKftDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewN7A3sDewNvM8G9P8+9j/F/74lnR/s0AAAAABJRU5ErkJggg==";
tusk_Tusk.fontSrc = "{\n  \"pages\": [\n    \"coderscrux.png\"\n  ],\n  \"chars\": [\n    {\n      \"id\": 33,\n      \"x\": 2,\n      \"y\": 2,\n      \"width\": 1,\n      \"height\": 7,\n      \"xoffset\": 2,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 34,\n      \"x\": 5,\n      \"y\": 2,\n      \"width\": 3,\n      \"height\": 2,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 35,\n      \"x\": 10,\n      \"y\": 2,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 36,\n      \"x\": 17,\n      \"y\": 2,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 37,\n      \"x\": 24,\n      \"y\": 2,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 38,\n      \"x\": 31,\n      \"y\": 2,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 39,\n      \"x\": 38,\n      \"y\": 2,\n      \"width\": 1,\n      \"height\": 2,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 40,\n      \"x\": 41,\n      \"y\": 2,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 41,\n      \"x\": 46,\n      \"y\": 2,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 42,\n      \"x\": 51,\n      \"y\": 2,\n      \"width\": 5,\n      \"height\": 3,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 43,\n      \"x\": 58,\n      \"y\": 2,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 1,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 44,\n      \"x\": 65,\n      \"y\": 2,\n      \"width\": 1,\n      \"height\": 2,\n      \"xoffset\": 2,\n      \"yoffset\": 6,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 45,\n      \"x\": 68,\n      \"y\": 2,\n      \"width\": 5,\n      \"height\": 1,\n      \"xoffset\": 0,\n      \"yoffset\": 3,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 46,\n      \"x\": 75,\n      \"y\": 2,\n      \"width\": 1,\n      \"height\": 1,\n      \"xoffset\": 2,\n      \"yoffset\": 6,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 47,\n      \"x\": 78,\n      \"y\": 2,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 48,\n      \"x\": 85,\n      \"y\": 2,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 49,\n      \"x\": 92,\n      \"y\": 2,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 50,\n      \"x\": 97,\n      \"y\": 2,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 51,\n      \"x\": 104,\n      \"y\": 2,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 52,\n      \"x\": 111,\n      \"y\": 2,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 53,\n      \"x\": 118,\n      \"y\": 2,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 54,\n      \"x\": 68,\n      \"y\": 5,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 55,\n      \"x\": 51,\n      \"y\": 7,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 56,\n      \"x\": 58,\n      \"y\": 9,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 57,\n      \"x\": 2,\n      \"y\": 11,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 58,\n      \"x\": 125,\n      \"y\": 2,\n      \"width\": 1,\n      \"height\": 3,\n      \"xoffset\": 2,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 59,\n      \"x\": 9,\n      \"y\": 11,\n      \"width\": 2,\n      \"height\": 4,\n      \"xoffset\": 1,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 60,\n      \"x\": 13,\n      \"y\": 11,\n      \"width\": 4,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 61,\n      \"x\": 19,\n      \"y\": 11,\n      \"width\": 5,\n      \"height\": 3,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 62,\n      \"x\": 26,\n      \"y\": 11,\n      \"width\": 4,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 63,\n      \"x\": 32,\n      \"y\": 11,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 64,\n      \"x\": 39,\n      \"y\": 11,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 65,\n      \"x\": 75,\n      \"y\": 11,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 66,\n      \"x\": 82,\n      \"y\": 11,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 67,\n      \"x\": 89,\n      \"y\": 11,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 68,\n      \"x\": 96,\n      \"y\": 11,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 69,\n      \"x\": 103,\n      \"y\": 11,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 70,\n      \"x\": 110,\n      \"y\": 11,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 71,\n      \"x\": 117,\n      \"y\": 11,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 72,\n      \"x\": 65,\n      \"y\": 14,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 73,\n      \"x\": 46,\n      \"y\": 11,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 74,\n      \"x\": 19,\n      \"y\": 16,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 75,\n      \"x\": 51,\n      \"y\": 16,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 76,\n      \"x\": 39,\n      \"y\": 18,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 77,\n      \"x\": 58,\n      \"y\": 18,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 78,\n      \"x\": 2,\n      \"y\": 20,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 79,\n      \"x\": 9,\n      \"y\": 20,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 80,\n      \"x\": 26,\n      \"y\": 20,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 81,\n      \"x\": 72,\n      \"y\": 20,\n      \"width\": 5,\n      \"height\": 9,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 82,\n      \"x\": 79,\n      \"y\": 20,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 83,\n      \"x\": 86,\n      \"y\": 20,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 84,\n      \"x\": 93,\n      \"y\": 20,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 85,\n      \"x\": 100,\n      \"y\": 20,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 86,\n      \"x\": 107,\n      \"y\": 20,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 87,\n      \"x\": 114,\n      \"y\": 20,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 88,\n      \"x\": 121,\n      \"y\": 20,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 89,\n      \"x\": 65,\n      \"y\": 23,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 90,\n      \"x\": 16,\n      \"y\": 25,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 91,\n      \"x\": 33,\n      \"y\": 20,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 92,\n      \"x\": 46,\n      \"y\": 25,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 93,\n      \"x\": 53,\n      \"y\": 25,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 94,\n      \"x\": 38,\n      \"y\": 27,\n      \"width\": 5,\n      \"height\": 3,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 95,\n      \"x\": 58,\n      \"y\": 27,\n      \"width\": 5,\n      \"height\": 1,\n      \"xoffset\": 0,\n      \"yoffset\": 6,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 96,\n      \"x\": 5,\n      \"y\": 6,\n      \"width\": 3,\n      \"height\": 3,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 97,\n      \"x\": 2,\n      \"y\": 29,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 98,\n      \"x\": 9,\n      \"y\": 29,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 99,\n      \"x\": 23,\n      \"y\": 29,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 100,\n      \"x\": 30,\n      \"y\": 29,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 101,\n      \"x\": 79,\n      \"y\": 29,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 102,\n      \"x\": 86,\n      \"y\": 29,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 103,\n      \"x\": 93,\n      \"y\": 29,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 104,\n      \"x\": 100,\n      \"y\": 29,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 105,\n      \"x\": 107,\n      \"y\": 29,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 106,\n      \"x\": 112,\n      \"y\": 29,\n      \"width\": 4,\n      \"height\": 9,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 107,\n      \"x\": 118,\n      \"y\": 29,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 108,\n      \"x\": 58,\n      \"y\": 30,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 109,\n      \"x\": 72,\n      \"y\": 31,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 110,\n      \"x\": 37,\n      \"y\": 32,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 111,\n      \"x\": 63,\n      \"y\": 32,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 112,\n      \"x\": 16,\n      \"y\": 34,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 113,\n      \"x\": 44,\n      \"y\": 34,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 114,\n      \"x\": 51,\n      \"y\": 34,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 115,\n      \"x\": 2,\n      \"y\": 36,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 116,\n      \"x\": 23,\n      \"y\": 36,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 117,\n      \"x\": 79,\n      \"y\": 36,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 118,\n      \"x\": 9,\n      \"y\": 38,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 119,\n      \"x\": 30,\n      \"y\": 38,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 120,\n      \"x\": 70,\n      \"y\": 38,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 121,\n      \"x\": 86,\n      \"y\": 38,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 122,\n      \"x\": 93,\n      \"y\": 38,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 123,\n      \"x\": 100,\n      \"y\": 38,\n      \"width\": 4,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 124,\n      \"x\": 125,\n      \"y\": 7,\n      \"width\": 1,\n      \"height\": 7,\n      \"xoffset\": 2,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 125,\n      \"x\": 106,\n      \"y\": 38,\n      \"width\": 4,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 126,\n      \"x\": 118,\n      \"y\": 38,\n      \"width\": 5,\n      \"height\": 2,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 161,\n      \"x\": 125,\n      \"y\": 29,\n      \"width\": 1,\n      \"height\": 7,\n      \"xoffset\": 2,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 162,\n      \"x\": 37,\n      \"y\": 39,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 1,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 163,\n      \"x\": 58,\n      \"y\": 39,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 164,\n      \"x\": 51,\n      \"y\": 41,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 1,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 165,\n      \"x\": 112,\n      \"y\": 42,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 166,\n      \"x\": 125,\n      \"y\": 38,\n      \"width\": 1,\n      \"height\": 7,\n      \"xoffset\": 2,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 167,\n      \"x\": 2,\n      \"y\": 43,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 168,\n      \"x\": 46,\n      \"y\": 20,\n      \"width\": 3,\n      \"height\": 1,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 169,\n      \"x\": 16,\n      \"y\": 43,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 170,\n      \"x\": 65,\n      \"y\": 39,\n      \"width\": 3,\n      \"height\": 3,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 171,\n      \"x\": 44,\n      \"y\": 43,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 1,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 172,\n      \"x\": 77,\n      \"y\": 43,\n      \"width\": 5,\n      \"height\": 2,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 173,\n      \"x\": 119,\n      \"y\": 42,\n      \"width\": 3,\n      \"height\": 1,\n      \"xoffset\": 1,\n      \"yoffset\": 3,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 174,\n      \"x\": 9,\n      \"y\": 45,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 175,\n      \"x\": 23,\n      \"y\": 45,\n      \"width\": 5,\n      \"height\": 1,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 176,\n      \"x\": 65,\n      \"y\": 44,\n      \"width\": 3,\n      \"height\": 3,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 177,\n      \"x\": 30,\n      \"y\": 45,\n      \"width\": 5,\n      \"height\": 6,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 178,\n      \"x\": 70,\n      \"y\": 45,\n      \"width\": 5,\n      \"height\": 3,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 179,\n      \"x\": 93,\n      \"y\": 45,\n      \"width\": 5,\n      \"height\": 3,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 180,\n      \"x\": 124,\n      \"y\": 16,\n      \"width\": 2,\n      \"height\": 2,\n      \"xoffset\": 2,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 181,\n      \"x\": 77,\n      \"y\": 47,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 182,\n      \"x\": 84,\n      \"y\": 47,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 183,\n      \"x\": 75,\n      \"y\": 5,\n      \"width\": 1,\n      \"height\": 1,\n      \"xoffset\": 2,\n      \"yoffset\": 3,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 184,\n      \"x\": 119,\n      \"y\": 45,\n      \"width\": 3,\n      \"height\": 2,\n      \"xoffset\": 1,\n      \"yoffset\": 7,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 185,\n      \"x\": 100,\n      \"y\": 47,\n      \"width\": 3,\n      \"height\": 3,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 186,\n      \"x\": 105,\n      \"y\": 47,\n      \"width\": 3,\n      \"height\": 3,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 187,\n      \"x\": 23,\n      \"y\": 48,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 1,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 188,\n      \"x\": 37,\n      \"y\": 48,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 189,\n      \"x\": 51,\n      \"y\": 48,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 190,\n      \"x\": 58,\n      \"y\": 48,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 191,\n      \"x\": 119,\n      \"y\": 49,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 192,\n      \"x\": 16,\n      \"y\": 50,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 193,\n      \"x\": 44,\n      \"y\": 50,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 194,\n      \"x\": 65,\n      \"y\": 50,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 195,\n      \"x\": 91,\n      \"y\": 50,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 196,\n      \"x\": 110,\n      \"y\": 51,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 197,\n      \"x\": 2,\n      \"y\": 52,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 198,\n      \"x\": 9,\n      \"y\": 52,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 199,\n      \"x\": 98,\n      \"y\": 52,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 200,\n      \"x\": 30,\n      \"y\": 53,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 201,\n      \"x\": 23,\n      \"y\": 55,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 202,\n      \"x\": 72,\n      \"y\": 56,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 203,\n      \"x\": 79,\n      \"y\": 56,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 204,\n      \"x\": 105,\n      \"y\": 52,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 205,\n      \"x\": 86,\n      \"y\": 56,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 206,\n      \"x\": 37,\n      \"y\": 57,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 207,\n      \"x\": 51,\n      \"y\": 57,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 208,\n      \"x\": 56,\n      \"y\": 57,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 209,\n      \"x\": 117,\n      \"y\": 58,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 210,\n      \"x\": 16,\n      \"y\": 59,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 211,\n      \"x\": 42,\n      \"y\": 59,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 212,\n      \"x\": 63,\n      \"y\": 59,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 213,\n      \"x\": 91,\n      \"y\": 59,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 214,\n      \"x\": 110,\n      \"y\": 60,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 215,\n      \"x\": 2,\n      \"y\": 61,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 1,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 216,\n      \"x\": 9,\n      \"y\": 61,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 217,\n      \"x\": 98,\n      \"y\": 61,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 218,\n      \"x\": 30,\n      \"y\": 62,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 219,\n      \"x\": 23,\n      \"y\": 64,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 220,\n      \"x\": 70,\n      \"y\": 65,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 221,\n      \"x\": 77,\n      \"y\": 65,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 222,\n      \"x\": 84,\n      \"y\": 65,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 223,\n      \"x\": 49,\n      \"y\": 66,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 224,\n      \"x\": 56,\n      \"y\": 66,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 225,\n      \"x\": 117,\n      \"y\": 67,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 226,\n      \"x\": 2,\n      \"y\": 68,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 227,\n      \"x\": 16,\n      \"y\": 68,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 228,\n      \"x\": 37,\n      \"y\": 68,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 229,\n      \"x\": 63,\n      \"y\": 68,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 230,\n      \"x\": 91,\n      \"y\": 68,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 231,\n      \"x\": 105,\n      \"y\": 69,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 232,\n      \"x\": 9,\n      \"y\": 70,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 233,\n      \"x\": 98,\n      \"y\": 70,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 234,\n      \"x\": 30,\n      \"y\": 71,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 235,\n      \"x\": 23,\n      \"y\": 73,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 236,\n      \"x\": 44,\n      \"y\": 68,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 237,\n      \"x\": 112,\n      \"y\": 69,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 238,\n      \"x\": 56,\n      \"y\": 73,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 239,\n      \"x\": 70,\n      \"y\": 74,\n      \"width\": 3,\n      \"height\": 7,\n      \"xoffset\": 1,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 240,\n      \"x\": 75,\n      \"y\": 74,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 241,\n      \"x\": 82,\n      \"y\": 74,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 242,\n      \"x\": 117,\n      \"y\": 74,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 243,\n      \"x\": 2,\n      \"y\": 75,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 244,\n      \"x\": 16,\n      \"y\": 75,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 245,\n      \"x\": 37,\n      \"y\": 75,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 246,\n      \"x\": 49,\n      \"y\": 75,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 247,\n      \"x\": 61,\n      \"y\": 75,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 1,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 248,\n      \"x\": 89,\n      \"y\": 75,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 249,\n      \"x\": 105,\n      \"y\": 76,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 250,\n      \"x\": 9,\n      \"y\": 77,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 251,\n      \"x\": 96,\n      \"y\": 77,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 252,\n      \"x\": 30,\n      \"y\": 78,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 253,\n      \"x\": 23,\n      \"y\": 80,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 254,\n      \"x\": 82,\n      \"y\": 81,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 255,\n      \"x\": 112,\n      \"y\": 81,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 338,\n      \"x\": 119,\n      \"y\": 81,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 339,\n      \"x\": 2,\n      \"y\": 82,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 366,\n      \"x\": 16,\n      \"y\": 82,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 367,\n      \"x\": 37,\n      \"y\": 82,\n      \"width\": 5,\n      \"height\": 5,\n      \"xoffset\": 0,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 376,\n      \"x\": 44,\n      \"y\": 82,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 7838,\n      \"x\": 51,\n      \"y\": 82,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 8212,\n      \"x\": 58,\n      \"y\": 82,\n      \"width\": 5,\n      \"height\": 1,\n      \"xoffset\": 0,\n      \"yoffset\": 3,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 8216,\n      \"x\": 38,\n      \"y\": 6,\n      \"width\": 1,\n      \"height\": 2,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 8217,\n      \"x\": 65,\n      \"y\": 6,\n      \"width\": 1,\n      \"height\": 2,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 8218,\n      \"x\": 65,\n      \"y\": 10,\n      \"width\": 1,\n      \"height\": 2,\n      \"xoffset\": 2,\n      \"yoffset\": 6,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 8219,\n      \"x\": 72,\n      \"y\": 14,\n      \"width\": 1,\n      \"height\": 2,\n      \"xoffset\": 2,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 8220,\n      \"x\": 72,\n      \"y\": 50,\n      \"width\": 3,\n      \"height\": 2,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 8221,\n      \"x\": 105,\n      \"y\": 61,\n      \"width\": 3,\n      \"height\": 2,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 8222,\n      \"x\": 105,\n      \"y\": 65,\n      \"width\": 3,\n      \"height\": 2,\n      \"xoffset\": 1,\n      \"yoffset\": 6,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 8224,\n      \"x\": 89,\n      \"y\": 82,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 8226,\n      \"x\": 44,\n      \"y\": 77,\n      \"width\": 3,\n      \"height\": 3,\n      \"xoffset\": 1,\n      \"yoffset\": 2,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 8230,\n      \"x\": 65,\n      \"y\": 83,\n      \"width\": 5,\n      \"height\": 1,\n      \"xoffset\": 0,\n      \"yoffset\": 6,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 8249,\n      \"x\": 72,\n      \"y\": 83,\n      \"width\": 3,\n      \"height\": 5,\n      \"xoffset\": 1,\n      \"yoffset\": 1,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 8250,\n      \"x\": 77,\n      \"y\": 83,\n      \"width\": 3,\n      \"height\": 5,\n      \"xoffset\": 1,\n      \"yoffset\": 1,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 8364,\n      \"x\": 103,\n      \"y\": 83,\n      \"width\": 5,\n      \"height\": 7,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 8482,\n      \"x\": 9,\n      \"y\": 84,\n      \"width\": 5,\n      \"height\": 2,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    },\n    {\n      \"id\": 32,\n      \"x\": 0,\n      \"y\": 0,\n      \"width\": 0,\n      \"height\": 0,\n      \"xoffset\": 0,\n      \"yoffset\": 0,\n      \"xadvance\": 6,\n      \"page\": 0,\n      \"chnl\": 15\n    }\n  ],\n  \"kernings\": [],\n  \"info\": {\n    \"face\": null,\n    \"size\": 16,\n    \"bold\": 0,\n    \"italic\": 0,\n    \"charset\": null,\n    \"undefined\": 100,\n    \"smooth\": 1,\n    \"aa\": 1,\n    \"padding\": [\n      2,\n      2,\n      2,\n      2\n    ],\n    \"spacing\": [\n      0,\n      0\n    ],\n    \"outline\": 0\n  },\n  \"common\": {\n    \"lineHeight\": 9,\n    \"base\": 7,\n    \"scaleW\": 128,\n    \"scaleH\": 128,\n    \"pages\": 1,\n    \"packed\": 0\n  }\n}\n";
tusk_Tusk.draw = new tusk_Draw();
tusk_Tusk.controls = new haxe_ds_IntMap();
tusk_Tusk.mousePos = (function($this) {
	var $r;
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	$r = this1;
	return $r;
}(this));
tusk_Tusk.mousePressed = false;
tusk_Tusk.mouseDown = false;
tusk_Tusk.mouseReleased = false;
tusk_Tusk.nextPos = (function($this) {
	var $r;
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	$r = this1;
	return $r;
}(this));
tusk_Tusk.currentWidth = 0;
tusk_TuskConfig.text_Colour = (function($this) {
	var $r;
	var this1 = new Float32Array(4);
	this1[0] = 1;
	this1[1] = 1;
	this1[2] = 1;
	this1[3] = 1;
	$r = this1;
	return $r;
}(this));
tusk_TuskConfig.window_headerHeight = 16;
tusk_TuskConfig.window_headerColour = (function($this) {
	var $r;
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0.75;
	$r = this1;
	return $r;
}(this));
tusk_TuskConfig.window_headerTextColour = (function($this) {
	var $r;
	var this1 = new Float32Array(4);
	this1[0] = 1;
	this1[1] = 1;
	this1[2] = 1;
	this1[3] = 1;
	$r = this1;
	return $r;
}(this));
tusk_TuskConfig.window_bodyColour = (function($this) {
	var $r;
	var this1 = new Float32Array(4);
	this1[0] = 0;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0.5;
	$r = this1;
	return $r;
}(this));
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=game.js.map