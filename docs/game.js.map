{
"version":3,
"file":"game.js",
"sourceRoot":"file:///",
"sources":["C:/HaxeToolkit/haxe/std/js/_std/EReg.hx","C:/HaxeToolkit/haxe/std/js/_std/HxOverrides.hx","C:/HaxeToolkit/haxe/std/List.hx","D:/Projects/personal/woolly/src/Main.hx","C:/HaxeToolkit/haxe/std/js/_std/Std.hx","C:/HaxeToolkit/haxe/std/StringTools.hx","C:/HaxeToolkit/haxe/std/js/_std/Type.hx","D:/Projects/personal/woolly/src/components/Spin.hx","C:/HaxeToolkit/haxe/lib/edge/git/src/edge/Engine.hx","C:/HaxeToolkit/haxe/lib/edge/git/src/edge/Entity.hx","C:/HaxeToolkit/haxe/lib/edge/git/src/edge/Phase.hx","C:/HaxeToolkit/haxe/lib/edge/git/src/edge/View.hx","C:/HaxeToolkit/haxe/lib/edge/git/src/edge/core/NodeSystem.hx","C:/HaxeToolkit/haxe/lib/edge/git/src/edge/core/NodeSystemIterator.hx","C:/HaxeToolkit/haxe/std/haxe/CallStack.hx","C:/HaxeToolkit/haxe/std/haxe/Int64.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/io/Bytes.hx","C:/HaxeToolkit/haxe/std/haxe/crypto/Base64.hx","C:/HaxeToolkit/haxe/std/haxe/crypto/BaseCode.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/IntMap.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/ObjectMap.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/StringMap.hx","C:/HaxeToolkit/haxe/std/haxe/io/FPHelper.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/io/Float32Array.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/io/Int32Array.hx","C:/HaxeToolkit/haxe/std/js/Boot.hx","C:/HaxeToolkit/haxe/std/js/html/CanvasElement.hx","C:/HaxeToolkit/haxe/std/js/html/compat/ArrayBuffer.hx","C:/HaxeToolkit/haxe/std/js/html/compat/DataView.hx","C:/HaxeToolkit/haxe/std/js/html/compat/Float32Array.hx","C:/HaxeToolkit/haxe/std/js/html/compat/Uint8Array.hx","D:/Projects/personal/woolly/src/mammoth/Log.hx","D:/Projects/personal/woolly/src/mammoth/platform/js/Assets.hx","D:/Projects/personal/woolly/src/mammoth/gl/js/Graphics.hx","D:/Projects/personal/woolly/src/mammoth/platform/js/Input.hx","D:/Projects/personal/woolly/src/mammoth/Stats.hx","D:/Projects/personal/woolly/src/mammoth/platform/js/Timing.hx","D:/Projects/personal/woolly/src/mammoth/Mammoth.hx","D:/Projects/personal/woolly/src/tusk/Control.hx","D:/Projects/personal/woolly/src/mammoth/components/Camera.hx","D:/Projects/personal/woolly/src/mammoth/components/DirectionalLight.hx","D:/Projects/personal/woolly/src/mammoth/components/MeshRenderer.hx","D:/Projects/personal/woolly/src/mammoth/components/PointLight.hx","D:/Projects/personal/woolly/src/mammoth/components/Transform.hx","D:/Projects/personal/woolly/src/mammoth/debug/DebugView.hx","D:/Projects/personal/woolly/src/mammoth/debug/Exception.hx","D:/Projects/personal/woolly/src/mammoth/defaults/StandardShader.hx","D:/Projects/personal/woolly/src/mammoth/loader/Loader.hx","D:/Projects/personal/woolly/src/mammoth/render/Attribute.hx","D:/Projects/personal/woolly/src/mammoth/render/Material.hx","D:/Projects/personal/woolly/src/mammoth/render/Mesh.hx","D:/Projects/personal/woolly/src/mammoth/render/Uniform.hx","D:/Projects/personal/woolly/src/mammoth/systems/CameraSystem.hx","C:/HaxeToolkit/haxe/lib/edge/git/src/edge/core/macro/BuildSystem.hx","C:/HaxeToolkit/haxe/lib/edge/git/src/edge/core/macro/Macros.hx","C:/HaxeToolkit/haxe/lib/edge/git/src/edge/core/macro/BuildSystemProcess.hx","D:/Projects/personal/woolly/src/mammoth/systems/ModelMatrixSystem.hx","D:/Projects/personal/haxe-glm/src/glm/Quat.hx","D:/Projects/personal/woolly/src/mammoth/systems/PreTransformSystem.hx","D:/Projects/personal/woolly/src/mammoth/systems/RenderSystem.hx","C:/HaxeToolkit/haxe/lib/promhx/1,1,0/src/main/promhx/base/AsyncBase.hx","C:/HaxeToolkit/haxe/lib/promhx/1,1,0/src/main/promhx/Deferred.hx","C:/HaxeToolkit/haxe/lib/promhx/1,1,0/src/main/promhx/Promise.hx","C:/HaxeToolkit/haxe/lib/promhx/1,1,0/src/main/promhx/base/EventLoop.hx","D:/Projects/personal/woolly/src/systems/SpinSystem.hx","D:/Projects/personal/woolly/src/tusk/Draw.hx","D:/Projects/personal/woolly/src/tusk/text/Font.hx","D:/Projects/personal/woolly/src/tusk/text/Glyph.hx","D:/Projects/personal/woolly/src/tusk/Tusk.hx","D:/Projects/personal/haxe-glm/src/glm/GLM.hx","D:/Projects/personal/woolly/src/mammoth/macros/StandardShader.hx","D:/Projects/personal/woolly/src/mammoth/utilities/Colours.hx","D:/Projects/personal/woolly/src/tusk/macros/FileContents.hx","D:/Projects/personal/woolly/src/tusk/TuskConfig.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : HaxeRegExp;\n\n\tpublic inline function new( r : String, opt : String ) : Void {\n\t\tthis.r = new HaxeRegExp(r, opt.split(\"u\").join(\"\")); // 'u' (utf8) depends on page encoding\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic inline function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n}\n\n@:native(\"RegExp\")\nprivate extern class HaxeRegExp extends js.RegExp {\n\tvar m:js.RegExp.RegExpMatch;\n\tvar s:String;\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn js.Lib.undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif (len == null) {\n\t\t\tlen = s.length;\n\t\t} else if (len < 0) {\n\t\t\tif (pos == 0)\n\t\t\t\tlen = s.length + len;\n\t\t\telse\n\t\t\t\treturn \"\";\n\t\t}\n\n\t\t#if (js_es < 5)\n\t\tif (pos < 0) {\n\t\t\tpos = s.length + pos;\n\t\t\tif (pos < 0)\n\t\t\t\tpos = 0;\n\t\t}\n\t\t#end\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if (js_es < 5)\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tA linked-list of elements. The list is composed of element container objects\n\tthat are chained together. It is optimized so that adding or removing an\n\telement does not imply copying the whole list content every time.\n\n\t@see https://haxe.org/manual/std-List.html\n**/\nclass List<T> {\n\n\tprivate var h : ListNode<T>;\n\tprivate var q : ListNode<T>;\n\n\t/**\n\t\tThe length of `this` List.\n\t**/\n\tpublic var length(default,null) : Int;\n\n\t/**\n\t\tCreates a new empty list.\n\t**/\n\tpublic function new() {\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tAdds element `item` at the end of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function add( item : T ) {\n\t\tvar x = ListNode.create(item, null);\n\t\tif( h == null )\n\t\t\th = x;\n\t\telse\n\t\t\tq.next = x;\n\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tAdds element `item` at the beginning of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function push( item : T ) {\n\t\tvar x = ListNode.create(item, h);\n\t\th = x;\n\t\tif( q == null )\n\t\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function first() : Null<T> {\n\t\treturn if( h == null ) null else h.item;\n\t}\n\n\t/**\n\t\tReturns the last element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function last() : Null<T> {\n\t\treturn if( q == null ) null else q.item;\n\t}\n\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThe element is removed from `this` List.\n\t**/\n\tpublic function pop() : Null<T> {\n\t\tif( h == null )\n\t\t\treturn null;\n\t\tvar x = h.item;\n\t\th = h.next;\n\t\tif( h == null )\n\t\t\tq = null;\n\t\tlength--;\n\t\treturn x;\n\t}\n\n\t/**\n\t\tTells if `this` List is empty.\n\t**/\n\tpublic function isEmpty() : Bool {\n\t\treturn (h == null);\n\t}\n\n\t/**\n\t\tEmpties `this` List.\n\n\t\tThis function does not traverse the elements, but simply sets the\n\t\tinternal references to null and `this.length` to 0.\n\t**/\n\tpublic function clear() : Void {\n\t\th = null;\n\t\tq = null;\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tRemoves the first occurence of `v` in `this` List.\n\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\n\t\tList and the function returns true.\n\n\t\tOtherwise, false is returned.\n\t**/\n\tpublic function remove( v : T ) : Bool {\n\t\tvar prev:ListNode<T> = null;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( l.item == v ) {\n\t\t\t\tif( prev == null )\n\t\t\t\t\th = l.next;\n\t\t\t\telse\n\t\t\t\t\tprev.next = l.next;\n\t\t\t\tif( q == l )\n\t\t\t\t\tq = prev;\n\t\t\t\tlength--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l.next;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tReturns an iterator on the elements of the list.\n\t**/\n\tpublic inline function iterator() : ListIterator<T> {\n\t\treturn new ListIterator<T>(h);\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List.\n\n\t\tThe result is enclosed in { } with the individual elements being\n\t\tseparated by a comma.\n\t**/\n\tpublic function toString() {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\ts.add(\"{\");\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(\", \");\n\t\t\ts.add(Std.string(l.item));\n\t\t\tl = l.next;\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List, with `sep` separating\n\t\teach element.\n\t**/\n\tpublic function join(sep : String) {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(sep);\n\t\t\ts.add(l.item);\n\t\t\tl = l.next;\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a list filtered with `f`. The returned list will contain all\n\t\telements for which `f(x) == true`.\n\t**/\n\tpublic function filter( f : T -> Bool ) {\n\t\tvar l2 = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l.item;\n\t\t\tl = l.next;\n\t\t\tif( f(v) )\n\t\t\t\tl2.add(v);\n\t\t}\n\t\treturn l2;\n\t}\n\n\t/**\n\t\tReturns a new list where all elements have been converted by the\n\t\tfunction `f`.\n\t**/\n\tpublic function map<X>(f : T -> X) : List<X> {\n\t\tvar b = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l.item;\n\t\t\tl = l.next;\n\t\t\tb.add(f(v));\n\t\t}\n\t\treturn b;\n\t}\n\n}\n\n#if neko\nprivate extern class ListNode<T> extends neko.NativeArray<Dynamic> {\n\tvar item(get,set):T;\n\tvar next(get,set):ListNode<T>;\n\tprivate inline function get_item():T return this[0];\n\tprivate inline function set_item(v:T):T return this[0] = v;\n\tprivate inline function get_next():ListNode<T> return this[1];\n\tprivate inline function set_next(v:ListNode<T>):ListNode<T> return this[1] = v;\n\tinline static function create<T>(item:T, next:ListNode<T>):ListNode<T> {\n\t\treturn untyped __dollar__array(item, next);\n\t}\n}\n#else\nprivate class ListNode<T> {\n\tpublic var item:T;\n\tpublic var next:ListNode<T>;\n\tpublic function new(item:T, next:ListNode<T>) {\n\t\tthis.item = item;\n\t\tthis.next = next;\n\t}\n\t@:extern public inline static function create<T>(item:T, next:ListNode<T>):ListNode<T> {\n\t\treturn new ListNode(item, next);\n\t}\n}\n#end\n\nprivate class ListIterator<T> {\n\tvar head:ListNode<T>;\n\n\tpublic inline function new(head:ListNode<T>) {\n\t\tthis.head = head;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn head != null;\n\t}\n\n\tpublic inline function next():T {\n\t\tvar val = head.item;\n\t\thead = head.next;\n\t\treturn val;\n\t}\n}\n","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage;\r\n\r\nimport mammoth.Mammoth;\r\nimport mammoth.AssetList;\r\nimport mammoth.Log;\r\n\r\nclass Main {\r\n    public static function main() {\r\n        Mammoth.init(onReady);\r\n    }\r\n\r\n    private static function onReady():Void {\r\n        Log.info(\"Loading...\");\r\n        Mammoth.assets.loadJSON(AssetList.asset___iso__json)\r\n            .then(function(data:Dynamic) {\r\n                mammoth.loader.Loader.load(data);\r\n                Log.info(\"Done!\");\r\n\r\n                // print all the objects\r\n                for(entity in Mammoth.engine.entities()) {\r\n                    var t:mammoth.components.Transform = entity.get(mammoth.components.Transform);\r\n                    if(t != null) {\r\n                        if(t.name == 'Cube') {\r\n                            mammoth.Log.info('Adding spin to \"Cube\"!');\r\n                            var spin:components.Spin = new components.Spin();\r\n                            spin.angle = 0;\r\n                            spin.speed = Math.PI / 10;\r\n                            entity.add(spin);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                Mammoth.updatePhase.add(new systems.SpinSystem());\r\n\r\n                Mammoth.begin();\r\n            })\r\n            .catchError(function(e:Dynamic) {\r\n                Log.error(e);\r\n            });\r\n        Mammoth.begin();\r\n    }\r\n}\r\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\t@:pure\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\t@:pure\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static inline function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if (js_es < 5)\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t`using StringTools` and then acts as an [extension](https://haxe.org/manual/lf-static-extension.html)\n\tto the `String` class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\n#if cpp\nusing cpp.NativeString;\n#end\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua) inline #end public static function urlEncode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"encodeURIComponent\"](s);\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped encodeURIComponent(s);\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLEncode();\n\t\t#elseif java\n\t\t\treturn postProcessUrlEncode(java.net.URLEncoder.encode(s, \"UTF-8\"));\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.EscapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.quote(s, \"\");\n\t\t#elseif hl\n\t\t\tvar len = 0;\n\t\t\tvar b = @:privateAccess s.bytes.urlEncode(len);\n\t\t\treturn @:privateAccess String.__alloc__(b,len);\n\t\t#elseif lua\n\t\t\ts = lua.NativeStringTools.gsub(s, \"\\n\", \"\\r\\n\");\n\t\t\ts = lua.NativeStringTools.gsub(s, \"([^%w %-%_%.%~])\", function (c) {\n\t\t\t\treturn lua.NativeStringTools.format(\"%%%02X\", lua.NativeStringTools.byte(c) + '');\n\t\t\t});\n\t\t\ts = lua.NativeStringTools.gsub(s, \" \", \"+\");\n\t\t\treturn s;\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n#if java\n\tprivate static function postProcessUrlEncode( s : String ) : String {\n\t\tvar ret = new StringBuf();\n\t\tvar i = 0,\n\t\t    len = s.length;\n\t\twhile (i < len) {\n\t\t\tswitch(_charAt(s, i++)) {\n\t\t\tcase '+'.code:\n\t\t\t\tret.add('%20');\n\t\t\tcase '%'.code if (i <= len - 2):\n\t\t\t\tvar c1 = _charAt(s, i++),\n\t\t\t\t    c2 = _charAt(s, i++);\n\t\t\t\tswitch[c1, c2] {\n\t\t\t\tcase ['2'.code, '1'.code]:\n\t\t\t\t\tret.addChar('!'.code);\n\t\t\t\tcase ['2'.code, '7'.code]:\n\t\t\t\t\tret.addChar('\\''.code);\n\t\t\t\tcase ['2'.code, '8'.code]:\n\t\t\t\t\tret.addChar('('.code);\n\t\t\t\tcase ['2'.code, '9'.code]:\n\t\t\t\t\tret.addChar(')'.code);\n\t\t\t\tcase ['7'.code, 'E'.code] | ['7'.code, 'e'.code]:\n\t\t\t\t\tret.addChar('~'.code);\n\t\t\t\tcase _:\n\t\t\t\t\tret.addChar('%'.code);\n\t\t\t\t\tret.addChar(cast c1);\n\t\t\t\t\tret.addChar(cast c2);\n\t\t\t\t}\n\t\t\tcase chr:\n\t\t\t\tret.addChar(cast chr);\n\t\t\t}\n\t\t}\n\t\treturn ret.toString();\n\t}\n#end\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua) inline #end public static function urlDecode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLDecode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLDecoder.decode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.UnescapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.unquote(s);\n\t\t#elseif hl\n\t\t\tvar len = 0;\n\t\t\tvar b = @:privateAccess s.bytes.urlDecode(len);\n\t\t\treturn @:privateAccess String.__alloc__(b,len);\n\t\t#elseif lua\n\t\t\ts = lua.NativeStringTools.gsub (s, \"+\", \" \");\n\t\t\ts = lua.NativeStringTools.gsub (s, \"%%(%x%x)\",\n\t\t\t\tfunction(h) {return lua.NativeStringTools.char(lua.Lua.tonumber(h,16));});\n\t\t\ts = lua.NativeStringTools.gsub (s, \"\\r\\n\", \"\\n\");\n\t\t\treturn s;\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape( s : String, ?quotes : Bool ) : String {\n\t\ts = s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t\treturn quotes ? s.split('\"').join(\"&quot;\").split(\"'\").join(\"&#039;\") : s;\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: `htmlUnescape(htmlEscape(s)) == s`\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape( s : String ) : String {\n\t\treturn s.split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\").split(\"&quot;\").join('\"').split(\"&#039;\").join(\"'\").split(\"&amp;\").join(\"&\");\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is `null`, the result is unspecified.\n\n\t\tIf `start` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function startsWith( s : String, start : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#elseif cpp\n\t\tif (s.length<start.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str();\n\t\tvar p1 = start.c_str();\n\t\tfor(i in 0...start.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#elseif hl\n\t\treturn @:privateAccess (s.length >= start.length && s.bytes.compare(0,start.bytes,0,start.length<<1) == 0);\n\t\t#else\n\t\treturn( s.length >= start.length && s.substr(0, start.length) == start );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is `null`, the result is unspecified.\n\n\t\tIf `end` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function endsWith( s : String, end : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#elseif cpp\n\t\tif (s.length<end.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str().add( s.length-end.length );\n\t\tvar p1 = end.c_str();\n\t\tfor(i in 0...end.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#elseif hl\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn @:privateAccess (slen >= elen && s.bytes.compare((slen - elen) << 1, end.bytes, 0, elen << 1) == 0);\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn( slen >= elen && s.substr(slen - elen, elen) == end );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String `\"\"`, or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace( s : String, pos : Int ) : Bool {\n\t\t#if (python || lua)\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length) return false;\n\t\t#end\n\t\tvar c = s.charCodeAt( pos );\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic #if cs inline #end static function ltrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,r) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 )\n\t\t\treturn s.substr(r, l-r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic #if cs inline #end static function rtrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,l-r-1) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 ){\n\t\t\treturn s.substr(0, l-r);\n\t\t}else{\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for `ltrim(rtrim(s))`.\n\t**/\n\tpublic #if (cs || java) inline #end static function trim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn untyped s.trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = c + s;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = s + c;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReplace all occurences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String `\"\"`, `by` is inserted after each character\n\t\tof `s`. If `by` is also the empty String `\"\"`, `s` remains unchanged.\n\n\t\tThis is a convenience function for `s.split(sub).join(by)`.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace( s : String, sub : String, by : String ) : String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits `length` equals `digits`.\n\t**/\n\tpublic static function hex( n : Int, ?digits : Int ) {\n\t\t#if flash\n\t\t\tvar n : UInt = n;\n\t\t\tvar s : String = untyped n.toString(16);\n\t\t\ts = s.toUpperCase();\n\t\t#else\n\t\t\tvar s = \"\";\n\t\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\t\tdo {\n\t\t\t\ts = hexChars.charAt(n&15) + s;\n\t\t\t\tn >>>= 4;\n\t\t\t} while( n > 0 );\n\t\t#end\n\t\t#if python\n\t\tif (digits != null && s.length < digits) {\n\t\t\tvar diff = digits - s.length;\n\t\t\tfor (_ in 0...diff) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t}\n\t\t#else\n\t\tif( digits != null )\n\t\t\twhile( s.length < digits )\n\t\t\t\ts = \"0\"+s;\n\t\t#end\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than `String.charCodeAt()` on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tEnd of file status can be checked by calling `StringTools.isEof()` with\n\t\tthe returned value as argument.\n\n\t\tThis operation is not guaranteed to work if `s` contains the `\\0`\n\t\tcharacter.\n\t**/\n\tpublic static inline function fastCodeAt( s : String, index : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn ( index < s.length ) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn ( cast(index, UInt) < s.length ) ? cast(s[index], Int) : -1;\n\t\t#elseif js\n\t\treturn (untyped s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn if (index >= s.length) -1 else python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#elseif hl\n\t\treturn @:privateAccess s.bytes.getUI16(index << 1);\n\t\t#elseif lua\n\t\treturn lua.NativeStringTools.byte(s,index+1);\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/*\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t*/\n\t@:noUsing public static inline function isEof( c : Int ) : Bool {\n\t\t#if (flash || cpp || hl)\n\t\treturn c == 0;\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif (neko || lua)\n\t\treturn c == null;\n\t\t#elseif cs\n\t\treturn c == -1;\n\t\t#elseif java\n\t\treturn c == -1;\n\t\t#elseif python\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Unix.\n\t\tThe input will be quoted, or escaped if necessary.\n\t*/\n\tpublic static function quoteUnixArg(argument:String):String {\n\t\t// Based on cpython's shlex.quote().\n\t\t// https://hg.python.org/cpython/file/a3f076d4f54f/Lib/shlex.py#l278\n\n\t\tif (argument == \"\")\n\t\t\treturn \"''\";\n\n\t\tif (!~/[^a-zA-Z0-9_@%+=:,.\\/-]/.match(argument))\n\t\t\treturn argument;\n\n\t\t// use single quotes, and put single quotes into double quotes\n\t\t// the string $'b is then quoted as '$'\"'\"'b'\n\t\treturn \"'\" + replace(argument, \"'\", \"'\\\"'\\\"'\") + \"'\";\n\t}\n\n\t/**\n\t\tCharacter codes of the characters that will be escaped by `quoteWinArg(_, true)`.\n\t*/\n\tpublic static var winMetaCharacters = [\" \".code, \"(\".code, \")\".code, \"%\".code, \"!\".code, \"^\".code, \"\\\"\".code, \"<\".code, \">\".code, \"&\".code, \"|\".code, \"\\n\".code, \"\\r\".code, \",\".code, \";\".code];\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Windows.\n\t\tThe input will be quoted, or escaped if necessary, such that the output\n\t\twill be parsed as a single argument using the rule specified in\n\t\thttp://msdn.microsoft.com/en-us/library/ms880421\n\n\t\tExamples:\n\t\t```\n\t\tquoteWinArg(\"abc\") == \"abc\";\n\t\tquoteWinArg(\"ab c\") == '\"ab c\"';\n\t\t```\n\t*/\n\tpublic static function quoteWinArg(argument:String, escapeMetaCharacters:Bool):String {\n\t\t// If there is no space, tab, back-slash, or double-quotes, and it is not an empty string.\n\t\tif (!~/^[^ \\t\\\\\"]+$/.match(argument)) {\n\n\t\t\t// Based on cpython's subprocess.list2cmdline().\n\t\t\t// https://hg.python.org/cpython/file/50741316dd3a/Lib/subprocess.py#l620\n\n\t\t\tvar result = new StringBuf();\n\t\t\tvar needquote = argument.indexOf(\" \") != -1 || argument.indexOf(\"\\t\") != -1 || argument == \"\";\n\n\t\t\tif (needquote)\n\t\t\t\tresult.add('\"');\n\n\t\t\tvar bs_buf = new StringBuf();\n\t\t\tfor (i in 0...argument.length) {\n\t\t\t\tswitch (argument.charCodeAt(i)) {\n\t\t\t\t\tcase \"\\\\\".code:\n\t\t\t\t\t\t// Don't know if we need to double yet.\n\t\t\t\t\t\tbs_buf.add(\"\\\\\");\n\t\t\t\t\tcase '\"'.code:\n\t\t\t\t\t\t// Double backslashes.\n\t\t\t\t\t\tvar bs = bs_buf.toString();\n\t\t\t\t\t\tresult.add(bs);\n\t\t\t\t\t\tresult.add(bs);\n\t\t\t\t\t\tbs_buf = new StringBuf();\n\t\t\t\t\t\tresult.add('\\\\\"');\n\t\t\t\t\tcase c:\n\t\t\t\t\t\t// Normal char\n\t\t\t\t\t\tif (bs_buf.length > 0) {\n\t\t\t\t\t\t\tresult.add(bs_buf.toString());\n\t\t\t\t\t\t\tbs_buf = new StringBuf();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.addChar(c);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add remaining backslashes, if any.\n\t\t\tresult.add(bs_buf.toString());\n\n\t\t\tif (needquote) {\n\t\t\t\tresult.add(bs_buf.toString());\n\t\t\t\tresult.add('\"');\n\t\t\t}\n\n\t\t\targument = result.toString();\n\t\t}\n\n\t\tif (escapeMetaCharacters) {\n\t\t\tvar result = new StringBuf();\n\t\t\tfor (i in 0...argument.length) {\n\t\t\t\tvar c = argument.charCodeAt(i);\n\t\t\t\tif (winMetaCharacters.indexOf(c) >= 0) {\n\t\t\t\t\tresult.addChar(\"^\".code);\n\t\t\t\t}\n\t\t\t\tresult.addChar(c);\n\t\t\t}\n\t\t\treturn result.toString();\n\t\t} else {\n\t\t\treturn argument;\n\t\t}\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16 return untyped str._charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\",\"url_encode\",1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\",\"url_decode\",1);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static inline function getClass<T>( o : T ) : Class<T> {\n\t\treturn if (o == null) null else @:privateAccess js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn o.__enum__;\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\tif (a == null)\n\t\t\treturn null;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tcase 9:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);\n\t\tcase 10:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);\n\t\tcase 11:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);\n\t\tcase 12:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);\n\t\tcase 13:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);\n\t\tcase 14:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t}\n\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f:Dynamic = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"__meta__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static inline function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\treturn ((cast e).__constructs__ : Array<String>).copy();\n\t}\n\n\tpublic static function typeof( v : Dynamic ) : ValueType untyped {\n\t\tswitch( __js__(\"typeof\")(v) ) {\n\t\tcase \"boolean\": return TBool;\n\t\tcase \"string\": return TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null )\n\t\t\t\treturn TEnum(e);\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\treturn untyped e[0];\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\treturn untyped e[1];\n\t}\n\n\tpublic inline static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped __define_feature__(\"Type.allEnums\", e.__empty_constructs__);\n\t}\n\n}\n\n","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage components;\r\n\r\nimport edge.IComponent;\r\n\r\nclass Spin implements IComponent {\r\n    public var angle:Float = 0.0;\r\n    public var speed:Float = 0.0;\r\n\r\n    public function new(){}\r\n}","package edge;\r\n\r\nimport edge.Entity;\r\n\r\n@:access(edge.Entity)\r\n@:access(edge.ISystem)\r\nclass Engine {\r\n  var mapEntities : Map<Entity, Bool>;\r\n  var listPhases : Array<Phase>;\r\n  public function new() {\r\n    mapEntities = new Map();\r\n    listPhases = [];\r\n  }\r\n\r\n  public function create(?components : Array<{}>) {\r\n    var entity = new Entity(this, components);\r\n    mapEntities.set(entity, true);\r\n    matchSystems(entity);\r\n    return entity;\r\n  }\r\n\r\n  public function clear()\r\n    for(entity in mapEntities.keys())\r\n      remove(entity);\r\n\r\n  function remove(entity : Entity) {\r\n    eachSystem(function(system) system.__process__.removeEntity(entity));\r\n    mapEntities.remove(entity);\r\n    entity.engine = null;\r\n  }\r\n\r\n  public function entities()\r\n    return mapEntities.keys();\r\n\r\n  public function createPhase() {\r\n    var phase = new Phase(this);\r\n    listPhases.push(phase);\r\n    return phase;\r\n  }\r\n\r\n  public function phases()\r\n    return listPhases.iterator();\r\n\r\n  public function eachSystem(f : ISystem -> Void) {\r\n    for(phase in listPhases)\r\n      for(system in phase.systems())\r\n        f(system);\r\n  }\r\n\r\n  // private methods\r\n  function addSystem(system : ISystem) {\r\n    eachSystem(\r\n      function(s)\r\n        if(s == system)\r\n          throw 'System \"$system\" already exists in Engine');\r\n    for(entity in mapEntities.keys())\r\n      match(entity, system);\r\n  }\r\n\r\n  // TODO, remove all together, not one at the time\r\n  function removeSystem(system : ISystem)\r\n    for(entity in mapEntities.keys())\r\n      system.__process__.removeEntity(entity);\r\n\r\n  function updateSystem(system : ISystem, t : Float)\r\n    return system.__process__.update(this, t);\r\n\r\n  function matchSystems(entity : Entity)\r\n    eachSystem(function(system) match(entity, system));\r\n\r\n  inline function match(entity : Entity, system : ISystem)\r\n    system.__process__.addEntity(entity);\r\n}\r\n","package edge;\r\n\r\nusing thx.Arrays;\r\nusing thx.Functions;\r\n\r\n@:access(edge.Engine)\r\nclass Entity {\r\n  var map : Map<String, {}>;\r\n  public var engine(default, null) : Engine;\r\n  function new(engine : Engine, ?components : Array<{}>) {\r\n    this.engine = engine;\r\n    this.map = new Map();\r\n    if(null != components)\r\n      addMany(components);\r\n  }\r\n\r\n  public function add(component : {}) {\r\n    if(null == engine) return;\r\n    _add(component);\r\n    engine.matchSystems(this);\r\n  }\r\n\r\n  public function addMany(components : Array<{}>) {\r\n    if(null == engine) return;\r\n    components.map.fn(_add(_));\r\n    engine.matchSystems(this);\r\n  }\r\n\r\n  public function destroy() {\r\n    if(null == engine) return;\r\n    engine.remove(this);\r\n    map = new Map();\r\n  }\r\n\r\n  inline public function get<T>(type : Class<T>): Null<T>\r\n    return cast map.get(Type.getClassName(type));\r\n\r\n  public function exists(component : {})\r\n    return existsType(Type.getClass(component));\r\n\r\n  public function existsType(type : Class<{}>)\r\n    return map.exists(Type.getClassName(type));\r\n\r\n  public function remove(component : {}) {\r\n    _remove(component);\r\n    engine.matchSystems(this);\r\n  }\r\n\r\n  public function removeMany(components : Array<{}>) {\r\n    components.map.fn(_remove(_));\r\n    engine.matchSystems(this);\r\n  }\r\n\r\n  public function removeType(type : Class<{}>) {\r\n    _removeTypeName(Type.getClassName(type));\r\n    engine.matchSystems(this);\r\n  }\r\n\r\n  public function removeTypes(types : Array<Class<{}>>) {\r\n    types.map.fn(_removeTypeName(Type.getClassName(_)));\r\n    engine.matchSystems(this);\r\n  }\r\n\r\n  inline public function components()\r\n    return map.iterator();\r\n\r\n  function _add(component : {}) {\r\n    var type = key(component);\r\n    if(map.exists(type))\r\n      remove(map.get(type));\r\n    map.set(type, component);\r\n  }\r\n\r\n  function _remove(component : {}) {\r\n    var type = key(component);\r\n    _removeTypeName(type);\r\n  }\r\n\r\n  function _removeTypeName(type : String)\r\n    map.remove(type);\r\n\r\n  function key(component : {}) {\r\n    var t : Class<Dynamic> = Type.getClass(component),\r\n        s = Type.getSuperClass(t);\r\n    while(s != null && s != edge.IComponent) {\r\n      t = s;\r\n      s = Type.getSuperClass(t);\r\n    }\r\n    return Type.getClassName(t);\r\n  }\r\n}\r\n","package edge;\r\n\r\nimport edge.core.NodeSystem;\r\nimport edge.core.NodeSystemIterator;\r\n\r\n@:access(edge.Engine.addSystem)\r\n@:access(edge.Engine.removeSystem)\r\n@:access(edge.Engine.updateSystem)\r\n@:access(edge.core.NodeSystem)\r\nclass Phase {\r\n  var first : NodeSystem;\r\n  var last : NodeSystem;\r\n  var mapSystem : Map<ISystem, NodeSystem>;\r\n  var mapType : Map<String, ISystem>;\r\n  var engine : Engine;\r\n  var phases : Array<Phase>;\r\n  public var enabled : Bool;\r\n  public function new(engine : Engine) {\r\n    this.engine = engine;\r\n    mapSystem = new Map();\r\n    mapType = new Map();\r\n    phases = [];\r\n    enabled = true;\r\n  }\r\n\r\n  public function add(system : ISystem) {\r\n    remove(system);\r\n    var node = createNode(system);\r\n    if(null == first) {\r\n      first = node;\r\n      last = node;\r\n    } else {\r\n      node.prev = last;\r\n      last.next = node;\r\n      last = node;\r\n    }\r\n  }\r\n\r\n  public function createPhase() {\r\n    var phase = engine.createPhase();\r\n    phases.push(phase);\r\n    return phase;\r\n  }\r\n\r\n  public function clearSystems()\r\n    for(system in systems())\r\n      remove(system);\r\n\r\n  public function insertBefore(ref : ISystem, system : ISystem) {\r\n    var noderef = mapSystem.get(ref);\r\n    if(null == noderef)\r\n      throw 'Phase.insertBefore: unable to find $ref system';\r\n    var node = createNode(system);\r\n    if(noderef == first) {\r\n      node.next = noderef;\r\n      noderef.prev = node;\r\n      first = node;\r\n    } else {\r\n      var prev = noderef.prev;\r\n      prev.next = node;\r\n      node.prev = prev;\r\n      node.next = noderef;\r\n      noderef.prev = node;\r\n    }\r\n  }\r\n\r\n  public function insertAfter(ref : ISystem, system : ISystem) {\r\n    var noderef = mapSystem.get(ref);\r\n    if(null == noderef)\r\n      throw 'Phase.insertAfter: unable to find $ref system';\r\n    var node = createNode(system);\r\n    if(noderef == last) {\r\n      node.prev = noderef;\r\n      noderef.next = node;\r\n      last = node;\r\n    } else {\r\n      var next = noderef.next;\r\n      next.prev = node;\r\n      node.next = next;\r\n      node.prev = noderef;\r\n      noderef.next = node;\r\n    }\r\n  }\r\n\r\n  public function remove(system : ISystem) {\r\n    var node = mapSystem.get(system);\r\n    mapType.remove(key(system));\r\n    if(null == node)\r\n      return;\r\n    engine.removeSystem(system);\r\n    mapSystem.remove(system);\r\n    if(node == first && node == last) {\r\n      first = last = null;\r\n    } else if(node == first) {\r\n      first = node.next;\r\n      node.next.prev = null;\r\n    } else if(node == last) {\r\n      last = node.prev;\r\n      node.prev.next = null;\r\n    } else {\r\n      node.prev.next = node.next;\r\n      node.next.prev = node.prev;\r\n    }\r\n  }\r\n\r\n  public function removeType(cls : Class<Dynamic>) {\r\n    var system = mapType.get(Type.getClassName(cls));\r\n    if(null == system)\r\n      throw 'type system ${Type.getClassName(cls)} is not included in this Phase';\r\n    return remove(system);\r\n  }\r\n\r\n  public function systems()\r\n    return new NodeSystemIterator(first);\r\n\r\n  public function update(t : Float) {\r\n    if(!enabled) return;\r\n    var result;\r\n    for(system in systems()) {\r\n      result = engine.updateSystem(system, t);\r\n      if(!result) return;\r\n    }\r\n    for(phase in phases) {\r\n      phase.update(t);\r\n    }\r\n  }\r\n\r\n  function createNode(system : ISystem) {\r\n    var node = new NodeSystem(system);\r\n    mapSystem.set(system, node);\r\n    mapType.set(key(system), system);\r\n    engine.addSystem(system);\r\n    return node;\r\n  }\r\n\r\n  function key(system : ISystem)\r\n    return Type.getClassName(Type.getClass(system));\r\n}\r\n","package edge;\r\n\r\nclass View<T : {}> {\r\n  public var count(default, null) : Int;\r\n  var map : Map<Entity, T>;\r\n  public function new() {\r\n    map = new Map();\r\n    count = 0;\r\n  }\r\n\r\n  // TODO optimize\r\n  public function iterator() : Iterator<ViewData<T>> {\r\n    var keys = map.keys(),\r\n        holder = { entity : null, data : null };\r\n    return {\r\n      hasNext : function() {\r\n        return keys.hasNext();\r\n      },\r\n      next : function() {\r\n        var key = keys.next();\r\n        holder.entity = key;\r\n        holder.data = map.get(key);\r\n        return holder;\r\n      }\r\n    };\r\n  }\r\n\r\n  function tryAdd(entity : Entity, data : T) {\r\n    if(map.exists(entity)) return false;\r\n    map.set(entity, data);\r\n    count++;\r\n    return true;\r\n  }\r\n\r\n  function tryRemove(entity : Entity) : T {\r\n    var o = map.get(entity);\r\n    if(null == o) return null;\r\n    map.remove(entity);\r\n    count--;\r\n    return o;\r\n  }\r\n}","package edge.core;\r\n\r\nclass NodeSystem {\r\n  public var system(default, null) : ISystem;\r\n  public var next(default, null) : NodeSystem;\r\n  public var prev(default, null) : NodeSystem;\r\n\r\n  public function new(system : ISystem) {\r\n    this.system = system;\r\n  }\r\n}","package edge.core;\r\n\r\nclass NodeSystemIterator {\r\n  var node : NodeSystem;\r\n  public function new(node : NodeSystem) {\r\n    this.node = node;\r\n  }\r\n\r\n  public function hasNext()\r\n    return null != node;\r\n\r\n  public function next() {\r\n    var system = node.system;\r\n    node = node.next;\r\n    return system;\r\n  }\r\n}","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tElements return by `CallStack` methods.\n**/\nenum StackItem {\n\tCFunction;\n\tModule( m : String );\n\tFilePos( s : Null<StackItem>, file : String, line : Int );\n\tMethod( classname : String, method : String );\n\tLocalFunction( ?v : Int );\n}\n\n/**\n\tGet informations about the call stack.\n**/\nclass CallStack {\n\t#if js\n\tstatic var lastException:js.Error;\n\n\tstatic function getStack(e:js.Error):Array<StackItem> {\n\t\tif (e == null) return [];\n\t\t// https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n\t\tvar oldValue = (untyped Error).prepareStackTrace;\n\t\t(untyped Error).prepareStackTrace = function (error, callsites :Array<Dynamic>) {\n\t\t\tvar stack = [];\n\t\t\tfor (site in callsites) {\n\t\t\t\tif (wrapCallSite != null) site = wrapCallSite(site);\n\t\t\t\tvar method = null;\n\t\t\t\tvar fullName :String = site.getFunctionName();\n\t\t\t\tif (fullName != null) {\n\t\t\t\t\tvar idx = fullName.lastIndexOf(\".\");\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tvar className = fullName.substr(0, idx);\n\t\t\t\t\t\tvar methodName = fullName.substr(idx+1);\n\t\t\t\t\t\tmethod = Method(className, methodName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstack.push(FilePos(method, site.getFileName(), site.getLineNumber()));\n\t\t\t}\n\t\t\treturn stack;\n\t\t}\n\t\tvar a = makeStack(e.stack);\n\t\t(untyped Error).prepareStackTrace = oldValue;\n\t\treturn a;\n\t}\n\n\t// support for source-map-support module\n\t@:noCompletion\n\tpublic static var wrapCallSite:Dynamic->Dynamic;\n\t#end\n\n\t/**\n\t\tReturn the call stack elements, or an empty array if not available.\n\t**/\n\tpublic static function callStack() : Array<StackItem> {\n\t\t#if neko\n\t\t\tvar a = makeStack(untyped __dollar__callstack());\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\tvar a = makeStack( new flash.errors.Error().getStackTrace() );\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\treturn a;\n\t\t#elseif php\n\t\t\treturn makeStack(\"%s\");\n\t\t#elseif cpp\n\t\t\tvar s:Array<String> = untyped __global__.__hxcpp_get_call_stack(true);\n\t\t\treturn makeStack(s);\n\t\t#elseif js\n\t\t\ttry {\n\t\t\t\tthrow new js.Error();\n\t\t\t} catch( e : Dynamic ) {\n\t\t\t\tvar a = getStack(e);\n\t\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t#elseif java\n\t\t\tvar stack = [];\n\t\t\tfor ( el in java.lang.Thread.currentThread().getStackTrace() ) {\n\t\t\t\tvar className = el.getClassName();\n\t\t\t\tvar methodName = el.getMethodName();\n\t\t\t\tvar fileName = el.getFileName();\n\t\t\t\tvar lineNumber = el.getLineNumber();\n\t\t\t\tvar method = Method( className, methodName );\n\t\t\t\tif ( fileName != null || lineNumber >= 0 ) {\n\t\t\t\t\tstack.push( FilePos( method, fileName, lineNumber ) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstack.push( method );\n\t\t\t\t}\n\t\t\t}\n\t\t\tstack.shift();\n\t\t\tstack.shift();\n\t\t\tstack.pop();\n\t\t\treturn stack;\n\t\t#elseif cs\n\t\t\treturn makeStack(new cs.system.diagnostics.StackTrace(1, true));\n\t\t#elseif python\n\t\t\tvar stack = [];\n\t\t\tvar infos = python.lib.Traceback.extract_stack();\n\t\t\tinfos.pop();\n\t\t\tinfos.reverse();\n\t\t\tfor (elem in infos)\n\t\t\t\tstack.push(FilePos(null, elem._1, elem._2));\n\t\t\treturn stack;\n\t\t#elseif lua\n\t\t\tvar stack = [];\n\t\t\tvar infos = lua.Debug.traceback();\n\t\t\tvar luastack = infos.split(\"\\n\").slice(2,-1);\n\t\t\tfor (s in luastack){\n\t\t\t\tvar parts = s.split(\":\");\n\t\t\t\tvar file  = parts[0];\n\t\t\t\tvar line  = parts[1];\n\t\t\t\t// TODO: Give more information for FilePos\n\t\t\t\tstack.push(FilePos(null, file, Std.parseInt(line)));\n\t\t\t}\n\t\t\treturn stack;\n\t\t#elseif hl\n\t\t\ttry {\n\t\t\t\tthrow null;\n\t\t\t} catch( e : Dynamic ) {\n\t\t\t\tvar st = _getExceptionStack();\n\t\t\t\treturn makeStack(st.length > 2 ? st.sub(2,st.length - 2) : st);\n\t\t\t}\n\t\t#else\n\t\t\treturn []; // Unsupported\n\t\t#end\n\t}\n\n\t#if hl\n\t@:hlNative(\"std\", \"exception_stack\") static function _getExceptionStack() : hl.NativeArray<hl.Bytes> { return null; }\n\t#end\n\n\t/**\n\t\tReturn the exception stack : this is the stack elements between\n\t\tthe place the last exception was thrown and the place it was\n\t\tcaught, or an empty array if not available.\n\t**/\n\t#if cpp @:noDebug #end /* Do not mess up the exception stack */\n\tpublic static function exceptionStack() : Array<StackItem> {\n\t\t#if neko\n\t\t\treturn makeStack(untyped __dollar__excstack());\n\t\t#elseif as3\n\t\t\treturn new Array();\n\t\t#elseif hl\n\t\t\treturn makeStack(_getExceptionStack());\n\t\t#elseif flash\n\t\t\tvar err : flash.errors.Error = untyped flash.Boot.lastError;\n\t\t\tif( err == null ) return new Array();\n\t\t\tvar a = makeStack( err.getStackTrace() );\n\t\t\tvar c = callStack();\n\t\t\tvar i = c.length - 1;\n\t\t\twhile( i > 0 ) {\n\t\t\t\tif( Std.string(a[a.length-1]) == Std.string(c[i]) )\n\t\t\t\t\ta.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t\ti--;\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif php\n\t\t\treturn makeStack(\"%e\");\n\t\t#elseif cpp\n\t\t\tvar s:Array<String> = untyped __global__.__hxcpp_get_exception_stack();\n\t\t\treturn makeStack(s);\n\t\t#elseif java\n\t\t\tvar stack = [];\n\t\t\tfor ( el in java.internal.Exceptions.currentException().getStackTrace() ) {\n\t\t\t\tvar className = el.getClassName();\n\t\t\t\tvar methodName = el.getMethodName();\n\t\t\t\tvar fileName = el.getFileName();\n\t\t\t\tvar lineNumber = el.getLineNumber();\n\t\t\t\tvar method = Method( className, methodName );\n\t\t\t\tif ( fileName != null || lineNumber >= 0 ) {\n\t\t\t\t\tstack.push( FilePos( method, fileName, lineNumber ) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstack.push( method );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// stack.shift();\n\t\t\tstack.shift();\n\t\t\tstack.pop();\n\t\t\treturn stack;\n\t\t#elseif cs\n\t\t\treturn makeStack(new cs.system.diagnostics.StackTrace(cs.internal.Exceptions.exception, true));\n\t\t#elseif python\n\t\t\tvar stack = [];\n\t\t\tvar exc = python.lib.Sys.exc_info();\n\t\t\tif (exc._3 != null)\n\t\t\t{\n\t\t\t\tvar infos = python.lib.Traceback.extract_tb(exc._3);\n\t\t\t\tinfos.reverse();\n\t\t\t\tfor (elem in infos)\n\t\t\t\t\tstack.push(FilePos(null, elem._1, elem._2));\n\t\t\t}\n\t\t\treturn stack;\n\t\t#elseif js\n\t\t\treturn untyped __define_feature__(\"haxe.CallStack.exceptionStack\", getStack(lastException));\n\t\t#else\n\t\t\treturn []; // Unsupported\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a representation of the stack as a printable string.\n\t**/\n\tpublic static function toString( stack : Array<StackItem> ) {\n\t\tvar b = new StringBuf();\n\t\tfor( s in stack ) {\n\t\t\tb.add(\"\\nCalled from \");\n\t\t\titemToString(b,s);\n\t\t}\n\t\treturn b.toString();\n\t}\n\n\tprivate static function itemToString( b : StringBuf, s ) {\n\t\tswitch( s ) {\n\t\tcase CFunction:\n\t\t\tb.add(\"a C function\");\n\t\tcase Module(m):\n\t\t\tb.add(\"module \");\n\t\t\tb.add(m);\n\t\tcase FilePos(s,file,line):\n\t\t\tif( s != null ) {\n\t\t\t\titemToString(b,s);\n\t\t\t\tb.add(\" (\");\n\t\t\t}\n\t\t\tb.add(file);\n\t\t\tb.add(\" line \");\n\t\t\tb.add(line);\n\t\t\tif( s != null ) b.add(\")\");\n\t\tcase Method(cname,meth):\n\t\t\tb.add(cname);\n\t\t\tb.add(\".\");\n\t\t\tb.add(meth);\n\t\tcase LocalFunction(n):\n\t\t\tb.add(\"local function #\");\n\t\t\tb.add(n);\n\t\t}\n\t}\n\n\t#if cpp @:noDebug #end /* Do not mess up the exception stack */\n\tprivate static function makeStack(s #if cs : cs.system.diagnostics.StackTrace #elseif hl : hl.NativeArray<hl.Bytes> #end) {\n\t\t#if neko\n\t\t\tvar a = new Array();\n\t\t\tvar l = untyped __dollar__asize(s);\n\t\t\tvar i = 0;\n\t\t\twhile( i < l ) {\n\t\t\t\tvar x = s[i++];\n\t\t\t\tif( x == null )\n\t\t\t\t\ta.unshift(CFunction);\n\t\t\t\telse if( untyped __dollar__typeof(x) == __dollar__tstring )\n\t\t\t\t\ta.unshift(Module(new String(x)));\n\t\t\t\telse\n\t\t\t\t\ta.unshift(FilePos(null,new String(untyped x[0]),untyped x[1]));\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\tvar a = new Array();\n\t\t\tvar r = ~/at ([^\\/]+?)\\$?(\\/[^\\(]+)?\\(\\)(\\[(.*?):([0-9]+)\\])?/;\n\t\t\tvar rlambda = ~/^MethodInfo-([0-9]+)$/g;\n\t\t\twhile( r.match(s) ) {\n\t\t\t\tvar cl = r.matched(1).split(\"::\").join(\".\");\n\t\t\t\tvar meth = r.matched(2);\n\t\t\t\tvar item;\n\t\t\t\tif( meth == null ) {\n\t\t\t\t\tif( rlambda.match(cl) )\n\t\t\t\t\t\titem = LocalFunction(Std.parseInt(rlambda.matched(1)));\n\t\t\t\t\telse\n\t\t\t\t\t\titem = Method(cl,\"new\");\n\t\t\t\t} else\n\t\t\t\t\titem = Method(cl,meth.substr(1));\n\t\t\t\tif( r.matched(3) != null )\n\t\t\t\t\titem = FilePos( item, r.matched(4), Std.parseInt(r.matched(5)) );\n\t\t\t\ta.push(item);\n\t\t\t\ts = r.matchedRight();\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif php\n\t\t\tif (!untyped __call__(\"isset\", __var__(\"GLOBALS\", s)))\n\t\t\t\treturn [];\n\t\t\tvar a : Array<String> = untyped __var__(\"GLOBALS\", s);\n\t\t\tvar m = [];\n\t\t\tfor( i in 0...a.length - ((s == \"%s\") ? 2 : 0)) {\n\t\t\t\tvar d = a[i].split(\"::\");\n\t\t\t\tm.unshift(Method(d[0],d[1]));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif cpp\n\t\t\tvar stack : Array<String> = s;\n\t\t\tvar m = new Array<StackItem>();\n\t\t\tfor(func in stack) {\n\t\t\t\tvar words = func.split(\"::\");\n\t\t\t\tif (words.length==0)\n\t\t\t\t\tm.push(CFunction)\n\t\t\t\telse if (words.length==2)\n\t\t\t\t\tm.push(Method(words[0],words[1]));\n\t\t\t\telse if (words.length==4)\n\t\t\t\t\tm.push(FilePos( Method(words[0],words[1]),words[2],Std.parseInt(words[3])));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif js\n\t\t\tif (s == null) {\n\t\t\t\treturn [];\n\t\t\t} else if ((untyped __js__(\"typeof\"))(s) == \"string\") {\n\t\t\t\t// Return the raw lines in browsers that don't support prepareStackTrace\n\t\t\t\tvar stack : Array<String> = s.split(\"\\n\");\n\t\t\t\tif( stack[0] == \"Error\" ) stack.shift();\n\t\t\t\tvar m = [];\n\t\t\t\tvar rie10 = ~/^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$/;\n\t\t\t\tfor( line in stack ) {\n\t\t\t\t\tif( rie10.match(line) ) {\n\t\t\t\t\t\tvar path = rie10.matched(1).split(\".\");\n\t\t\t\t\t\tvar meth = path.pop();\n\t\t\t\t\t\tvar file = rie10.matched(2);\n\t\t\t\t\t\tvar line = Std.parseInt(rie10.matched(3));\n\t\t\t\t\t\tm.push(FilePos( meth == \"Anonymous function\" ? LocalFunction() : meth == \"Global code\" ? null : Method(path.join(\".\"),meth), file, line ));\n\t\t\t\t\t} else\n\t\t\t\t\t\tm.push(Module(StringTools.trim(line))); // A little weird, but better than nothing\n\t\t\t\t}\n\t\t\t\treturn m;\n\t\t\t} else {\n\t\t\t\treturn cast s;\n\t\t\t}\n\t\t#elseif cs\n\t\t\tvar stack = [];\n\t\t\tfor (i in 0...s.FrameCount)\n\t\t\t{\n\t\t\t\tvar frame = s.GetFrame(i);\n\t\t\t\tvar m = frame.GetMethod();\n\n\t\t\t\tif (m == null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar method = StackItem.Method(m.ReflectedType.ToString(), m.Name);\n\n\t\t\t\tvar fileName = frame.GetFileName();\n\t\t\t\tvar lineNumber = frame.GetFileLineNumber();\n\n\t\t\t\tif (fileName != null || lineNumber >= 0)\n\t\t\t\t\tstack.push(FilePos(method, fileName, lineNumber));\n\t\t\t\telse\n\t\t\t\t\tstack.push(method);\n\t\t\t}\n\t\t\treturn stack;\n\t\t#elseif hl\n\t\t\tvar stack = [];\n\t\t\tvar r = ~/^([A-Za-z0-9.$_]+)\\.([A-Za-z0-9_]+)\\((.+):([0-9]+)\\)$/;\n\t\t\tfor( i in 0...s.length-1 ) {\n\t\t\t\tvar str = @:privateAccess String.fromUCS2(s[i]);\n\t\t\t\tif( r.match(str) )\n\t\t\t\t\tstack.push(FilePos(Method(r.matched(1), r.matched(2)), r.matched(3), Std.parseInt(r.matched(4))));\n\t\t\t\telse\n\t\t\t\t\tstack.push(Module(str));\n\t\t\t}\n\t\t\treturn stack;\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\nusing haxe.Int64;\n\n /**\n\tA cross-platform signed 64-bit integer.\n\tInt64 instances can be created from two 32-bit words using `Int64.make()`.\n **/\n#if flash\n@:notNull\n#end\nabstract Int64(__Int64) from __Int64 to __Int64\n{\n\tprivate inline function new( x : __Int64 )\n\t\tthis = x;\n\n\t/**\n\t\tMakes a copy of `this` Int64.\n\t**/\n\tpublic inline function copy():Int64\n\t\treturn make( high, low );\n\n\t/**\n\t\tConstruct an Int64 from two 32-bit words `high` and `low`.\n\t**/\n\tpublic static inline function make( high:Int32, low:Int32 ) : Int64\n\t\treturn new Int64( new __Int64(high, low) );\n\n\t/**\n\t\tReturns an Int64 with the value of the Int `x`.\n\t\t`x` is sign-extended to fill 64 bits.\n\t**/\n\t@:from public static inline function ofInt( x : Int ) : Int64\n#if lua\n\t\treturn make( (x:Int32) >> 31, (x:Int32));\n#else\n\t\treturn make( x >> 31, x );\n#end\n\n\t/**\n\t\tReturns an Int with the value of the Int64 `x`.\n\t\tThrows an exception  if `x` cannot be represented in 32 bits.\n\t**/\n\tpublic static inline function toInt( x : Int64 ) : Int {\n\t\tif( x.high != x.low >> 31 )\n\t\t\tthrow \"Overflow\";\n\n\t\treturn x.low;\n\t}\n\n\t/**\n\t\tReturns whether the value `val` is of type `haxe.Int64`\n\t**/\n\tinline public static function is( val : Dynamic ) : Bool\n\t\treturn Std.is(val,__Int64);\n\n\t/**\n\t\tReturns the high 32-bit word of `x`.\n\t**/\n\t@:deprecated(\"Use high instead\")\n\tpublic static inline function getHigh( x : Int64 ) : Int32\n\t\treturn x.high;\n\n\t/**\n\t\tReturns the low 32-bit word of `x`.\n\t**/\n\t@:deprecated(\"Use low instead\")\n\tpublic static inline function getLow( x : Int64 ) : Int32\n\t\treturn x.low;\n\n\t/**\n\t\tReturns `true` if `x` is less than zero.\n\t**/\n\tpublic static inline function isNeg( x : Int64) : Bool\n\t\treturn x.high < 0;\n\n\t/**\n\t\tReturns `true` if `x` is exactly zero.\n\t**/\n\tpublic static inline function isZero( x : Int64 ) : Bool\n\t\treturn x == 0;\n\n\t/**\n\t\tCompares `a` and `b` in signed mode.\n\t\tReturns a negative value if `a < b`, positive if `a > b`,\n\t\tor 0 if `a == b`.\n\t**/\n\tpublic static inline function compare( a : Int64, b : Int64 ) : Int {\n\t\tvar v = a.high - b.high;\n\t\tv = if( v != 0 ) v else Int32.ucompare(a.low, b.low);\n\t\treturn a.high < 0 ? (b.high < 0 ? v : -1) : (b.high >= 0 ? v : 1);\n\t}\n\n\t/**\n\t\tCompares `a` and `b` in unsigned mode.\n\t\tReturns a negative value if `a < b`, positive if `a > b`,\n\t\tor 0 if `a == b`.\n\t**/\n\tpublic static inline function ucompare( a : Int64, b : Int64 ) : Int {\n\t\tvar v = Int32.ucompare(a.high, b.high);\n\t\treturn if( v != 0 ) v else Int32.ucompare(a.low, b.low);\n\t}\n\n\t/**\n\t\tReturns a signed decimal `String` representation of `x`.\n\t**/\n\tpublic static inline function toStr(x:Int64) : String\n\t\treturn x.toString();\n\n\t#if as3 public #else private #end function toString() : String\n\t{\n\t\tvar i : Int64 = cast this;\n\t\tif ( i == 0 )\n\t\t\treturn \"0\";\n\t\tvar str = \"\";\n\t\tvar neg = false;\n\t\tif( i.isNeg() ) {\n\t\t\tneg = true;\n\t\t\t// i = -i; cannot negate here as --9223372036854775808 = -9223372036854775808\n\t\t}\n\t\tvar ten : Int64 = 10;\n\t\twhile( i != 0 ) {\n\t\t\tvar r = i.divMod( ten );\n\t\t\tif (r.modulus.isNeg()) {\n\t\t\t\tstr = Int64.neg(r.modulus).low + str;\n\t\t\t\ti = Int64.neg(r.quotient);\n\t\t\t} else {\n\t\t\t\tstr = r.modulus.low + str;\n\t\t\t\ti = r.quotient;\n\t\t\t}\n\t\t}\n\t\tif( neg ) str = \"-\" + str;\n\t\treturn str;\n\t}\n\n\tpublic static inline function parseString( sParam : String ) : Int64 {\n\t\treturn Int64Helper.parseString( sParam );\n\t}\n\n\tpublic static inline function fromFloat( f : Float ) : Int64 {\n\t\treturn Int64Helper.fromFloat( f );\n\t}\n\n\t/**\n\t\tPerforms signed integer divison of `dividend` by `divisor`.\n\t\tReturns `{ quotient : Int64, modulus : Int64 }`.\n\t**/\n\tpublic static function divMod( dividend : Int64, divisor : Int64 ) : { quotient : Int64, modulus : Int64 }\n\t{\n\t\t// Handle special cases of 0 and 1\n\t\tif( divisor.high == 0 )\n\t\t{\n\t\t\tswitch( divisor.low ) {\n\t\t\t\tcase 0: throw \"divide by zero\";\n\t\t\t\tcase 1: return { quotient : dividend.copy(), modulus : 0 };\n\t\t\t}\n\t\t}\n\n\t\tvar divSign = dividend.isNeg() != divisor.isNeg();\n\n\t\tvar modulus = dividend.isNeg() ? -dividend : dividend.copy();\n\t\tdivisor = divisor.isNeg() ? -divisor : divisor;\n\n\t\tvar quotient : Int64 = 0;\n\t\tvar mask : Int64 = 1;\n\n\t\twhile( !divisor.isNeg() ) {\n\t\t\tvar cmp = ucompare( divisor, modulus );\n\t\t\tdivisor <<= 1;\n\t\t\tmask <<= 1;\n\t\t\tif( cmp >= 0 ) break;\n\t\t}\n\n\t\twhile( mask != 0 ) {\n\t\t\tif( ucompare(modulus, divisor) >= 0 ) {\n\t\t\t\tquotient |= mask;\n\t\t\t\tmodulus -= divisor;\n\t\t\t}\n\t\t\tmask >>>= 1;\n\t\t\tdivisor >>>= 1;\n\t\t}\n\n\t\tif( divSign ) quotient = -quotient;\n\t\tif( dividend.isNeg() ) modulus = -modulus;\n\n\t\treturn {\n\t\t\tquotient : quotient,\n\t\t\tmodulus  : modulus\n\t\t};\n\t}\n\n\t/**\n\t\tReturns the negative of `x`.\n\t**/\n\t@:op(-A) public static inline function neg( x : Int64 ) : Int64 {\n\t\tvar high = ~x.high;\n\t\tvar low = -x.low;\n\t\tif( low == 0 )\n\t\t\thigh++;\n\t\treturn make( high, low );\n\t}\n\n\t@:op(++A) private inline function preIncrement() : Int64 {\n\t\tthis = copy();\n\t\tthis.low++;\n\t\tif( this.low == 0 ) this.high++;\n\t\treturn cast this;\n\t}\n\n\t@:op(A++) private inline function postIncrement() : Int64 {\n\t\tvar ret = this;\n\t\tpreIncrement();\n\t\treturn ret;\n\t}\n\n\t@:op(--A) private inline function preDecrement() : Int64 {\n\t\tthis = copy();\n\t\tif( this.low == 0 ) this.high--;\n\t\tthis.low--;\n\t\treturn cast this;\n\t}\n\n\t@:op(A--) private inline function postDecrement() : Int64 {\n\t\tvar ret = this;\n\t\tpreDecrement();\n\t\treturn ret;\n\t}\n\n\t/**\n\t\tReturns the sum of `a` and `b`.\n\t**/\n\t@:op(A + B) public static inline function add( a : Int64, b : Int64 ) : Int64 {\n\t\tvar high = a.high + b.high;\n\t\tvar low = a.low + b.low;\n\t\tif( Int32.ucompare( low, a.low ) < 0 ) high++;\n\t\treturn make( high, low );\n\t}\n\n\t@:op(A + B) @:commutative private static inline function addInt( a : Int64, b : Int ) : Int64\n\t\treturn add( a, b );\n\n\t/**\n\t\tReturns `a` minus `b`.\n\t**/\n\t@:op(A - B) public static inline function sub( a : Int64, b : Int64 ) : Int64 {\n\t\tvar high = a.high - b.high;\n\t\tvar low = a.low - b.low;\n\t\tif( Int32.ucompare( a.low, b.low ) < 0 ) high--;\n        return make( high, low );\n\t}\n\n\t@:op(A - B) private static inline function subInt( a : Int64, b : Int ) : Int64\n\t\treturn sub( a, b );\n\n\t@:op(A - B) private static inline function intSub( a : Int, b : Int64 ) : Int64\n\t\treturn sub( a, b );\n\n\t/**\n\t\tReturns the product of `a` and `b`.\n\t**/\n\t@:op(A * B) public static #if !lua inline #end function mul( a : Int64, b : Int64 ) : Int64 {\n\t\tvar mask = 0xFFFF;\n\t\tvar al = a.low & mask, ah = a.low >>> 16;\n\t\tvar bl = b.low & mask, bh = b.low >>> 16;\n\t\tvar p00 = al * bl;\n\t\tvar p10 = ah * bl;\n\t\tvar p01 = al * bh;\n\t\tvar p11 = ah * bh;\n\t\tvar low = p00;\n\t\tvar high = p11 + (p01 >>> 16) + (p10 >>> 16);\n\t\tp01 <<= 16;\n\t\tlow += p01;\n\t\tif( Int32.ucompare(low, p01) < 0 ) high++;\n\t\tp10 <<= 16;\n\t\tlow += p10;\n\t\tif( Int32.ucompare(low, p10) < 0 ) high++;\n\t\thigh += a.low * b.high + a.high * b.low;\n\t\treturn make( high, low );\n\t}\n\n\t@:op(A * B) @:commutative private static inline function mulInt( a : Int64, b : Int ) : Int64\n\t\treturn mul( a, b );\n\n\t/**\n\t\tReturns the quotient of `a` divided by `b`.\n\t**/\n\t@:op(A / B) public static inline function div( a : Int64, b : Int64 ) : Int64\n\t\treturn divMod(a, b).quotient;\n\n\t@:op(A / B) private static inline function divInt( a : Int64, b : Int ) : Int64\n\t\treturn div( a, b );\n\n\t@:op(A / B) private static inline function intDiv( a : Int, b : Int64 ) : Int64\n\t\treturn div( a, b ).toInt();\n\n\t/**\n\t\tReturns the modulus of `a` divided by `b`.\n\t**/\n\t@:op(A % B) public static inline function mod( a : Int64, b : Int64 ) : Int64\n\t\treturn divMod(a, b).modulus;\n\n\t@:op(A % B) private static inline function modInt( a : Int64, b : Int ) : Int64\n\t\treturn mod( a, b ).toInt();\n\n\t@:op(A % B) private static inline function intMod( a : Int, b : Int64 ) : Int64\n\t\treturn mod( a, b ).toInt();\n\n\t/**\n\t\tReturns `true` if `a` is equal to `b`.\n\t**/\n\t@:op(A == B) public static inline function eq( a : Int64, b : Int64 ) : Bool\n\t\treturn a.high == b.high && a.low == b.low;\n\n\t@:op(A == B) @:commutative private static inline function eqInt( a : Int64, b : Int ) : Bool\n\t\treturn eq( a, b );\n\n\t/**\n\t\tReturns `true` if `a` is not equal to `b`.\n\t**/\n\t@:op(A != B) public static inline function neq( a : Int64, b : Int64 ) : Bool\n\t\treturn a.high != b.high || a.low != b.low;\n\n\t@:op(A != B) @:commutative private static inline function neqInt( a : Int64, b : Int ) : Bool\n\t\treturn neq(a, b);\n\n\t@:op(A < B) private static inline function lt( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) < 0;\n\n\t@:op(A < B) private static inline function ltInt( a : Int64, b : Int ) : Bool\n\t\treturn lt(a, b);\n\n\t@:op(A < B) private static inline function intLt( a : Int, b : Int64 ) : Bool\n\t\treturn lt(a, b);\n\n\t@:op(A <= B) private static inline function lte( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) <= 0;\n\n\t@:op(A <= B) private static inline function lteInt( a : Int64, b : Int ) : Bool\n\t\treturn lte(a, b);\n\n\t@:op(A <= B) private static inline function intLte( a : Int, b : Int64 ) : Bool\n\t\treturn lte(a, b);\n\n\t@:op(A > B) private static inline function gt( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) > 0;\n\n\t@:op(A > B) private static inline function gtInt( a : Int64, b : Int ) : Bool\n\t\treturn gt(a, b);\n\n\t@:op(A > B) private static inline function intGt( a : Int, b : Int64 ) : Bool\n\t\treturn gt( a, b );\n\n\t@:op(A >= B) private static inline function gte( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) >= 0;\n\n\t@:op(A >= B) private static inline function gteInt( a : Int64, b : Int ) : Bool\n\t\treturn gte(a, b);\n\n\t@:op(A >= B) private static inline function intGte( a : Int, b : Int64 ) : Bool\n\t\treturn gte(a, b);\n\n\t/**\n\t\tReturns the bitwise NOT of `a`.\n\t**/\n\t@:op(~A) private static inline function complement( a : Int64 ) : Int64\n\t\treturn make( ~a.high, ~a.low );\n\n\t/**\n\t\tReturns the bitwise AND of `a` and `b`.\n\t**/\n\t@:op(A & B) public static inline function and( a : Int64, b : Int64 ) : Int64\n\t\treturn make( a.high & b.high, a.low & b.low );\n\n\t/**\n\t\tReturns the bitwise OR of `a` and `b`.\n\t**/\n\t@:op(A | B) public static inline function or( a : Int64, b : Int64 ) : Int64\n\t\treturn make( a.high | b.high, a.low | b.low );\n\n\t/**\n\t\tReturns the bitwise XOR of `a` and `b`.\n\t**/\n\t@:op(A ^ B) public static inline function xor( a : Int64, b : Int64 ) : Int64\n\t\treturn make( a.high ^ b.high, a.low ^ b.low );\n\n\t/**\n\t\tReturns `a` left-shifted by `b` bits.\n\t**/\n\t@:op(A << B) public static inline function shl( a : Int64, b : Int ) : Int64 {\n\t\tb &= 63;\n\t\treturn if( b == 0 ) a.copy()\n\t\t\telse if( b < 32 ) make( (a.high << b) | (a.low >>> (32-b)), a.low << b)\n\t\t\telse make( a.low << (b-32), 0 );\n\t}\n\n\t/**\n\t\tReturns `a` right-shifted by `b` bits in signed mode.\n\t\t`a` is sign-extended.\n\t**/\n\t@:op(A >> B) public static inline function shr( a : Int64, b : Int) : Int64 {\n\t\tb &= 63;\n\t\treturn if( b == 0 ) a.copy()\n\t\t\telse if( b < 32 ) make( a.high >> b, (a.high << (32-b)) | (a.low >>> b) );\n\t\t\telse make( a.high >> 31, a.high >> (b - 32) );\n\t}\n\n\t/**\n\t\tReturns `a` right-shifted by `b` bits in unsigned mode.\n\t\t`a` is padded with zeroes.\n\t**/\n\t@:op(A >>> B) public static inline function ushr( a : Int64, b : Int ) : Int64 {\n\t\tb &= 63;\n\t\treturn if( b == 0 ) a.copy()\n\t\t\telse if( b < 32 ) make( a.high >>> b, (a.high << (32-b)) | (a.low >>> b) );\n\t\t\telse make( 0, a.high >>> (b - 32) );\n\t}\n\n\tpublic var high(get, never) : Int32;\n\tprivate inline function get_high() return this.high;\n\tprivate inline function set_high(x) return this.high = x;\n\n\tpublic var low(get, never) : Int32;\n\tprivate inline function get_low() return this.low;\n\tprivate inline function set_low(x) return this.low = x;\n}\n\n/**\n  * This typedef will fool @:coreApi into thinking that we are using\n  * the same underlying type, even though it might be different on\n  * specific platforms.\n  */\nprivate typedef __Int64 = ___Int64;\n\nprivate class ___Int64 {\n\tpublic var high : Int32;\n\tpublic var low : Int32;\n\n\tpublic inline function new( high, low ) {\n\t\tthis.high = high;\n\t\tthis.low = low;\n\t}\n\n\t/**\n\t\tWe also define toString here to ensure we always get a pretty string\n\t\twhen tracing or calling Std.string. This tends not to happen when\n\t\ttoString is only in the abstract.\n\t**/\n\tpublic function toString() : String\n\t\treturn Int64.toStr( cast this );\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n#if !nodejs\nimport js.html.compat.Uint8Array;\nimport js.html.compat.DataView;\n#end\n\n@:coreApi\nclass Bytes {\n\n\tpublic var length(default,null) : Int;\n\tvar b : js.html.Uint8Array;\n\tvar data : js.html.DataView;\n\n\tfunction new(data:BytesData) {\n\t\tthis.length = data.byteLength;\n\t\tthis.b = new js.html.Uint8Array(data);\n\t\tuntyped {\n\t\t\tb.bufferValue = data; // some impl does not return the same instance in .buffer\n\t\t\tdata.hxBytes = this;\n\t\t\tdata.bytes = this.b;\n\t\t}\n\t}\n\n\tpublic inline function get( pos : Int ) : Int {\n\t\treturn b[pos];\n\t}\n\n\tpublic inline function set( pos : Int, v : Int ) : Void {\n\t\tb[pos] = v & 0xFF; // the &0xFF is necessary for js.html.compat support\n\t}\n\n\tpublic function blit( pos : Int, src : Bytes, srcpos : Int, len : Int ) : Void {\n\t\tif( pos < 0 || srcpos < 0 || len < 0 || pos + len > length || srcpos + len > src.length ) throw Error.OutsideBounds;\n\t\tif( srcpos == 0 && len == src.b.byteLength )\n\t\t\tb.set(src.b,pos);\n\t\telse\n\t\t\tb.set(src.b.subarray(srcpos,srcpos+len),pos);\n\t}\n\n\tpublic function fill( pos : Int, len : Int, value : Int ) : Void {\n\t\tfor( i in 0...len )\n\t\t\tset(pos++, value);\n\t}\n\n\tpublic function sub( pos : Int, len : Int ) : Bytes {\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\treturn new Bytes(b.buffer.slice(pos+b.byteOffset,pos+b.byteOffset+len));\n\t}\n\n\tpublic function compare( other : Bytes ) : Int {\n\t\tvar b1 = b;\n\t\tvar b2 = other.b;\n\t\tvar len = (length < other.length) ? length : other.length;\n\t\tfor( i in 0...len )\n\t\t\tif( b1[i] != b2[i] )\n\t\t\t\treturn b1[i] - b2[i];\n\t\treturn length - other.length;\n\t}\n\n\tinline function initData() : Void {\n\t\tif( data == null ) data = new js.html.DataView(b.buffer, b.byteOffset, b.byteLength);\n\t}\n\n\tpublic function getDouble( pos : Int ) : Float {\n\t\tinitData();\n\t\treturn data.getFloat64(pos, true);\n\t}\n\n\tpublic function getFloat( pos : Int ) : Float {\n\t\tinitData();\n\t\treturn data.getFloat32(pos, true);\n\t}\n\n\tpublic function setDouble( pos : Int, v : Float ) : Void {\n\t\tinitData();\n\t\tdata.setFloat64(pos, v, true);\n\t}\n\n\tpublic function setFloat( pos : Int, v : Float ) : Void {\n\t\tinitData();\n\t\tdata.setFloat32(pos, v, true);\n\t}\n\n\tpublic function getUInt16( pos : Int ) : Int {\n\t\tinitData();\n\t\treturn data.getUint16(pos, true);\n\t}\n\n\tpublic function setUInt16( pos : Int, v : Int ) : Void {\n\t\tinitData();\n\t\tdata.setUint16(pos, v, true);\n\t}\n\n\tpublic function getInt32( pos : Int ) : Int {\n\t\tinitData();\n\t\treturn data.getInt32(pos, true);\n\t}\n\n\tpublic function setInt32( pos : Int, v : Int ) : Void {\n\t\tinitData();\n\t\tdata.setInt32(pos, v, true);\n\t}\n\n\tpublic function getInt64( pos : Int ) : haxe.Int64 {\n\t\treturn Int64.make(getInt32(pos + 4),getInt32(pos));\n\t}\n\n\tpublic function setInt64( pos : Int, v : haxe.Int64 ) : Void {\n\t\tsetInt32(pos, v.low);\n\t\tsetInt32(pos + 4, v.high);\n\t}\n\n\tpublic function getString( pos : Int, len : Int ) : String {\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\tvar s = \"\";\n\t\tvar b = b;\n\t\tvar fcc = String.fromCharCode;\n\t\tvar i = pos;\n\t\tvar max = pos+len;\n\t\t// utf8-decode and utf16-encode\n\t\twhile( i < max ) {\n\t\t\tvar c = b[i++];\n\t\t\tif( c < 0x80 ) {\n\t\t\t\tif( c == 0 ) break;\n\t\t\t\ts += fcc(c);\n\t\t\t} else if( c < 0xE0 )\n\t\t\t\ts += fcc( ((c & 0x3F) << 6) | (b[i++] & 0x7F) );\n\t\t\telse if( c < 0xF0 ) {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\ts += fcc( ((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (b[i++] & 0x7F) );\n\t\t\t} else {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\tvar c3 = b[i++];\n\t\t\t\tvar u = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (b[i++] & 0x7F);\n\t\t\t\t// surrogate pair\n\t\t\t\ts += fcc( (u >> 10) + 0xD7C0 );\n\t\t\t\ts += fcc( (u & 0x3FF) | 0xDC00 );\n\t\t\t}\n\t\t}\n\t\treturn s;\n\t}\n\n\t@:deprecated(\"readString is deprecated, use getString instead\")\n\t@:noCompletion\n\tpublic inline function readString(pos:Int, len:Int):String {\n\t\treturn getString(pos, len);\n\t}\n\n\tpublic function toString() : String {\n\t\treturn getString(0,length);\n\t}\n\n\tpublic function toHex() : String {\n\t\tvar s = new StringBuf();\n\t\tvar chars = [];\n\t\tvar str = \"0123456789abcdef\";\n\t\tfor( i in 0...str.length )\n\t\t\tchars.push(str.charCodeAt(i));\n\t\tfor( i in 0...length ) {\n\t\t\tvar c = get(i);\n\t\t\ts.addChar(chars[c >> 4]);\n\t\t\ts.addChar(chars[c & 15]);\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function getData() : BytesData {\n\t\treturn untyped b.bufferValue;\n\t}\n\n\tpublic static inline function alloc( length : Int ) : Bytes {\n\t\treturn new Bytes(new BytesData(length));\n\t}\n\n\tpublic static function ofString( s : String ) : Bytes {\n\t\tvar a = new Array();\n\t\t// utf16-decode and utf8-encode\n\t\tvar i = 0;\n\t\twhile( i < s.length ) {\n\t\t\tvar c : Int = StringTools.fastCodeAt(s,i++);\n\t\t\t// surrogate pair\n\t\t\tif( 0xD800 <= c && c <= 0xDBFF )\n\t\t\t    c = (c - 0xD7C0 << 10) | (StringTools.fastCodeAt(s,i++) & 0x3FF);\n\t\t\tif( c <= 0x7F )\n\t\t\t\ta.push(c);\n\t\t\telse if( c <= 0x7FF ) {\n\t\t\t\ta.push( 0xC0 | (c >> 6) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else if( c <= 0xFFFF ) {\n\t\t\t\ta.push( 0xE0 | (c >> 12) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else {\n\t\t\t\ta.push( 0xF0 | (c >> 18) );\n\t\t\t\ta.push( 0x80 | ((c >> 12) & 63) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t}\n\t\t}\n\t\treturn new Bytes(new js.html.Uint8Array(a).buffer);\n\t}\n\n\tpublic static function ofData( b : BytesData ) : Bytes {\n\t\tvar hb = untyped b.hxBytes;\n\t\tif( hb != null ) return hb;\n\t\treturn new Bytes(b);\n\t}\n\n\tpublic inline static function fastGet( b : BytesData, pos : Int ) : Int {\n\t\t// this requires that we have wrapped it with haxe.io.Bytes beforehand\n\t\treturn untyped b.bytes[pos];\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.crypto;\n\n/**\n\tAllows to encode/decode String and bytes using Base64 encoding.\n**/\nclass Base64 {\n\n\tpublic static var CHARS(default,null) = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\tpublic static var BYTES(default,null) = haxe.io.Bytes.ofString(CHARS);\n\n\tpublic static function encode( bytes : haxe.io.Bytes, complement = true ) : String {\n\t\tvar str = new BaseCode(BYTES).encodeBytes(bytes).toString();\n\t\tif( complement )\n\t\t\tswitch (bytes.length % 3) {\n\t\t\tcase 1:\n\t\t\t\tstr += \"==\";\n\t\t\tcase 2:\n\t\t\t\tstr += \"=\";\n\t\t\tdefault:\n\t\t\t}\n\t\treturn str;\n\t}\n\n\tpublic static function decode( str : String, complement = true ) : haxe.io.Bytes {\n\t\tif( complement )\n\t\t\twhile( str.charCodeAt(str.length-1) == \"=\".code )\n\t\t\t\tstr = str.substr(0,-1);\n\t\treturn new BaseCode(BYTES).decodeBytes(haxe.io.Bytes.ofString(str));\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.crypto;\n\n/**\n\tAllows to encode/decode String and bytes using a power of two base dictionary.\n**/\nclass BaseCode {\n\n\tvar base : haxe.io.Bytes;\n\tvar nbits : Int;\n\tvar tbl : Array<Int>;\n\n\tpublic function new( base : haxe.io.Bytes ) {\n\t\tvar len = base.length;\n\t\tvar nbits = 1;\n\t\twhile( len > 1 << nbits )\n\t\t\tnbits++;\n\t\tif( nbits > 8 || len != 1 << nbits )\n\t\t\tthrow \"BaseCode : base length must be a power of two.\";\n\t\tthis.base = base;\n\t\tthis.nbits = nbits;\n\t}\n\n\tpublic function encodeBytes( b : haxe.io.Bytes ) : haxe.io.Bytes {\n\t\t#if (neko && !interp)\n\t\treturn haxe.io.Bytes.ofData( base_encode(b.getData(),base.getData()) );\n\t\t#else\n\t\tvar nbits = this.nbits;\n\t\tvar base = this.base;\n\t\tvar size = Std.int(b.length * 8 / nbits);\n\t\tvar out = haxe.io.Bytes.alloc(size + (((b.length * 8) % nbits == 0) ? 0 : 1) );\n\t\tvar buf = 0;\n\t\tvar curbits = 0;\n\t\tvar mask = (1 << nbits) - 1;\n\t\tvar pin = 0;\n\t\tvar pout = 0;\n\t\twhile( pout < size ) {\n\t\t\twhile( curbits < nbits ) {\n\t\t\t\tcurbits += 8;\n\t\t\t\tbuf <<= 8;\n\t\t\t\tbuf |= b.get(pin++);\n\t\t\t}\n\t\t\tcurbits -= nbits;\n\t\t\tout.set(pout++,base.get((buf >> curbits) & mask));\n\t\t}\n\t\tif( curbits > 0 )\n\t\t\tout.set(pout++,base.get((buf << (nbits - curbits)) & mask));\n\t\treturn out;\n\t\t#end\n\t}\n\n\tfunction initTable() {\n\t\tvar tbl = new Array();\n\t\tfor( i in 0...256 )\n\t\t\ttbl[i] = -1;\n\t\tfor( i in 0...base.length )\n\t\t\ttbl[base.get(i)] = i;\n\t\tthis.tbl = tbl;\n\t}\n\n\tpublic function decodeBytes( b : haxe.io.Bytes ) : haxe.io.Bytes {\n\t\t#if (neko && !interp)\n\t\treturn haxe.io.Bytes.ofData( base_decode(b.getData(),base.getData()) );\n\t\t#else\n\t\tvar nbits = this.nbits;\n\t\tvar base = this.base;\n\t\tif( this.tbl == null ) initTable();\n\t\tvar tbl = this.tbl;\n\t\tvar size = (b.length * nbits) >> 3;\n\t\tvar out = haxe.io.Bytes.alloc(size);\n\t\tvar buf = 0;\n\t\tvar curbits = 0;\n\t\tvar pin = 0;\n\t\tvar pout = 0;\n\t\twhile( pout < size ) {\n\t\t\twhile( curbits < 8 ) {\n\t\t\t\tcurbits += nbits;\n\t\t\t\tbuf <<= nbits;\n\t\t\t\tvar i = tbl[b.get(pin++)];\n\t\t\t\tif( i == -1 )\n\t\t\t\t\tthrow \"BaseCode : invalid encoded char\";\n\t\t\t\tbuf |= i;\n\t\t\t}\n\t\t\tcurbits -= 8;\n\t\t\tout.set(pout++,(buf >> curbits) & 0xFF);\n\t\t}\n\t\treturn out;\n\t\t#end\n\t}\n\n\tpublic function encodeString( s : String ) {\n\t\t#if (neko && !interp)\n\t\treturn neko.NativeString.toString( base_encode(neko.NativeString.ofString(s),base.getData()) );\n\t\t#else\n\t\treturn encodeBytes(haxe.io.Bytes.ofString(s)).toString();\n\t\t#end\n\t}\n\n\tpublic function decodeString( s : String ) {\n\t\t#if (neko && !interp)\n\t\treturn neko.NativeString.toString( base_decode(neko.NativeString.ofString(s),base.getData()) );\n\t\t#else\n\t\treturn decodeBytes(haxe.io.Bytes.ofString(s)).toString();\n\t\t#end\n\t}\n\n\tpublic static function encode( s : String, base : String ) {\n\t\tvar b = new BaseCode(haxe.io.Bytes.ofString(base));\n\t\treturn b.encodeString(s);\n\t}\n\n\tpublic static function decode( s : String, base : String ) {\n\t\tvar b = new BaseCode(haxe.io.Bytes.ofString(base));\n\t\treturn b.decodeString(s);\n\t}\n\n\t#if neko\n\tprivate static var base_encode = neko.Lib.load(\"std\",\"base_encode\",2);\n\tprivate static var base_decode = neko.Lib.load(\"std\",\"base_decode\",2);\n\t#end\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n@:coreApi class IntMap<T> implements haxe.Constraints.IMap<Int,T> {\n\n\tprivate var h : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tpublic inline function set( key : Int, value : T ) : Void {\n\t\tuntyped h[key] = value;\n\t}\n\n\tpublic inline function get( key : Int ) : Null<T> {\n\t\treturn untyped h[key];\n\t}\n\n\tpublic inline function exists( key : Int ) : Bool {\n\t\treturn untyped h.hasOwnProperty(key);\n\t}\n\n\tpublic function remove( key : Int ) : Bool {\n\t\tif( untyped !h.hasOwnProperty(key) ) return false;\n\t\tuntyped  __js__(\"delete\")(h[key]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<Int> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for( var key in {0} ) {1}\", h, if( h.hasOwnProperty(key) ) a.push(key|0));\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<T> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[i]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of h software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and h permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n@:coreApi\nclass ObjectMap<K:{ }, V> implements haxe.Constraints.IMap<K,V> {\n\n\tstatic var count = 0;\n\n\tstatic inline function assignId(obj: { } ):Int {\n\t\treturn untyped obj.__id__ = ++count;\n\t}\n\n\tstatic inline function getId(obj: { } ):Int {\n\t\treturn untyped obj.__id__;\n\t}\n\n\tvar h : { };\n\n\tpublic function new() : Void {\n\t\th = { __keys__: {} };\n\t}\n\n\tpublic function set(key:K, value:V):Void untyped {\n\t\tvar id : Int = getId(key) || assignId(key);\n\t\th[id] = value;\n\t\th.__keys__[id] = key;\n\t}\n\n\tpublic inline function get(key:K):Null<V> {\n\t\treturn untyped h[getId(key)];\n\t}\n\n\tpublic inline function exists(key:K):Bool {\n\t\treturn untyped h.__keys__[getId(key)] != null;\n\t}\n\n\tpublic function remove( key : K ) : Bool {\n\t\tvar id = getId(key);\n\t\tif ( untyped h.__keys__[id] == null ) return false;\n\t\tuntyped  __js__(\"delete\")(h[id]);\n\t\tuntyped  __js__(\"delete\")(h.__keys__[id]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<K> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h.__keys__ ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(h.__keys__[key]);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<V> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[getId(i)]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(Std.string(i));\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n}","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\nprivate class StringMapIterator<T> {\n\tvar map : StringMap<T>;\n\tvar keys : Array<String>;\n\tvar index : Int;\n\tvar count : Int;\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\n\t\tthis.map = map;\n\t\tthis.keys = keys;\n\t\tthis.index = 0;\n\t\tthis.count = keys.length;\n\t}\n\tpublic inline function hasNext() {\n\t\treturn index < count;\n\t}\n\tpublic inline function next() {\n\t\treturn map.get(keys[index++]);\n\t}\n}\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\tprivate var rh : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tinline function isReserved(key:String) : Bool {\n\t\treturn untyped __js__(\"__map_reserved\")[key] != null;\n\t}\n\n\tpublic inline function set( key : String, value : T ) : Void {\n\t\tif( isReserved(key) )\n\t\t\tsetReserved(key, value);\n\t\telse\n\t\t\th[cast key] = value;\n\t}\n\n\tpublic inline function get( key : String ) : Null<T> {\n\t\tif( isReserved(key) )\n\t\t\treturn getReserved(key);\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function exists( key : String ) : Bool {\n\t\tif( isReserved(key) )\n\t\t\treturn existsReserved(key);\n\t\treturn h.hasOwnProperty(key);\n\t}\n\n\tfunction setReserved( key : String, value : T ) : Void {\n\t\tif( rh == null ) rh = {};\n\t\trh[cast \"$\"+key] = value;\n\t}\n\n\tfunction getReserved( key : String ) : Null<T> {\n\t\treturn rh == null ? null : rh[cast \"$\"+key];\n\t}\n\n\tfunction existsReserved( key : String ) : Bool {\n\t\tif( rh == null ) return false;\n\t\treturn untyped rh.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tif( isReserved(key) ) {\n\t\t\tkey = \"$\" + key;\n\t\t\tif( rh == null || !rh.hasOwnProperty(key) ) return false;\n\t\t\tuntyped __js__(\"delete\")(rh[key]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif( !h.hasOwnProperty(key) )\n\t\t\t\treturn false;\n\t\t\tuntyped __js__(\"delete\")(h[key]);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\treturn arrayKeys().iterator();\n\t}\n\t\n\tfunction arrayKeys() : Array<String> {\n\t\tvar out = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\tout.push(key);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\tif( rh != null ) untyped {\n\t\t\t__js__(\"for( var key in this.rh ) {\");\n\t\t\t\tif( key.charCodeAt(0) == \"$\".code )\n\t\t\t\t\tout.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn out;\n\t}\n\n\tpublic inline function iterator() : Iterator<T> {\n\t\treturn new StringMapIterator(this, arrayKeys());\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar keys = arrayKeys();\n\t\tfor( i in 0...keys.length ) {\n\t\t\tvar k = keys[i];\n\t\t\ts.add(k);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(k)));\n\t\t\tif( i < keys.length-1 )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __js__(\"var __map_reserved = {}\");\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n/**\n\tHelper that converts between floating point and binary representation.\n\tAlways works in low-endian encoding.\n**/\nclass FPHelper {\n\n\t#if neko_v21\n\t// stored in helper\n\t#elseif neko\n\tstatic var i64tmp = new neko.vm.Tls<Int64>();\n\t#elseif !(java || cs)\n\tstatic var i64tmp = Int64.ofInt(0);\n\t#end\n\n\t#if neko\n\t\t#if neko_v21\n\t\tstatic var helpers = new neko.vm.Tls<neko.NativeArray<Dynamic>>();\n\t\t#else\n\t\tstatic var helperf = new neko.vm.Tls<neko.NativeString>();\n\t\tstatic var helperd = new neko.vm.Tls<neko.NativeString>();\n\t\tstatic var _float_of_bytes = neko.Lib.load(\"std\",\"float_of_bytes\",2);\n\t\tstatic var _double_of_bytes = neko.Lib.load(\"std\",\"double_of_bytes\",2);\n\t\tstatic var _float_bytes = neko.Lib.load(\"std\",\"float_bytes\",2);\n\t\tstatic var _double_bytes = neko.Lib.load(\"std\",\"double_bytes\",2);\n\t\t#end\n\t#elseif flash\n\t\tstatic var helper = {\n\t\t\tvar b = new flash.utils.ByteArray();\n\t\t\tb.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\tb;\n\t\t}\n\t#elseif php\n\t\tstatic var isLittleEndian : Bool = untyped __call__('unpack','S','\\x01\\x00')[1] == 1;\n\t#else\n\t\tstatic inline var LN2 = 0.6931471805599453; // Math.log(2)\n\t#end\n\n\t#if neko_v21 inline #end\n\tpublic static function i32ToFloat( i : Int ) : Float {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\treturn untyped $itof(i,false);\n\t\t\t#else\n\t\t\tvar helper = helperf.value;\n\t\t\tif( helper == null )\n\t\t\t\thelperf.value = helper = neko.NativeString.alloc(4);\n\t\t\tuntyped $sset(helper,0,i&0xFF);\n\t\t\tuntyped $sset(helper,1,(i>>8)&0xFF);\n\t\t\tuntyped $sset(helper,2,(i>>16)&0xFF);\n\t\t\tuntyped $sset(helper,3,i>>>24);\n\t\t\treturn _float_of_bytes(helper,false);\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__hxcpp_reinterpret_le_int32_as_float32(i);\n\t\t#elseif cs\n\t\t\tvar helper = new SingleHelper(0);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\thelper.i = i;\n\t\t\t} else {\n\t\t\t\thelper.i = ((i >>> 24) & 0xFF) | (((i >> 16) & 0xFF) << 8) | (((i >> 8) & 0xFF) << 16) | ((i & 0xFF) << 24);\n\t\t\t}\n\n\t\t\treturn helper.f;\n\t\t#elseif java\n\t\t\treturn java.lang.Float.FloatClass.intBitsToFloat(i);\n\t\t#elseif php\n\t\t\treturn untyped  __call__('unpack', 'f', __call__('pack', 'l', i))[1];\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeUnsignedInt(i);\n\t\t\thelper.position = 0;\n\t\t\treturn helper.readFloat();\n\t\t#else\n\t\t\tvar sign = 1 - ((i >>> 31) << 1);\n\t\t\tvar exp = (i >>> 23) & 0xFF;\n\t\t\tvar sig = i & 0x7FFFFF;\n\t\t\tif( sig == 0 && exp == 0 )\n\t\t\t\treturn 0.0;\n\t\t\treturn sign*(1 + Math.pow(2, -23)*sig) * Math.pow(2, exp-127);\n\t\t#end\n\t}\n\n\t#if neko_v21 inline #end\n\tpublic static function floatToI32( f : Float ) : Int {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\treturn untyped $ftoi(f,false);\n\t\t\t#else\n\t\t\tvar r = _float_bytes(f,false);\n\t\t\treturn untyped $sget(r,0) | ($sget(r,1)<<8) | ($sget(r,2)<<16) | ($sget(r,3)<<24);\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__hxcpp_reinterpret_float32_as_le_int32(f);\n\t\t#elseif cs\n\t\t\tvar helper = new SingleHelper(f);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\treturn helper.i;\n\t\t\t} else {\n\t\t\t\tvar i = helper.i;\n\t\t\t\treturn ((i >>> 24) & 0xFF) | (((i >> 16) & 0xFF) << 8) | (((i >> 8) & 0xFF) << 16) | ((i & 0xFF) << 24);\n\t\t\t}\n\t\t#elseif java\n\t\t\treturn java.lang.Float.FloatClass.floatToRawIntBits(f);\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeFloat(f);\n\t\t\thelper.position = 0;\n\t\t\treturn helper.readUnsignedInt();\n\t\t#elseif php\n\t\t\treturn untyped __call__('unpack','l',__call__('pack', 'f', f))[1];\n\t\t#else\n\t\t\tif( f == 0 ) return 0;\n\t\t\tvar af = f < 0 ? -f : f;\n\t\t\tvar exp = Math.floor(Math.log(af) / LN2);\n\t\t\tif( exp < -127 ) exp = -127 else if( exp > 128 ) exp = 128;\n\t\t\tvar sig = Math.round((af / Math.pow(2, exp) - 1) * 0x800000);\n\t\t\tif( sig == 0x800000 && exp < 128 ){\n\t\t\t\tsig = 0;\n\t\t\t\texp++;\n\t\t\t}\n\t\t\treturn (f < 0 ? 0x80000000 : 0) | ((exp + 127) << 23) | sig;\n\t\t#end\n\t}\n\n\t#if neko_v21 inline #end\n\tpublic static function i64ToDouble( low : Int, high : Int ) : Float {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\treturn untyped $itod(low,high,false);\n\t\t\t#else\n\t\t\tvar helper = helperd.value;\n\t\t\tif( helper == null )\n\t\t\t\thelperd.value = helper = neko.NativeString.alloc(8);\n\t\t\tuntyped $sset(helper,0,low&0xFF);\n\t\t\tuntyped $sset(helper,1,(low>>8)&0xFF);\n\t\t\tuntyped $sset(helper,2,(low>>16)&0xFF);\n\t\t\tuntyped $sset(helper,3,low>>>24);\n\t\t\tuntyped $sset(helper,4,high&0xFF);\n\t\t\tuntyped $sset(helper,5,(high>>8)&0xFF);\n\t\t\tuntyped $sset(helper,6,(high>>16)&0xFF);\n\t\t\tuntyped $sset(helper,7,high>>>24);\n\t\t\treturn _double_of_bytes(helper,false);\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__hxcpp_reinterpret_le_int32s_as_float64(low,high);\n\t\t#elseif cs\n\t\t\tvar helper = new FloatHelper(0);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\thelper.i = haxe.Int64.make(high,low);\n\t\t\t} else {\n\t\t\t\tvar i1 = high,\n\t\t\t\t    i2 = low;\n\t\t\t\tvar j2 = ((i1 >>> 24) & 0xFF) | (((i1 >> 16) & 0xFF) << 8) | (((i1 >> 8) & 0xFF) << 16) | ((i1 & 0xFF) << 24);\n\t\t\t\tvar j1 = ((i2 >>> 24) & 0xFF) | (((i2 >> 16) & 0xFF) << 8) | (((i2 >> 8) & 0xFF) << 16) | ((i2 & 0xFF) << 24);\n\t\t\t\thelper.i = haxe.Int64.make(j1,j2);\n\t\t\t}\n\t\t\treturn helper.f;\n\t\t#elseif java\n\t\t\treturn java.lang.Double.DoubleClass.longBitsToDouble( Int64.make(high,low) );\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeUnsignedInt(low);\n\t\t\thelper.writeUnsignedInt(high);\n\t\t\thelper.position = 0;\n\t\t\treturn helper.readDouble();\n\t\t#elseif php\n\t\t\treturn untyped  __call__('unpack', 'd', __call__('pack', 'ii', isLittleEndian ? low : high, isLittleEndian ? high : low))[1];\n\t\t#else\n\t\t\t#if python\n\t\t\tif (low == 0 && high == 2146435072) {\n\t\t\t\treturn Math.POSITIVE_INFINITY;\n\t\t\t} else if (low == 0 && high == -1048576 ) {\n\t\t\t\treturn Math.NEGATIVE_INFINITY;\n\t\t\t}\n\t\t\t#end\n\t\t\tvar sign = 1 - ((high >>> 31) << 1);\n\t\t\tvar exp = ((high >> 20) & 0x7FF) - 1023;\n\t\t\tvar sig = (high&0xFFFFF) * 4294967296. + (low>>>31) * 2147483648. + (low&0x7FFFFFFF);\n\t\t\tif( sig == 0 && exp == -1023 )\n\t\t\t\treturn 0.0;\n\t\t\treturn sign*(1.0 + Math.pow(2, -52)*sig) * Math.pow(2, exp);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns an Int64 representing the bytes representation of the double precision IEEE float value.\n\t\tWARNING : for performance reason, the same Int64 value might be reused every time. Copy its low/high values before calling again.\n\t\tWe still ensure that this is safe to use in a multithread environment\n\t**/\n\tpublic static function doubleToI64( v : Float ) : Int64 {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\tvar helper = helpers.value;\n\t\t\tif( helper == null ) {\n\t\t\t\thelpers.value = helper = neko.NativeArray.alloc(2);\n\t\t\t\thelper[0] = neko.NativeArray.alloc(2);\n\t\t\t\thelper[1] = haxe.Int64.ofInt(0);\n\t\t\t}\n\t\t\tvar i64 : haxe.Int64 = helper[1], int2 = helper[0];\n\t\t\tuntyped $dtoi(v,int2,false);\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(int2[0]);\n\t\t\t\ti64.set_high(int2[1]);\n\t\t\t}\n\t\t\treturn i64;\n\t\t\t#else\n\t\t\tvar r = _double_bytes(v,false), i64 = i64tmp.value;\n\t\t\tif( i64 == null )\n\t\t\t\ti64 = i64tmp.value = haxe.Int64.ofInt(0);\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(untyped $sget(r,0) | ($sget(r,1)<<8) | ($sget(r,2)<<16) | ($sget(r,3)<<24));\n\t\t\t\ti64.set_high(untyped $sget(r,4) | ($sget(r,5)<<8) | ($sget(r,6)<<16) | ($sget(r,7)<<24));\n\t\t\t}\n\t\t\treturn i64;\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn Int64.make(untyped __global__.__hxcpp_reinterpret_float64_as_le_int32_high(v),\n\t\t\t\t               untyped __global__.__hxcpp_reinterpret_float64_as_le_int32_low(v) );\n\t\t#elseif java\n\t\t\treturn java.lang.Double.DoubleClass.doubleToRawLongBits(v);\n\t\t#elseif cs\n\t\t\tvar helper = new FloatHelper(v);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\treturn helper.i;\n\t\t\t} else {\n\t\t\t\tvar i = helper.i;\n\t\t\t\tvar i1 = haxe.Int64.getHigh(i),\n\t\t\t\t    i2 = haxe.Int64.getLow(i);\n\t\t\t\tvar j2 = ((i1 >>> 24) & 0xFF) | (((i1 >> 16) & 0xFF) << 8) | (((i1 >> 8) & 0xFF) << 16) | ((i1 & 0xFF) << 24);\n\t\t\t\tvar j1 = ((i2 >>> 24) & 0xFF) | (((i2 >> 16) & 0xFF) << 8) | (((i2 >> 8) & 0xFF) << 16) | ((i2 & 0xFF) << 24);\n\n\t\t\t\treturn haxe.Int64.make(j1,j2);\n\t\t\t}\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeDouble(v);\n\t\t\thelper.position = 0;\n\t\t\tvar i64 = i64tmp;\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(cast helper.readUnsignedInt());\n\t\t\t\ti64.set_high(cast helper.readUnsignedInt());\n\t\t\t}\n\t\t\treturn i64;\n\t\t#elseif php\n\t\t\tvar a = untyped __call__('unpack',isLittleEndian ? 'V2' : 'N2',__call__('pack', 'd', v));\n\t\t\tvar i64 = i64tmp;\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(a[isLittleEndian ? 1 : 2]);\n\t\t\t\ti64.set_high(a[isLittleEndian ? 2 : 1]);\n\t\t\t}\n\t\t\treturn i64;\n\t\t#else\n\t\t\tvar i64 = i64tmp;\n\t\t\tif( v == 0 ) {\n\t\t\t\t@:privateAccess {\n\t\t\t\t\ti64.set_low(0);\n\t\t\t\t\ti64.set_high(0);\n\t\t\t\t}\n\t\t\t} else if (!Math.isFinite(v)) @:privateAccess {\n\t\t\t\tif (v > 0) {\n\t\t\t\t\ti64.set_low(0);\n\t\t\t\t\ti64.set_high(2146435072);\n\t\t\t\t} else {\n\t\t\t\t\ti64.set_low(0);\n\t\t\t\t\ti64.set_high(-1048576);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar av = v < 0 ? -v : v;\n\t\t\t\tvar exp = Math.floor(Math.log(av) / LN2);\n\t\t\t\tvar sig = Math.fround(((av / Math.pow(2, exp)) - 1) * 4503599627370496.); // 2^52\n\t\t\t\tvar sig_l = Std.int(sig);\n\t\t\t\tvar sig_h = Std.int(sig / 4294967296.0);\n\t\t\t\t@:privateAccess {\n\t\t\t\t\ti64.set_low(sig_l);\n\t\t\t\t\ti64.set_high((v < 0 ? 0x80000000 : 0) | ((exp + 1023) << 20) | sig_h);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn i64;\n\t\t#end\n\t}\n\n}\n\n#if cs\n@:meta(System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Explicit))\n@:nativeGen @:struct private class SingleHelper\n{\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var i:Int;\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var f:Single;\n\n\tpublic function new(f:Single)\n\t{\n\t\tthis.i = 0;\n\t\tthis.f = f;\n\t}\n}\n\n@:meta(System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Explicit))\n@:nativeGen @:struct private class FloatHelper\n{\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var i:haxe.Int64;\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var f:Float;\n\n\tpublic function new(f:Float)\n\t{\n\t\tthis.i = haxe.Int64.ofInt(0);\n\t\tthis.f = f;\n\t}\n}\n\n#end\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n#if !nodejs\nimport js.html.compat.Float32Array;\n#end\n\ntypedef Float32ArrayData = js.html.Float32Array;\n\n@:coreApi\nabstract Float32Array(Float32ArrayData) {\n\n\tpublic static inline var BYTES_PER_ELEMENT = 4;\n\tpublic var length(get,never) : Int;\n\tpublic var view(get,never) : ArrayBufferView;\n\n\tpublic inline function new( elements : Int ) : Void {\n\t\tthis = new Float32ArrayData(elements);\n\t}\n\n\tinline function get_length() : Int {\n\t\treturn this.length;\n\t}\n\n\tpublic inline function get_view() : ArrayBufferView {\n\t\treturn ArrayBufferView.fromData(this);\n\t}\n\n\t@:arrayAccess public inline function get( index : Int ) : Float {\n\t\treturn this[index];\n\t}\n\n\t@:arrayAccess public inline function set( index : Int, value : Float ) : Float {\n\t\treturn this[index] = value;\n\t}\n\n\tpublic inline function sub( begin : Int, ?length : Int ) : Float32Array {\n\t\treturn fromData(this.subarray(begin, length == null ? this.length : begin+length));\n\t}\n\n\tpublic inline function subarray( ?begin : Int, ?end : Int ) : Float32Array {\n\t\treturn fromData(this.subarray(begin, end));\n\t}\n\n\tpublic inline function getData() : Float32ArrayData {\n\t\treturn this;\n\t}\n\n\tpublic inline static function fromData( d : Float32ArrayData ) : Float32Array {\n\t\treturn cast d;\n\t}\n\n\tpublic static function fromArray( a : Array<Float>, pos : Int = 0, ?length : Int ) : Float32Array {\n\t\tif( length == null ) length = a.length - pos;\n\t\tif( pos < 0 || length < 0 || pos + length > a.length ) throw Error.OutsideBounds;\n\t\tif( pos == 0 && length == a.length )\n\t\t\treturn fromData(new Float32ArrayData(a));\n\t\tvar i = new Float32Array(a.length);\n\t\tfor( idx in 0...length )\n\t\t\ti[idx] = a[idx + pos];\n\t\treturn i;\n\t}\n\n\tpublic static function fromBytes( bytes : haxe.io.Bytes, bytePos : Int = 0, ?length : Int ) : Float32Array {\n\t\tif( length == null ) length = (bytes.length - bytePos) >> 2;\n\t\treturn fromData(new Float32ArrayData(bytes.getData(), bytePos, length));\n\t}\n}\n\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\ntypedef Int32ArrayData = js.html.Int32Array;\n\n@:coreApi\nabstract Int32Array(Int32ArrayData) {\n\n\tpublic static inline var BYTES_PER_ELEMENT = 1;\n\tpublic var length(get,never) : Int;\n\tpublic var view(get,never) : ArrayBufferView;\n\n\tpublic inline function new( elements : Int ) {\n\t\tthis = new Int32ArrayData(elements * BYTES_PER_ELEMENT);\n\t}\n\n\tinline function get_length() : Int {\n\t\treturn this.length;\n\t}\n\n\tpublic inline function get_view() : ArrayBufferView {\n\t\treturn ArrayBufferView.fromData(this);\n\t}\n\n\t@:arrayAccess public inline function get( index : Int ) : Int {\n\t\treturn this[index];\n\t}\n\n\t@:arrayAccess public inline function set( index : Int, value : Int ) : Int {\n\t\treturn this[index] = value | 0; // necessary for html compat\n\t}\n\n\tpublic inline function sub( begin : Int, ?length : Int ) : Int32Array {\n\t\treturn fromData(this.subarray(begin, length == null ? this.length : begin+length));\n\t}\n\n\tpublic inline function subarray( ?begin : Int, ?end : Int ) : Int32Array {\n\t\treturn fromData(this.subarray(begin, end));\n\t}\n\n\tpublic inline function getData() : Int32ArrayData {\n\t\treturn this;\n\t}\n\n\tpublic static inline function fromData( d : Int32ArrayData ) : Int32Array {\n\t\treturn cast d;\n\t}\n\n\tpublic static function fromArray( a : Array<Int>, pos : Int = 0, ?length : Int ) : Int32Array {\n\t\tif( length == null ) length = a.length - pos;\n\t\tif( pos < 0 || length < 0 || pos + length > a.length ) throw Error.OutsideBounds;\n\t\tif( pos == 0 && length == a.length )\n\t\t\treturn fromData(new Int32ArrayData(a));\n\t\tvar i = new Int32Array(a.length);\n\t\tfor( idx in 0...length )\n\t\t\ti[idx] = a[idx + pos];\n\t\treturn i;\n\t}\n\n\tpublic static function fromBytes( bytes : haxe.io.Bytes, bytePos : Int = 0, ?length : Int ) : Int32Array {\n\t\tif( length == null ) length = (bytes.length - bytePos) >> 2;\n\t\treturn fromData(new Int32ArrayData(bytes.getData(), bytePos, length));\n\t}\n\n}\n\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nprivate class HaxeError extends js.Error {\n\n\tvar val:Dynamic;\n\n\tpublic function new(val:Dynamic) untyped {\n\t\tsuper();\n\t\tthis.val = __define_feature__(\"js.Boot.HaxeError\", val);\n\t\tthis.message = String(val);\n\t\tif (js.Error.captureStackTrace) js.Error.captureStackTrace(this, HaxeError);\n\t}\n\n\tpublic static function wrap(val:Dynamic):Dynamic untyped {\n\t\treturn if (__instanceof__(val, js.Error)) val else new HaxeError(val);\n\t}\n}\n\n@:dox(hide)\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"has_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") && __typeof__(tostr) == \"function\" ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\" && untyped __js__(\"(o|0) === o\");\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if ( (untyped __js__(\"typeof\"))(cl) == \"object\" && __isNativeObj(cl) ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n\tstatic var __toStr = untyped ({}).toString;\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name = untyped __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class in the global scope:\n\tstatic function __resolveNativeClass(name:String) {\n\t\treturn untyped js.Lib.global[name];\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\HTMLCanvasElement.webidl. Do not edit!\n\npackage js.html;\n\n/**\n\tThe `HTMLCanvasElement` interface provides properties and methods for manipulating the layout and presentation of canvas elements. The `HTMLCanvasElement` interface also inherits the properties and methods of the `HTMLElement` interface.\n\n\tDocumentation [HTMLCanvasElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n\n\t@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement>\n**/\n@:native(\"HTMLCanvasElement\")\nextern class CanvasElement extends Element\n{\n\t\n\t/**\n\t\tIs a positive `integer` reflecting the `width` HTML attribute of the `canvas` element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of `300` is used.\n\t**/\n\tvar width : Int;\n\t\n\t/**\n\t\tIs a positive `integer` reflecting the `height` HTML attribute of the `canvas` element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of `150` is used.\n\t**/\n\tvar height : Int;\n\t\n\t/** @throws DOMError */\n\t\n\t/**\n\t\tReturns a drawing context on the canvas, or null if the context ID is not supported. A drawing context lets you draw on the canvas. Calling getContext with `\"2d\"` returns a `CanvasRenderingContext2D` object, whereas calling it with `\"experimental-webgl\"` (or `\"webgl\"`) returns a `WebGLRenderingContext` object. This context is only available on browsers that implement WebGL.\n\t**/\n\tfunction getContext( contextId : String, ?contextOptions : Dynamic ) : Dynamic/*MISSING nsISupports*/;\n\t/** @throws DOMError */\n\t\n\t/**\n\t\tReturns a data-URL containing a representation of the image in the format specified by the `type` parameter (defaults to `png`). The returned image is in a resolution of 96dpi.\n\t**/\n\tfunction toDataURL( ?type : String = \"\", ?encoderOptions : Dynamic ) : String;\n\t/** @throws DOMError */\n\t\n\t/**\n\t\tCreates a `Blob` object representing the image contained in the canvas; this file may be cached on the disk or stored in memory at the discretion of the user agent.\n\t**/\n\tfunction toBlob( callback : Blob -> Void, ?type : String = \"\", ?encoderOptions : Dynamic ) : Void;\n\t\n\t/** Shorthand for getting a CanvasRenderingContext2D. */\n\tinline function getContext2d( ?attribs : {} ) : CanvasRenderingContext2D {\n\t\treturn cast getContext(\"2d\", attribs);\n\t}\n\t/** Shorthand for getting a js.html.webgl.RenderingContext. */\n\tinline function getContextWebGL( ?attribs : js.html.webgl.ContextAttributes ) : js.html.webgl.RenderingContext {\n\t\treturn CanvasUtil.getContextWebGL(this, attribs);\n\t}\n}\n\nprivate class CanvasUtil {\n\tpublic static function getContextWebGL( canvas :CanvasElement, attribs :{} ) {\n\t\tfor (name in [\"webgl\", \"experimental-webgl\"]) {\n\t\t\tvar ctx = canvas.getContext(name, attribs);\n\t\t\tif (ctx != null) return ctx;\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n#if !nodejs\n@:ifFeature(\"js.html.ArrayBuffer.*\")\nclass ArrayBuffer {\n\n\tpublic var byteLength : Int;\n\tvar a : Array<Int>;\n\n\tpublic function new( ?a : Dynamic ) {\n\t\tif( Std.is(a,Array) ) {\n\t\t\tthis.a = a;\n\t\t\tbyteLength = a.length;\n\t\t} else {\n\t\t\tvar len : Int = a;\n\t\t\tthis.a = [];\n\t\t\tfor( i in 0...len )\n\t\t\t\tthis.a[i] = 0;\n\t\t\tbyteLength = len;\n\t\t}\n\t}\n\n\tpublic function slice(begin,?end) {\n\t\treturn new ArrayBuffer(a.slice(begin,end));\n\t}\n\n\tstatic function sliceImpl(begin,?end) {\n\t\tvar u = new js.html.Uint8Array(js.Lib.nativeThis, begin, end == null ? null : end - begin);\n\t\tvar result = new js.html.ArrayBuffer(u.byteLength);\n\t\tvar resultArray = new js.html.Uint8Array(result);\n\t\tresultArray.set(u);\n\t\treturn result;\n\t}\n\n\tstatic function __init__() untyped {\n\t\tvar ArrayBuffer = js.Lib.global.ArrayBuffer || js.html.compat.ArrayBuffer;\n\t\tif( ArrayBuffer.prototype.slice == null ) ArrayBuffer.prototype.slice = sliceImpl; // IE10\n\t}\n}\n#end","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n#if !nodejs\nimport haxe.io.Error;\n\n@:ifFeature(\"js.html.DataView.*\")\n@:access(js.html.compat.ArrayBuffer)\nclass DataView {\n\n\tvar buf : ArrayBuffer;\n\tvar offset : Int;\n\tvar length : Int;\n\n\tpublic var byteLength(default,null):Int;\n\tpublic var byteOffset(default,null):Int;\n\tpublic var buffer(default,null):ArrayBuffer;\n\n\tpublic function new( buffer : ArrayBuffer, ?byteOffset : Int, ?byteLength : Int ) : Void {\n\t\tthis.buf = buffer;\n\t\tthis.offset = byteOffset == null ? 0 : byteOffset;\n\t\tthis.length = byteLength == null ? buffer.byteLength - this.offset : byteLength;\n\t\tif( offset < 0 || length < 0 || offset+length > buffer.byteLength )\n\t\t\tthrow OutsideBounds;\n\t\tthis.byteLength = length;\n\t\tthis.byteOffset = offset;\n\t\tthis.buffer = buf;\n\t}\n\n\tpublic function getInt8( byteOffset : Int ) : Int {\n\t\tvar v = buf.a[offset + byteOffset];\n\t\treturn v >= 0x80 ? v - 256 : v;\n\t}\n\n\tpublic function getUint8( byteOffset : Int ) : Int {\n\t\treturn buf.a[offset + byteOffset];\n\t}\n\n\tpublic function getInt16( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\tvar v = getUint16(byteOffset, littleEndian);\n\t\treturn v >= 0x8000 ? v - 65536 : v;\n\t}\n\n\tpublic function getUint16( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\treturn littleEndian ? buf.a[offset + byteOffset] | (buf.a[offset + byteOffset + 1] << 8) : (buf.a[offset + byteOffset]<<8) | buf.a[offset + byteOffset + 1];\n\t}\n\n\tpublic function getInt32( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\tvar p = offset + byteOffset;\n\t\tvar a = buf.a[p++];\n\t\tvar b = buf.a[p++];\n\t\tvar c = buf.a[p++];\n\t\tvar d = buf.a[p++];\n\t\treturn littleEndian ? a | (b<<8) | (c<<16) | (d<<24) : d | (c << 8) | (b << 16) | (a << 24);\n\t}\n\n\tpublic function getUint32( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\tvar v = getInt32(byteOffset, littleEndian);\n\t\treturn v < 0 ? cast (v + 4294967296.) : v;\n\t}\n\n\tpublic function getFloat32( byteOffset : Int, ?littleEndian : Bool ) : Float {\n\t\treturn haxe.io.FPHelper.i32ToFloat(getInt32(byteOffset,littleEndian));\n\t}\n\n\tpublic function getFloat64( byteOffset : Int, ?littleEndian : Bool ) : Float {\n\t\tvar a = getInt32(byteOffset, littleEndian);\n\t\tvar b = getInt32(byteOffset + 4, littleEndian);\n\t\treturn haxe.io.FPHelper.i64ToDouble(littleEndian?a:b,littleEndian?b:a);\n\t}\n\n\tpublic function setInt8( byteOffset : Int, value : Int ) : Void {\n\t\tbuf.a[byteOffset + offset] = (value < 0) ? (value + 128) & 0xFF : value & 0xFF;\n\t}\n\n\tpublic function setUint8( byteOffset : Int, value : Int ) : Void {\n\t\tbuf.a[byteOffset + offset] = value & 0xFF;\n\t}\n\n\tpublic function setInt16( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tsetUint16(byteOffset, value < 0 ? value + 65536 : value, littleEndian);\n\t}\n\n\tpublic function setUint16( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tvar p = byteOffset + offset;\n\t\tif( littleEndian ) {\n\t\t\tbuf.a[p] = value&0xFF;\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t} else {\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t\tbuf.a[p] = value&0xFF;\n\t\t}\n\t}\n\n\tpublic function setInt32( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tsetUint32(byteOffset, value, littleEndian);\n\t}\n\n\tpublic function setUint32( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tvar p = byteOffset + offset;\n\t\tif( littleEndian ) {\n\t\t\tbuf.a[p++] = value & 0xFF;\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t\tbuf.a[p++] = (value>>16) & 0xFF;\n\t\t\tbuf.a[p++] = value >>> 24;\n\t\t} else {\n\t\t\tbuf.a[p++] = value >>> 24;\n\t\t\tbuf.a[p++] = (value>>16) & 0xFF;\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t\tbuf.a[p++] = value & 0xFF;\n\t\t}\n\t}\n\n\tpublic function setFloat32( byteOffset : Int, value : Float, ?littleEndian : Bool ) : Void {\n\t\tsetUint32(byteOffset, haxe.io.FPHelper.floatToI32(value),littleEndian);\n\t}\n\n\tpublic function setFloat64( byteOffset : Int, value : Float, ?littleEndian : Bool ) : Void {\n\t\tvar i64 = haxe.io.FPHelper.doubleToI64(value);\n\t\tif( littleEndian ) {\n\t\t\tsetUint32(byteOffset, i64.low);\n\t\t\tsetUint32(byteOffset, i64.high);\n\t\t} else {\n\t\t\tsetUint32(byteOffset, i64.high);\n\t\t\tsetUint32(byteOffset, i64.low);\n\t\t}\n\t}\n\n\tstatic function __init__() {\n\t\tvar DataView = untyped js.Lib.global.DataView || js.html.compat.DataView;\n\t}\n\n}\n#end","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n#if !nodejs\nimport js.Lib.nativeThis;\n\n@:ifFeature(\"js.html.Float32Array.*\")\nclass Float32Array {\n\n\tstatic var BYTES_PER_ELEMENT = 4;\n\n\tstatic function _new( ?arg1 : Dynamic, ?offset : Int, ?length : Int ) : Dynamic {\n\t\tvar arr : Array<Float>;\n\t\tif( untyped __typeof__(arg1) == 'number' ) {\n\t\t\tarr = new Array();\n\t\t\tfor( i in 0...arg1 )\n\t\t\t\tarr[i] = 0;\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length << 2;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer([for( i in 0...arr.length << 2 ) 0]); // no sync\n\t\t\t}\n\t\t} else if( Std.is(arg1,ArrayBuffer) ) {\n\t\t\tvar buffer : ArrayBuffer = arg1;\n\t\t\tif( offset == null ) offset = 0;\n\t\t\tif( length == null ) length = (buffer.byteLength - offset) >> 2;\n\t\t\tarr = [];\n\t\t\t// decode buffer\n\t\t\tfor( i in 0...length ) {\n\t\t\t\tvar val = untyped buffer.a[offset++] | (buffer.a[offset++] << 8) | (buffer.a[offset++] << 16) | (buffer.a[offset++] << 24);\n\t\t\t\tarr.push(haxe.io.FPHelper.i32ToFloat(val));\n\t\t\t}\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length<<2;\n\t\t\t\tarr.byteOffset = offset;\n\t\t\t\tarr.buffer = buffer;\n\t\t\t}\n\t\t} else if( Std.is(arg1, Array) ) {\n\t\t\tarr = (arg1 : Array<Float>).copy();\n\t\t\t// loss of memory sync between buffer and array\n\t\t\tvar buffer = [];\n\t\t\tfor( f in arr ) {\n\t\t\t\tvar i = haxe.io.FPHelper.floatToI32(f);\n\t\t\t\tbuffer.push(i&0xFF);\n\t\t\t\tbuffer.push((i>>8)&0xFF);\n\t\t\t\tbuffer.push((i>>16)&0xFF);\n\t\t\t\tbuffer.push(i>>>24);\n\t\t\t}\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length << 2;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(buffer);\n\t\t\t}\n\t\t} else\n\t\t\tthrow \"TODO \"+arg1;\n\t\tuntyped {\n\t\t\tarr.subarray = _subarray;\n\t\t\tarr.set = _set;\n\t\t}\n\t\treturn arr;\n\t}\n\n\tstatic function _set( ?arg : Dynamic, ?offset : Int ) {\n\t\tif( Std.is(arg.buffer,ArrayBuffer) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( arg.byteLength + offset > nativeThis.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...arg.byteLength )\n\t\t\t\tnativeThis[i + offset] = a[i];\n\t\t} else if( Std.is(arg,Array) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( a.length + offset > nativeThis.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...a.length )\n\t\t\t\tnativeThis[i + offset] = a[i];\n\t\t} else\n\t\t\tthrow \"TODO\";\n\t}\n\n\tstatic function _subarray( start : Int, ?end : Int ) {\n\t\tvar a = _new(nativeThis.slice(start,end));\n\t\ta.byteOffset = start * 4;\n\t\treturn a;\n\t}\n\n\tstatic function __init__() {\n\t\tvar Float32Array = untyped js.Lib.global.Float32Array || _new;\n\t}\n\n}\n#end","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n#if !nodejs\nimport js.Lib.nativeThis;\n\n@:ifFeature(\"js.html.Uint8Array.*\")\nclass Uint8Array {\n\n\tstatic var BYTES_PER_ELEMENT = 1;\n\n\tstatic function _new( ?arg1 : Dynamic, ?offset : Int, ?length : Int ) : Dynamic {\n\t\tvar arr;\n\t\tif( untyped __typeof__(arg1) == 'number' ) {\n\t\t\tarr = new Array();\n\t\t\tfor( i in 0...arg1 )\n\t\t\t\tarr[i] = 0;\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(arr);\n\t\t\t}\n\t\t} else if( Std.is(arg1,ArrayBuffer) ) {\n\t\t\tvar buffer : ArrayBuffer = arg1;\n\t\t\tif( offset == null ) offset = 0;\n\t\t\tif( length == null ) length = buffer.byteLength - offset;\n\t\t\tif( offset == 0 )\n\t\t\t\tarr = cast @:privateAccess buffer.a;\n\t\t\telse\n\t\t\t\t// here we are losing the fact that we should reference the same data,\n\t\t\t\t// but I don't see another way to have this behaviour while keeping [] access\n\t\t\t\tarr = cast @:privateAccess buffer.a.slice(offset, offset+length);\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = offset;\n\t\t\t\tarr.buffer = buffer;\n\t\t\t}\n\t\t} else if( Std.is(arg1, Array) ) {\n\t\t\tarr = (arg1 : Array<Int>).copy();\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(arr);\n\t\t\t}\n\t\t} else\n\t\t\tthrow \"TODO \"+arg1;\n\t\tuntyped {\n\t\t\tarr.subarray = _subarray;\n\t\t\tarr.set = _set;\n\t\t}\n\t\treturn arr;\n\t}\n\n\tstatic function _set( ?arg : Dynamic, ?offset : Int ) {\n\t\tif( Std.is(arg.buffer,ArrayBuffer) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( arg.byteLength + offset > nativeThis.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...arg.byteLength )\n\t\t\t\tnativeThis[i + offset] = a[i];\n\t\t} else if( Std.is(arg,Array) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( a.length + offset > nativeThis.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...a.length )\n\t\t\t\tnativeThis[i + offset] = a[i];\n\t\t} else\n\t\t\tthrow \"TODO\";\n\t}\n\n\tstatic function _subarray( start : Int, ?end : Int ) {\n\t\tvar a = _new(nativeThis.slice(start,end));\n\t\ta.byteOffset = start;\n\t\treturn a;\n\t}\n\n\tstatic function __init__() {\n\t\tvar Uint8Array = untyped js.Lib.global.Uint8Array || _new;\n\t}\n\n}\n#end","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth;\r\n\r\nimport haxe.io.Path;\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\nimport haxe.EnumFlags;\r\n\r\n/**\r\n * Generally not used by user-facing code, this `enum` is for tracking\r\n * the type of log that is being written.\r\n */\r\nenum LogFunctions {\r\n\t/**\r\n\t * Show-stopping error\r\n\t */\r\n\tFatal;\r\n\r\n\t/**\r\n\t * Crashes / exceptions\r\n\t */\r\n\tError;\r\n\r\n\t/**\r\n\t * Incorrect behaviour but can continue\r\n\t */\r\n\tWarn;\r\n\r\n\t/**\r\n\t * Indicates correct behaviour\r\n\t */\r\n\tInfo;\r\n\r\n\t/**\r\n\t * Behind-the-scenes poking around\r\n\t */\r\n\tDebug;\r\n}\r\n\r\nclass Log {\r\n    private function new() {}\r\n\r\n\tpublic static function log(v:Dynamic, func:LogFunctions, ?pos:haxe.PosInfos):Void {\r\n\t\t#if js\r\n            var console:js.html.Console = js.Browser.console;\r\n\t\t\tswitch(func) {\r\n\t\t\t\tcase Fatal: {\r\n\t\t\t\t\tconsole.error(pos.fileName + ':' + pos.lineNumber, v);\r\n\t\t\t\t\tthrow new String('FATAL EXCEPTION: ' + pos.fileName + ':' + pos.lineNumber + ': ' + v.toString());\r\n\t\t\t\t}\r\n\t\t\t\tcase Error: console.error(pos.fileName + ':' + pos.lineNumber, v);\r\n\t\t\t\tcase Warn: console.warn(pos.fileName + ':' + pos.lineNumber, v);\r\n\t\t\t\tcase Info: console.info(pos.fileName + ':' + pos.lineNumber, v);\r\n\t\t\t\tcase Debug: console.debug(pos.fileName + ':' + pos.lineNumber, v);\r\n\t\t\t\tdefault: console.log(pos.fileName + ':' + pos.lineNumber, v);\r\n\t\t\t}\r\n\t\t#else\r\n\t\t\ttrace(v, pos);\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t * Use for show-stopping errors\r\n\t * @param value the message / object to log\r\n\t */\r\n\tmacro public static function fatal(value:Dynamic):Expr {\r\n\t\t#if log_fatal\r\n\t\t\treturn macro @:pos(Context.currentPos()) mammoth.Log.log($value, mammoth.Log.LogFunctions.Fatal);\r\n\t\t#else\r\n\t\t\treturn macro null;\r\n\t\t#end\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Use for crashes and exceptions, and any other errors that aren't\r\n\t * necessarily show-stopping but require intervention.\r\n\t * @param value the message / object to log\r\n\t */\r\n\tmacro public static function error(value:Dynamic):Expr {\r\n\t\t#if log_error\r\n\t\t\treturn macro @:pos(Context.currentPos()) mammoth.Log.log($value, mammoth.Log.LogFunctions.Error);\r\n\t\t#else\r\n\t\t\treturn macro null;\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t * Use for indicating incorrect behaviour (but execution can be continued).\r\n\t * @param value the message / object to log\r\n\t */\r\n\tmacro public static function warning(value:Dynamic):Expr {\r\n\t\t#if log_warning\r\n\t\t\treturn macro @:pos(Context.currentPos()) mammoth.Log.log($value, mammoth.Log.LogFunctions.Warn);\r\n\t\t#else\r\n\t\t\treturn macro null;\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t * Use to indicate normal behaviour\r\n\t * @param value the message / object to log\r\n\t */\r\n\tmacro public static function info(value:Dynamic):Expr {\r\n\t\t#if log_info\r\n\t\t\treturn macro @:pos(Context.currentPos()) mammoth.Log.log($value, mammoth.Log.LogFunctions.Info);\r\n\t\t#else\r\n\t\t\treturn macro null;\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t * Use for logging behind-the-scenes information.\r\n\t * @param value the message / object to log\r\n\t */\r\n\tmacro public static function debug(value:Dynamic):Expr {\r\n\t\t#if debug\r\n\t\t\treturn macro @:pos(Context.currentPos()) mammoth.Log.log($value, mammoth.Log.LogFunctions.Debug);\r\n\t\t#else\r\n\t\t\treturn macro null;\r\n\t\t#end\r\n\t}\r\n}","package mammoth.platform.js;\r\n\r\nimport js.html.ArrayBuffer;\r\nimport js.html.DataView;\r\nimport js.html.XMLHttpRequest;\r\nimport js.html.XMLHttpRequestResponseType;\r\nimport haxe.io.Bytes;\r\nimport haxe.Json;\r\nimport mammoth.debug.Exception;\r\nimport promhx.Deferred;\r\nimport promhx.Promise;\r\n\r\nclass Assets {\r\n\tpublic function new() {}\r\n\r\n\tpublic function load(path:String):Promise<Bytes> {\r\n\t\tvar d:Deferred<Bytes> = new Deferred<Bytes>();\r\n\t\tvar p:Promise<Bytes> = d.promise();\r\n\r\n\t\tvar xhr:XMLHttpRequest = new XMLHttpRequest();\r\n\t\txhr.open(\"GET\", path, true);\r\n\t\txhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n\t\txhr.responseType = XMLHttpRequestResponseType.ARRAYBUFFER;\r\n\t\txhr.onload = function() {\r\n\t\t\tif(xhr.status >= 200 && xhr.status < 300) {\r\n\t\t\t\tvar buffer:ArrayBuffer = cast xhr.response;\r\n\t\t\t\tvar view:DataView = new DataView(buffer);\r\n\t\t\t\tvar bytes:Bytes = Bytes.alloc(view.byteLength);\r\n\t\t\t\tfor(i in 0...view.byteLength) bytes.set(i, view.getUint8(i));\r\n\t\t\t\td.resolve(bytes);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td.throwError(new Exception('error ${xhr.status}: ${xhr.statusText}', false, 'HTTPResponse'));\r\n\t\t\t}\r\n\t\t};\r\n\t\txhr.onerror = function() d.throwError(new Exception('unknown error', false, 'HTTPRequest'));\r\n\t\txhr.onabort = function() d.throwError(new Exception('aborted', false, 'HTTPRequest'));\r\n\t\txhr.ontimeout = function() d.throwError(new Exception('timed out', false, 'HTTPRequest'));\r\n\t\txhr.send();\r\n\r\n\t\treturn p;\r\n\t}\r\n\r\n\tpublic function loadJSON(path:String):Promise<Dynamic> {\r\n\t\tvar d:Deferred<Dynamic> = new Deferred<Dynamic>();\r\n\t\tvar p:Promise<Dynamic> = d.promise();\r\n\r\n\t\tload(path)\r\n\t\t\t.then(function(b:Bytes) { d.resolve(Json.parse(b.toString())); })\r\n\t\t\t.catchError(function(e:Dynamic) { d.throwError(e); });\r\n\r\n\t\treturn p;\r\n\t}\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.gl.js;\r\n\r\nimport js.Browser;\r\nimport js.html.CanvasElement;\r\nimport js.html.webgl.RenderingContext;\r\n\r\nimport mammoth.platform.ArrayBufferView;\r\nimport mammoth.platform.Float32Array;\r\nimport mammoth.platform.Int16Array;\r\nimport mammoth.platform.Int32Array;\r\nimport mammoth.utilities.Colour;\r\n\r\n@:allow(mammoth.Mammoth)\r\nclass Graphics {\r\n    public var context:RenderingContext;\r\n\r\n    private var halfFloat:Dynamic;\r\n    private var depthTexture:Dynamic;\r\n    private var anisotropicFilter:Dynamic;\r\n    private var drawBuffers:Dynamic;\r\n\r\n    private var width(get, never):Float;\r\n    private inline function get_width():Float return context.drawingBufferWidth;\r\n\r\n    private var height(get, never):Float;\r\n    private inline function get_height():Float return context.drawingBufferHeight;\r\n\r\n    private var aspectRatio(get, never):Float;\r\n    private inline function get_aspectRatio():Float\r\n        return (context.canvas.clientWidth / context.canvas.clientHeight);\r\n\r\n    private function new() {}\r\n\r\n    private function init() {\r\n        // create our canvas\r\n        var canvas:CanvasElement = Browser.document.createCanvasElement();\r\n        context = canvas.getContextWebGL({\r\n            alpha: false,\r\n            antialias: false,\r\n            depth: true,\r\n            premultipliedAlpha: false,\r\n            preserveDrawingBuffer: true,\r\n            stencil: true,\r\n        });\r\n\r\n        // add the GL extensions\r\n        if(context != null) {\r\n            //context.pixelStorei(GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\r\n            context.getExtension(\"OES_texture_float\");\r\n            context.getExtension(\"OES_texture_float_linear\");\r\n            halfFloat = context.getExtension(\"OES_texture_half_float\");\r\n            context.getExtension(\"OES_texture_half_float_linear\");\r\n            depthTexture = context.getExtension(\"WEBGL_depth_texture\");\r\n            context.getExtension(\"EXT_shader_texture_lod\");\r\n            context.getExtension(\"OES_standard_derivatives\");\r\n            anisotropicFilter = context.getExtension(\"EXT_texture_filter_anisotropic\");\r\n            if(anisotropicFilter == null)\r\n                anisotropicFilter = context.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");\r\n            drawBuffers = context.getExtension(\"WEBGL_draw_buffers\");\r\n        }\r\n\r\n        // add the canvas to the body\r\n        Browser.document.body.appendChild(canvas);\r\n    }\r\n\r\n    public function checkWindowSize() {\r\n        var displayWidth:Int  = Math.floor(context.canvas.clientWidth  * Browser.window.devicePixelRatio);\r\n        var displayHeight:Int = Math.floor(context.canvas.clientHeight * Browser.window.devicePixelRatio);\r\n\r\n        if(context.canvas.width != displayWidth || context.canvas.height != displayHeight) {\r\n            context.canvas.width = displayWidth;\r\n            context.canvas.height = displayHeight;\r\n        }\r\n    }\r\n\r\n\tpublic inline function getExtension(name:String):Dynamic return context.getExtension(name);\r\n\tpublic inline function activeTexture(texture:Int):Void context.activeTexture(texture);\r\n\tpublic inline function attachShader(program:Program, shader:Shader):Void context.attachShader(program, shader);\r\n\tpublic inline function bindAttribLocation(program:Program, index:Int, name:String):Void context.bindAttribLocation(program, index, name);\r\n\tpublic inline function bindBuffer(target:Int, buffer:Buffer):Void context.bindBuffer(target, buffer);\r\n\tpublic inline function bindFramebuffer(target:Int, framebuffer:Framebuffer):Void context.bindFramebuffer(target, framebuffer);\r\n\tpublic inline function bindRenderbuffer(target:Int, renderbuffer:Renderbuffer):Void context.bindRenderbuffer(target, renderbuffer);\r\n\tpublic inline function bindTexture(target:Int, texture:Texture):Void context.bindTexture(target, texture);\r\n\tpublic inline function blendColor(colour:Colour):Void context.blendColor(colour.r, colour.g, colour.b, colour.a);\r\n\tpublic inline function blendEquation(mode:Int):Void context.blendEquation(mode);\r\n\tpublic inline function blendEquationSeparate(modeRGB:Int, modeAlpha:Int):Void context.blendEquationSeparate(modeRGB, modeAlpha);\r\n\tpublic inline function blendFunc(sfactor:Int, dfactor:Int):Void context.blendFunc(sfactor, dfactor);\r\n\tpublic inline function blendFuncSeparate(srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int):Void context.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n\t/*@:overload(function(target:Int, size:Int, usage:Int):Void {})\r\n\t// @:overload(function(target:Int, data:js.html.ArrayBufferView, usage:Int):Void {})\r\n\t// @:overload(function(target:Int, data:js.html.ArrayBuffer, usage:Int):Void {})*/\r\n\tpublic inline function bufferData(target:Int, data:Dynamic, usage:Int):Void context.bufferData(target, data, usage);\r\n\t/*@:overload(function(target:Int, offset:Int, data:js.html.ArrayBufferView):Void {})\r\n\t// @:overload(function(target:Int, offset:Int, data:js.html.ArrayBuffer):Void {})*/\r\n\t// public inline function bufferSubData(target:Int, offset:Int, data:Dynamic):Void context.bufferSubData(target, offset, data);\r\n\t// public inline function checkFramebufferStatus(target:Int):Int return context.checkFrameBufferStatus(target);\r\n\tpublic inline function clear(mask:Int):Void context.clear(mask);\r\n\tpublic inline function clearColor(colour:Colour):Void context.clearColor(colour.r, colour.g, colour.b, colour.a);\r\n\t// public inline function clearDepth(depth:Float):Void;\r\n\t// public inline function clearStencil(s:Int):Void;\r\n\t// public inline function colorMask(red:Bool, green:Bool, blue:Bool, alpha:Bool):Void;\r\n\tpublic inline function compileShader(shader:Shader):Void context.compileShader(shader);\r\n\t// public inline function compressedTexImage2D(target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, data:js.html.ArrayBufferView):Void;\r\n\t// public inline function compressedTexSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, data:js.html.ArrayBufferView):Void;\r\n\t// public inline function copyTexImage2D(target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int):Void;\r\n\t// public inline function copyTexSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int):Void;\r\n\tpublic inline function createBuffer():Buffer return context.createBuffer();\r\n\t// public inline function createFramebuffer():Framebuffer;\r\n\tpublic inline function createProgram():Program return context.createProgram();\r\n\t// public inline function createRenderbuffer():Renderbuffer;\r\n\tpublic inline function createShader(type:Int):Shader return context.createShader(type);\r\n\tpublic inline function createTexture():Texture return context.createTexture();\r\n\tpublic inline function cullFace(mode:Int):Void context.cullFace(mode);\r\n\t// public inline function deleteBuffer(buffer:Buffer):Void;\r\n\t// public inline function deleteFramebuffer(framebuffer:Framebuffer):Void;\r\n\t// public inline function deleteProgram(program:Program):Void;\r\n\t// public inline function deleteRenderbuffer(renderbuffer:Renderbuffer):Void;\r\n\t// public inline function deleteShader(shader:Shader):Void;\r\n\t// public inline function deleteTexture(texture:Texture):Void;\r\n\tpublic inline function depthFunc(func:Int):Void context.depthFunc(func);\r\n\tpublic inline function depthMask(flag:Bool):Void return context.depthMask(flag);\r\n\t// public inline function depthRange(zNear:Float, zFar:Float):Void;\r\n\t// public inline function detachShader(program:Program, shader:Shader):Void;\r\n\tpublic inline function disable(cap:Int):Void context.disable(cap);\r\n\t// public inline function disableVertexAttribArray(index:Int):Void;\r\n\tpublic inline function drawArrays(mode:Int, first:Int, count:Int):Void context.drawArrays(mode, first, count);\r\n\tpublic inline function drawElements(mode:Int, count:Int, type:Int, offset:Int):Void context.drawElements(mode, count, type, offset);\r\n\tpublic inline function enable(cap:Int):Void context.enable(cap);\r\n\tpublic inline function enableVertexAttribArray(index:Int):Void context.enableVertexAttribArray(index);\r\n\t// public inline function finish():Void;\r\n\t// public inline function flush():Void;\r\n\t// public inline function framebufferRenderbuffer(target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:Renderbuffer):Void;\r\n\t// public inline function framebufferTexture2D(target:Int, attachment:Int, textarget:Int, texture:Texture, level:Int):Void;\r\n\t// public inline function frontFace(mode:Int):Void;\r\n\t// public inline function generateMipmap(target:Int):Void;\r\n\t// public inline function getActiveAttrib(program:Program, index:Int):ActiveInfo;\r\n\t// public inline function getActiveUniform(program:Program, index:Int):ActiveInfo;\r\n\t// public inline function getAttachedShaders(program:Program):Array<Shader>;\r\n\tpublic inline function getAttribLocation(program:Program, name:String):Int return context.getAttribLocation(program, name);\r\n\t// public inline function getBufferParameter(target:Int, pname:Int):Dynamic;\r\n\t// public inline function getParameter(pname:Int):Dynamic;\r\n\t// public inline function getError():Int;\r\n\t// public inline function getFramebufferAttachmentParameter(target:Int, attachment:Int, pname:Int):Dynamic;\r\n\tpublic inline function getProgramParameter(program:Program, pname:Int):Dynamic return context.getProgramParameter(program, pname);\r\n\tpublic inline function getProgramInfoLog(program:Program):String return context.getProgramInfoLog(program);\r\n\t// public inline function getRenderbufferParameter(target:Int, pname:Int):Dynamic;\r\n\tpublic inline function getShaderParameter(shader:Shader, pname:Int):Dynamic return context.getShaderParameter(shader, pname);\r\n\t// public inline function getShaderPrecisionFormat(shadertype:Int, precisiontype:Int):ShaderPrecisionFormat;\r\n\tpublic inline function getShaderInfoLog(shader:Shader):String return context.getShaderInfoLog(shader);\r\n\t// public inline function getShaderSource(shader:Shader):String;\r\n\t// public inline function getTexParameter(target:Int, pname:Int):Dynamic;\r\n\tpublic inline function getUniform(program:Program, location:UniformLocation):Dynamic return context.getUniform(program, location);\r\n\tpublic inline function getUniformLocation(program:Program, name:String):UniformLocation return context.getUniformLocation(program, name);\r\n\tpublic inline function getVertexAttrib(index:Int, pname:Int):Dynamic return context.getVertexAttrib(index, pname);\r\n\t// public inline function getVertexAttribOffset(index:Int, pname:Int):Int;\r\n\t// public inline function hint(target:Int, mode:Int):Void;\r\n\t// public inline function isBuffer(buffer:Buffer):Bool;\r\n\t// public inline function isEnabled(cap:Int):Bool;\r\n\t// public inline function isFramebuffer(framebuffer:Framebuffer):Bool;\r\n\t// public inline function isProgram(program:Program):Bool;\r\n\t// public inline function isRenderbuffer(renderbuffer:Renderbuffer):Bool;\r\n\t// public inline function isShader(shader:Shader):Bool;\r\n\t// public inline function isTexture(texture:Texture):Bool;\r\n\t// public inline function lineWidth(width:Float):Void;\r\n\tpublic inline function linkProgram(program:Program):Void return context.linkProgram(program);\r\n\tpublic inline function pixelStorei(pname:Int, param:Int):Void context.pixelStorei(pname, param);\r\n\t// public inline function polygonOffset(factor:Float, units:Float):Void;\r\n\t// public inline function readPixels(x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:js.html.ArrayBufferView):Void;\r\n\t// public inline function renderbufferStorage(target:Int, internalformat:Int, width:Int, height:Int):Void;\r\n\t// public inline function sampleCoverage(value:Float, invert:Bool):Void;\r\n\tpublic inline function scissor(x:Int, y:Int, width:Int, height:Int):Void context.scissor(x, y, width, height);\r\n\tpublic inline function shaderSource(shader:Shader, source:String):Void context.shaderSource(shader, source);\r\n\t// public inline function stencilFunc(func:Int, ref:Int, mask:Int):Void;\r\n\t// public inline function stencilFuncSeparate(face:Int, func:Int, ref:Int, mask:Int):Void;\r\n\t// public inline function stencilMask(mask:Int):Void;\r\n\t// public inline function stencilMaskSeparate(face:Int, mask:Int):Void;\r\n\t// public inline function stencilOp(fail:Int, zfail:Int, zpass:Int):Void;\r\n\t// public inline function stencilOpSeparate(face:Int, fail:Int, zfail:Int, zpass:Int):Void;\r\n\t// @:overload(function(target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:js.html.ArrayBufferView):Void {})\r\n\t// @:overload(function(target:Int, level:Int, internalformat:Int, format:Int, type:Int, pixels:js.html.ImageData):Void {})\r\n\t// @:overload(function(target:Int, level:Int, internalformat:Int, format:Int, type:Int, image:js.html.ImageElement):Void {})\r\n\t// @:overload(function(target:Int, level:Int, internalformat:Int, format:Int, type:Int, canvas:js.html.CanvasElement):Void {})\r\n\t// public inline function texImage2D(target:Int, level:Int, internalformat:Int, format:Int, type:Int, video:js.html.VideoElement):Void;\r\n\tpublic inline function texImage2D(target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:ArrayBufferView):Void\r\n\t\tcontext.texImage2D(target, level, internalformat, width, height, border, format, type, pixels);\r\n\t// public inline function texParameterf(target:Int, pname:Int, param:Float):Void;\r\n\tpublic inline function texParameteri(target:Int, pname:Int, param:Int):Void context.texParameteri(target, pname, param);\r\n\t// @:overload(function(target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:js.html.ArrayBufferView):Void {})\r\n\t// @:overload(function(target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, pixels:js.html.ImageData):Void {})\r\n\t// @:overload(function(target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, image:js.html.ImageElement):Void {})\r\n\t// @:overload(function(target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, canvas:js.html.CanvasElement):Void {})\r\n\t// public inline function texSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, video:js.html.VideoElement):Void;\r\n\tpublic inline function uniform1f(location:UniformLocation, x:Float):Void context.uniform1f(location, x);\r\n    public inline function uniform1fv(location:UniformLocation, v:Float32Array) context.uniform1fv(location, v);\r\n\tpublic inline function uniform1i(location:UniformLocation, x:Int):Void context.uniform1i(location, x);\r\n    public inline function uniform1iv(location:UniformLocation, v:Int32Array) context.uniform1iv(location, v);\r\n\tpublic inline function uniform2f(location:UniformLocation, x:Float, y:Float):Void context.uniform2f(location, x, y);\r\n\tpublic inline function uniform2fv(location:UniformLocation, v:Float32Array):Void context.uniform2fv(location, v);\r\n    public inline function uniform2i(location:UniformLocation, x:Int, y:Int):Void context.uniform2i(location, x, y);\r\n    public inline function uniform2iv(location:UniformLocation, v:Int32Array):Void context.uniform2iv(location, v);\r\n    public inline function uniform3f(location:UniformLocation, x:Float, y:Float, z:Float):Void context.uniform3f(location, x, y, z);\r\n    public inline function uniform3fv(location:UniformLocation, v:Float32Array):Void context.uniform3fv(location, v);\r\n    public inline function uniform3i(location:UniformLocation, x:Int, y:Int, z:Int):Void context.uniform3i(location, x, y, z);\r\n    public inline function uniform3iv(location:UniformLocation, v:Int32Array):Void context.uniform3iv(location, v);\r\n    public inline function uniform4f(location:UniformLocation, x:Float, y:Float, z:Float, w:Float):Void context.uniform4f(location, x, y, z, w);\r\n    public inline function uniform4fv(location:UniformLocation, v:Float32Array):Void context.uniform4fv(location, v);\r\n    public inline function uniform4i(location:UniformLocation, x:Int, y:Int, z:Int, w:Int):Void context.uniform4i(location, x, y, z, w);\r\n    public inline function uniform4iv(location:UniformLocation, v:Int32Array):Void context.uniform4iv(location, v);\r\n    public inline function uniformMatrix2fv(location:UniformLocation, v:Float32Array):Void context.uniformMatrix2fv(location, false, v);\r\n    public inline function uniformMatrix3fv(location:UniformLocation, v:Float32Array):Void context.uniformMatrix3fv(location, false, v);\r\n    public inline function uniformMatrix4fv(location:UniformLocation, v:Float32Array):Void context.uniformMatrix4fv(location, false, v);\r\n\tpublic inline function useProgram(program:Program):Void return context.useProgram(program);\r\n\t// public inline function validateProgram(program:Program):Void;\r\n\t// public inline function vertexAttrib1f(indx:Int, x:Float):Void;\r\n\t// @:overload(function(indx:Int, values:js.html.Float32Array):Void {})\r\n\t// public inline function vertexAttrib1fv(indx:Int, values:Array<Float>):Void;\r\n\t// public inline function vertexAttrib2f(indx:Int, x:Float, y:Float):Void;\r\n\t// @:overload(function(indx:Int, values:js.html.Float32Array):Void {})\r\n\t// public inline function vertexAttrib2fv(indx:Int, values:Array<Float>):Void;\r\n\t// public inline function vertexAttrib3f(indx:Int, x:Float, y:Float, z:Float):Void;\r\n\t// @:overload(function(indx:Int, values:js.html.Float32Array):Void {})\r\n\t// public inline function vertexAttrib3fv(indx:Int, values:Array<Float>):Void;\r\n\t// public inline function vertexAttrib4f(indx:Int, x:Float, y:Float, z:Float, w:Float):Void;\r\n\t// @:overload(function(indx:Int, values:js.html.Float32Array):Void {})\r\n\t// public inline function vertexAttrib4fv(indx:Int, values:Array<Float>):Void;\r\n\tpublic inline function vertexAttribPointer(indx:Int, size:Int, type:Int, normalized:Bool, stride:Int, offset:Int):Void context.vertexAttribPointer(indx, size, type, normalized, stride, offset);\r\n\tpublic inline function viewport(x:Int, y:Int, width:Int, height:Int):Void context.viewport(x, y, width, height);\r\n}","package mammoth.platform.js;\r\n\r\nimport mammoth.Mammoth;\r\nimport js.html.MouseEvent;\r\nimport js.html.DOMRect;\r\n\r\nclass Input {\r\n    public var mouseX(default, null):Float = 0;\r\n    public var mouseY(default, null):Float = 0;\r\n    public var mouseDown(default, null):Bool = false;\r\n\r\n    public function new() {}\r\n\r\n    public function init():Void {\r\n        Mammoth.gl.context.canvas.addEventListener('mousemove', updateMousePosition);\r\n        Mammoth.gl.context.canvas.addEventListener('mousedown', updateMouseDown);\r\n        Mammoth.gl.context.canvas.addEventListener('mouseup', updateMouseUp);\r\n    }\r\n\r\n    private function updateMousePosition(evt:MouseEvent):Void {\r\n        var rect:DOMRect = Mammoth.gl.context.canvas.getBoundingClientRect();\r\n        mouseX = Math.ffloor((evt.clientX - rect.left) / (rect.right - rect.left) * Mammoth.gl.context.canvas.width);\r\n        mouseY = Math.ffloor((evt.clientY - rect.top) / (rect.bottom - rect.top) * Mammoth.gl.context.canvas.height);\r\n    }\r\n\r\n    private function updateMouseDown(evt:MouseEvent):Void {\r\n        if(evt.button == 0) mouseDown = true;\r\n    }\r\n\r\n    private function updateMouseUp(evt:MouseEvent):Void {\r\n        if(evt.button == 0) mouseDown = false;\r\n    }\r\n}","package mammoth;\r\n\r\nimport haxe.Timer;\r\n\r\nclass Stats {\r\n    public var drawCalls:Int = 0;\r\n    public var triangles:Int = 0;\r\n\r\n    public var renderTime:Float = 0;\r\n    public var fps(get, never):Float;\r\n    private function get_fps():Float {\r\n        if(Math.abs(renderTime) <= 0.00000001) return -1;\r\n        return 1 / renderTime;\r\n    }\r\n\r\n    private var renderFrameCount:Int = 0;\r\n    private var renderStart:Float = 0;\r\n    private var renderEnd:Float = 0;\r\n\r\n    public function new() {}\r\n\r\n    public function startRenderTimer():Void {\r\n        if(renderFrameCount == 0) {\r\n            renderStart = Timer.stamp();\r\n        }\r\n    }\r\n\r\n    public function endRenderTimer():Void {\r\n        renderFrameCount++;\r\n        if(renderFrameCount == 120) {\r\n            renderEnd = Timer.stamp();\r\n            renderTime = (renderEnd - renderStart) / 120;\r\n            renderFrameCount = 0;\r\n        }\r\n    }\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.platform.js;\r\n\r\nimport js.Browser;\r\n\r\n@:allow(mammoth.Mammoth)\r\nclass Timing {\r\n    public function new() {}\r\n\r\n    private var animationFrameID:Int = 0;\r\n    private var time:Float = 0;\r\n    private var lastTime:Float = 0;\r\n    private var accumulator:Float = 0;\r\n\r\n    public var timescale:Float = 1.0;\r\n    public var dt(default, null):Float = 1 / 30;\r\n    public var alpha(default, null):Float = 0;\r\n\r\n    private var onUpdate:Float->Void;\r\n    private var onRender:Float->Float->Void;\r\n\r\n    private function onRenderFrame(ts:Float):Void {\r\n        time = ts / 1000;\r\n\r\n        // figure out how long since we last ran\r\n        var delta:Float = (time - lastTime) * timescale;\r\n        lastTime = time;\r\n\r\n        // updates\r\n        accumulator += delta;\r\n        while(accumulator >= dt) {\r\n            onUpdate(dt);\r\n            accumulator -= dt;\r\n        }\r\n\r\n        // renders\r\n        alpha = accumulator / dt;\r\n        onRender(delta, alpha);\r\n\r\n        // go on to the next frame\r\n        requestFrame();\r\n    }\r\n\r\n    private inline function requestFrame() {\r\n        animationFrameID = Browser.window.requestAnimationFrame(onRenderFrame);\r\n    }\r\n\r\n    private function start() {\r\n        requestFrame();\r\n    }\r\n\r\n    private function stop() {\r\n        Browser.window.cancelAnimationFrame(animationFrameID);\r\n    }\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth;\r\n\r\nimport edge.Engine;\r\nimport edge.Phase;\r\nimport mammoth.gl.Graphics;\r\nimport mammoth.platform.Assets;\r\nimport mammoth.platform.Input;\r\nimport mammoth.platform.Timing;\r\nimport mammoth.debug.DebugView;\r\nimport tusk.Tusk;\r\n\r\n@:expose\r\nclass Mammoth {\r\n\t// parts of our system\r\n    public static var engine:Engine;\r\n    public static var preUpdatePhase:Phase;\r\n    public static var updatePhase:Phase;\r\n    public static var postUpdatePhase:Phase;\r\n    public static var renderPhase:Phase;\r\n\r\n    public static var timing:Timing = new Timing();\r\n    public static var gl:Graphics = new Graphics();\r\n    public static var assets:Assets = new Assets();\r\n    public static var input:Input = new Input();\r\n    public static var stats:Stats = new Stats();\r\n    private static var debugView:DebugView;\r\n\r\n    // public timing variables\r\n    public static var time(get, never):Float;\r\n    private inline static function get_time():Float return timing.time;\r\n    public static var alpha(get, never):Float;\r\n    private inline static function get_alpha():Float return timing.alpha;\r\n\r\n    // public size variables\r\n    public static var width(get, never):Float;\r\n    private inline static function get_width():Float return gl.width;\r\n    public static var height(get, never):Float;\r\n    private inline static function get_height():Float return gl.height;\r\n    public static var aspectRatio(get, never):Float;\r\n    private inline static function get_aspectRatio():Float return gl.aspectRatio;\r\n\r\n    static macro function getDefine(key:String):Expr return macro $v{Context.definedValue(key)};\r\n    static macro function isDefined(key:String):Expr return macro $v{Context.defined(key)};\r\n    \r\n    public static function init(?onReady:Void->Void, updateRate:Float=60):Void {\r\n        // initialize our subsystems\r\n        gl.init();\r\n        input.init();\r\n        debugView = new DebugView();\r\n\r\n        // calculate the clock period\r\n        timing.dt = 1 / updateRate;\r\n\r\n        // initialize the ECS\r\n        engine = new Engine();\r\n        preUpdatePhase = engine.createPhase();\r\n        updatePhase = engine.createPhase();\r\n        postUpdatePhase = engine.createPhase();\r\n        renderPhase = engine.createPhase();\r\n\r\n        // initialize our pre- and post- systems\r\n        preUpdatePhase.add(new mammoth.systems.PreTransformSystem());\r\n\r\n        // initialize our rendering\r\n        renderPhase.add(new mammoth.systems.ModelMatrixSystem());\r\n        renderPhase.add(new mammoth.systems.CameraSystem());\r\n        renderPhase.add(new mammoth.systems.RenderSystem());\r\n\r\n        if(onReady != null)\r\n            onReady();\r\n    }\r\n\r\n    public static function begin() {\r\n        timing.onUpdate = onUpdate;\r\n        timing.onRender = onRender;\r\n        timing.start();\r\n    }\r\n\r\n    public static function end() {\r\n        timing.stop();\r\n    }\r\n\r\n    private static function onUpdate(dt:Float):Void {\r\n        Tusk.draw.newFrame();\r\n        Tusk.updateInput(input.mouseX, input.mouseY, input.mouseDown);\r\n\r\n        preUpdatePhase.update(dt);\r\n        updatePhase.update(dt);\r\n        postUpdatePhase.update(dt);\r\n\r\n        Tusk.window(tusk.Control.uuid(), Mammoth.width - 160, 10, 150, 75, 'Stats');\r\n        Tusk.label('Render t: ' + Math.fround(stats.renderTime * 1000 * 10) / 10 + 'ms');\r\n        Tusk.label('FPS: ' + Math.fround(stats.fps * 10) / 10);\r\n        Tusk.label('Draw calls: ' + stats.drawCalls);\r\n        Tusk.label('Triangles: ' + stats.triangles);\r\n    }\r\n\r\n    private static function onRender(dt:Float, alpha:Float):Void {\r\n        stats.drawCalls = 0;\r\n        stats.triangles = 0;\r\n\r\n        stats.startRenderTimer();\r\n        gl.checkWindowSize();\r\n        renderPhase.update(dt);\r\n        stats.endRenderTimer();\r\n\r\n        debugView.draw();\r\n    }\r\n}\r\n","package tusk;\r\n\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\n\r\nclass Control {\r\n    private static var i:Int = 0;\r\n    macro public static function uuid():ExprOf<Int> {\r\n        return macro $v{i++};\r\n    }\r\n\r\n    public var clicked:Bool = false;\r\n    public var state:InputState = InputState.Normal;\r\n\r\n    public function new() {}\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.components;\r\n\r\nimport edge.IComponent;\r\nimport glm.Mat4;\r\nimport glm.Vec2;\r\nimport mammoth.utilities.Colour;\r\nimport mammoth.utilities.Colours;\r\n\r\nenum ProjectionMode {\r\n    Orthographic(size:Float);\r\n    Perspective(fieldOfView:Float);\r\n}\r\n\r\nclass Camera implements IComponent {\r\n    public var pDirty:Bool = true;\r\n\r\n    public var near:Float = 0.1;\r\n    public var far:Float = 100;\r\n    public var aspect:Float = 16/9;\r\n    public var projection:ProjectionMode = ProjectionMode.Perspective(60);\r\n    public var viewportMin:Vec2 = new Vec2(0, 0);\r\n    public var viewportMax:Vec2 = new Vec2(1, 1);\r\n    public var clearColour:Colour = Colours.Black;\r\n\r\n    public var v:Mat4 = new Mat4(1.0);\r\n    public var p:Mat4 = new Mat4(1.0);\r\n    public var vp:Mat4 = new Mat4(1.0);\r\n\r\n    public function new() {}\r\n\r\n    public function setNearFar(near:Float, far:Float):Camera {\r\n        this.near = near;\r\n        this.far = far;\r\n        pDirty = true;\r\n        return this;\r\n    }\r\n\r\n    public function setProjection(projection:ProjectionMode):Camera {\r\n        this.projection = projection;\r\n        pDirty = true;\r\n        return this;\r\n    }\r\n\r\n    public function setViewport(min:Vec2, max:Vec2):Camera {\r\n        this.viewportMin = min;\r\n        this.viewportMax = max;\r\n        return this;\r\n    }\r\n\r\n    public function setClearColour(colour:Colour):Camera {\r\n        this.clearColour = colour;\r\n        return this;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.components;\r\n\r\nimport edge.IComponent;\r\nimport mammoth.utilities.Colour;\r\nimport mammoth.utilities.Colours;\r\n\r\nclass DirectionalLight implements IComponent {\r\n\tpublic var colour:Colour = Colours.White;\r\n\r\n\tpublic function new() {}\r\n\r\n\tpublic function setColour(colour:Colour):DirectionalLight {\r\n\t\tthis.colour = colour;\r\n\t\treturn this;\r\n\t}\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.components;\r\n\r\nimport edge.IComponent;\r\nimport mammoth.render.Material;\r\nimport mammoth.render.Mesh;\r\n\r\nimport glm.Mat4;\r\n\r\nclass MeshRenderer implements IComponent {\r\n\tpublic var material:Material;\r\n\tpublic var mesh:Mesh;\r\n\r\n\tpublic var MVP:Mat4 = Mat4.identity(new Mat4());\r\n\r\n\tpublic function new() {}\r\n\r\n\tpublic function setMesh(mesh:Mesh):MeshRenderer {\r\n\t\tthis.mesh = mesh;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic function setMaterial(material:Material):MeshRenderer {\r\n\t\tthis.material = material;\r\n\t\treturn this;\r\n\t}\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.components;\r\n\r\nimport edge.IComponent;\r\nimport mammoth.utilities.Colour;\r\nimport mammoth.utilities.Colours;\r\n\r\nclass PointLight implements IComponent {\r\n    public var colour:Colour = Colours.White;\r\n    public var distance:Float = 25;\r\n\r\n    public function new() {}\r\n\r\n    public function setColour(colour:Colour):PointLight {\r\n        this.colour = colour;\r\n        return this;\r\n    }\r\n\r\n    public function setDistance(distance:Float):PointLight {\r\n        this.distance = distance;\r\n        return this;\r\n    }\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.components;\r\n\r\nimport edge.IComponent;\r\nimport glm.Mat4;\r\nimport glm.Vec3;\r\nimport glm.Quat;\r\n\r\n@:allow(mammoth.systems.ModelMatrixSystem)\r\n@:allow(mammoth.systems.PreTransformSystem)\r\n@:allow(mammoth.systems.PostTransformSystem)\r\nclass Transform implements IComponent {\r\n    public var name:String = '';\r\n\tpublic var parent(default, set):Transform = null;\r\n\r\n\tpublic var position(default, set):Vec3 = new Vec3();\r\n\tpublic var rotation(default, set):Quat = Quat.identity(new Quat());\r\n\tpublic var scale(default, set):Vec3 = new Vec3(1, 1, 1);\r\n\r\n    private var lastPosition:Vec3 = new Vec3();\r\n    private var lastRotation:Quat = new Quat();\r\n    private var lastScale:Vec3 = new Vec3();\r\n    \r\n    public var m:Mat4 = Mat4.identity(new Mat4());\r\n\r\n    public function new() {}\r\n\r\n    private inline function set_parent(newParent:Transform):Transform {\r\n        // don't let us parent ourselves!\r\n        if(newParent == this) return parent;\r\n\r\n        parent = newParent;\r\n        return parent;\r\n    }\r\n\r\n    private inline function set_position(newPosition:Vec3):Vec3 {\r\n        position.x = newPosition.x;\r\n        position.y = newPosition.y;\r\n        position.z = newPosition.z;\r\n        return position;\r\n    }\r\n\r\n    private inline function set_rotation(rot:Quat):Quat {\r\n        rotation.x = rot.x;\r\n        rotation.y = rot.y;\r\n        rotation.z = rot.z;\r\n        rotation.w = rot.w;\r\n        return rotation;\r\n    }\r\n\r\n    private inline function set_scale(newScale:Vec3):Vec3 {\r\n        scale.x = newScale.x;\r\n        scale.y = newScale.y;\r\n        scale.z = newScale.z;\r\n        return scale;\r\n    }\r\n}\r\n","package mammoth.debug;\r\n\r\nimport js.html.ImageElement;\r\nimport mammoth.gl.Shader;\r\nimport mammoth.gl.Program;\r\nimport mammoth.gl.UniformLocation;\r\nimport mammoth.gl.Buffer;\r\nimport mammoth.gl.Texture;\r\nimport tusk.Tusk;\r\nimport mammoth.gl.GL;\r\n\r\nclass DebugView {\r\n    private var program:Program;\r\n    private var buffer:Buffer;\r\n    private var fontImage:ImageElement;\r\n    private var fontTexture:Texture;\r\n\r\n    private var positionLoc:Int = 0;\r\n    private var uvLoc:Int = 0;\r\n    private var colourLoc:Int = 0;\r\n\r\n    private var vpLoc:UniformLocation;\r\n    private var textureLoc:UniformLocation;\r\n\r\n    public function new() {\r\n        // compile the vertex shader\r\n        var vert:Shader = Mammoth.gl.createShader(GL.VERTEX_SHADER);\r\n        Mammoth.gl.shaderSource(vert, Tusk.vertexShaderSrc);\r\n        Mammoth.gl.compileShader(vert);\r\n\t\tif(!Mammoth.gl.getShaderParameter(vert, GL.COMPILE_STATUS)) {\r\n\t\t\tvar info:String = Mammoth.gl.getShaderInfoLog(vert);\r\n\t\t\tthrow new Exception(info, true, 'CompileVertShader');\r\n\t\t}\r\n\r\n        // compile the fragment shader\r\n        var frag:Shader = Mammoth.gl.createShader(GL.FRAGMENT_SHADER);\r\n        Mammoth.gl.shaderSource(frag, Tusk.fragmentShaderSrc);\r\n        Mammoth.gl.compileShader(frag);\r\n\t\tif(!Mammoth.gl.getShaderParameter(frag, GL.COMPILE_STATUS)) {\r\n\t\t\tvar info:String = Mammoth.gl.getShaderInfoLog(frag);\r\n\t\t\tthrow new Exception(info, true, 'CompileFragShader');\r\n\t\t}\r\n\r\n        // compile the program\r\n        program = Mammoth.gl.createProgram();\r\n        Mammoth.gl.attachShader(program, vert);\r\n        Mammoth.gl.attachShader(program, frag);\r\n        Mammoth.gl.linkProgram(program);\r\n\t\tif(!Mammoth.gl.getProgramParameter(program, GL.LINK_STATUS)) {\r\n\t\t\tvar info:String = Mammoth.gl.getProgramInfoLog(program);\r\n\t\t\tthrow new Exception(info, true, 'LinkProgram');\r\n\t\t}\r\n\r\n        // bind the attributes\r\n        Mammoth.gl.useProgram(program);\r\n        positionLoc = Mammoth.gl.getAttribLocation(program, 'position');\r\n        uvLoc = Mammoth.gl.getAttribLocation(program, 'uv');\r\n        colourLoc = Mammoth.gl.getAttribLocation(program, 'colour');\r\n\r\n        // find the uniform\r\n        vpLoc = Mammoth.gl.getUniformLocation(program, 'VP');\r\n\r\n        // create the texture\r\n        fontTexture = Mammoth.gl.createTexture();\r\n        Mammoth.gl.bindTexture(GL.TEXTURE_2D, fontTexture);\r\n\r\n        // temporarily create a 1x1 magenta 'loading' texture\r\n        Mammoth.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, 1, 1, 0, GL.RGBA, GL.UNSIGNED_BYTE,\r\n              new js.html.Uint8Array([255, 0, 255, 255]));\r\n        textureLoc = Mammoth.gl.getUniformLocation(program, 'texture');\r\n\r\n        // load the image asynchronously\r\n        fontImage = js.Browser.window.document.createImageElement();\r\n        fontImage.addEventListener('load', function() {\r\n            Mammoth.gl.bindTexture(GL.TEXTURE_2D, fontTexture);\r\n            //Mammoth.gl.pixelStorei(GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\r\n            Mammoth.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n            Mammoth.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n            Mammoth.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST);\r\n            Mammoth.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n            //Mammoth.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, fontImage);\r\n            Mammoth.gl.context.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, fontImage);\r\n        });\r\n        fontImage.src = Tusk.fontTextureSrc;\r\n\r\n        // create the buffer\r\n        buffer = Mammoth.gl.createBuffer();\r\n\r\n        // finish up\r\n        Mammoth.gl.useProgram(null);\r\n    }\r\n\r\n    public function draw():Void {\r\n        Mammoth.gl.viewport(0, 0, Std.int(Mammoth.width), Std.int(Mammoth.height));\r\n        Mammoth.gl.scissor(0, 0, Std.int(Mammoth.width), Std.int(Mammoth.height));\r\n\r\n        Tusk.draw.screenWidth = mammoth.Mammoth.width;\r\n        Tusk.draw.screenHeight = mammoth.Mammoth.height;\r\n\r\n        if(Tusk.draw.numVertices == 0) return;\r\n        \r\n        Mammoth.gl.disable(GL.CULL_FACE);\r\n        Mammoth.gl.disable(GL.DEPTH_TEST);\r\n\r\n        Mammoth.gl.enable(GL.BLEND);\r\n        Mammoth.gl.blendFunc(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);\r\n\r\n        Mammoth.gl.useProgram(program);\r\n\r\n        Mammoth.gl.bindBuffer(GL.ARRAY_BUFFER, buffer);\r\n        Mammoth.gl.bufferData(GL.ARRAY_BUFFER, Tusk.draw.buffer, GL.DYNAMIC_DRAW);\r\n\r\n        Mammoth.gl.uniformMatrix4fv(vpLoc, cast(Tusk.draw.vpMatrix));\r\n        Mammoth.gl.uniform1i(textureLoc, 0);\r\n\r\n        Mammoth.gl.activeTexture(GL.TEXTURE0);\r\n        Mammoth.gl.bindTexture(GL.TEXTURE_2D, fontTexture);\r\n\r\n        Mammoth.gl.enableVertexAttribArray(positionLoc);\r\n        Mammoth.gl.vertexAttribPointer(positionLoc, 2, GL.FLOAT, false, 8*4, 0);\r\n        Mammoth.gl.enableVertexAttribArray(uvLoc);\r\n        Mammoth.gl.vertexAttribPointer(uvLoc, 2, GL.FLOAT, false, 8*4, 2*4);\r\n        Mammoth.gl.enableVertexAttribArray(colourLoc);\r\n        Mammoth.gl.vertexAttribPointer(colourLoc, 4, GL.FLOAT, false, 8*4, 4*4);\r\n\r\n        Mammoth.gl.drawArrays(GL.TRIANGLES, 0, Tusk.draw.numVertices);\r\n    }\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.debug;\r\n\r\nimport haxe.CallStack;\r\nimport haxe.PosInfos;\r\n\r\nclass Exception {\r\n\tpublic var message(default, null):String;\r\n\tpublic var type(default, null):String;\r\n\tpublic var fatal(default, null):Bool;\r\n\tpublic var stack(default, null):Array<StackItem>;\r\n\tpublic var showStackTrace(default, null):Bool;\r\n\tpublic var pos(default, null):PosInfos;\r\n\r\n\tpublic function new(message:String = '', fatal:Bool = false, type:String = '', showStackTrace:Bool = true, ?pos:PosInfos) {\r\n\t\tthis.message = message;\r\n\t\tthis.fatal = fatal;\r\n\t\tthis.type = type;\r\n\t\tthis.showStackTrace = showStackTrace;\r\n\t\tthis.stack = CallStack.callStack();\r\n\t\tthis.pos = pos;\r\n\t}\r\n\r\n\tprivate function translateStackItem(item:StackItem):String {\r\n\t\treturn switch(item) {\r\n\t\t\tcase CFunction: \"in function\";\r\n\t\t\tcase Module(m): \"in module \" + m;\r\n\t\t\tcase FilePos(s, file, line): \"in file '\" + file + \"' at line \" + line + (s == null ? \"\" : (\": \" + translateStackItem(s)));\r\n\t\t\tcase Method(className, method): \"in class '\" + className + \"' in method '\" + method + \"'\";\r\n\t\t\tcase LocalFunction(v): \"in local function (\" + v + \")\";\r\n\t\t\tdefault: \"?\";\r\n\t\t};\r\n\t}\r\n\r\n\tpublic function toString():String {\r\n\t\tvar stackString:Array<String> = stack.map(translateStackItem);\r\n\t\tvar posInfo:String = pos == null ? \"\" : (\" in class: \" + pos.className + \" (\" + pos.fileName + \") in function \" + pos.methodName + \"() at line \" + pos.lineNumber);\r\n\t\treturn (fatal ? \"fatal \" : \"\") + type + \" exception\" + posInfo + \": \" + message + (showStackTrace ? (\"\\nstack trace:\\n  \" + stackString.join(\"\\n  \")) : '');\r\n\t}\r\n}","package mammoth.defaults;\r\n\r\nimport haxe.EnumFlags;\r\nimport mammoth.utilities.Colour;\r\n\r\nenum StandardAttributes {\r\n    UV;\r\n    Colour;\r\n}\r\n\r\nenum StandardUniforms {\r\n    DirectionalLights;\r\n    PointLights;\r\n    Texture;\r\n}\r\n\r\nclass StandardShader {\r\n    private var built:Bool = false;\r\n    private var attributes:EnumFlags<StandardAttributes> = new EnumFlags<StandardAttributes>();\r\n    private var uniforms:EnumFlags<StandardUniforms> = new EnumFlags<StandardUniforms>();\r\n\r\n    public var albedoColour:Colour;\r\n    public var ambientColour:Colour;\r\n\r\n    public var vertex(get, null):String = \"\";\r\n    public function get_vertex():String {\r\n        if(!built) build();\r\n        return vertex;\r\n    }\r\n\r\n    public var fragment(get, null):String = \"\";\r\n    public function get_fragment():String {\r\n        if(!built) build();\r\n        return fragment;\r\n    }\r\n\r\n    private static var vertexStandard:String = mammoth.macros.StandardShader.source(\"vert\");\r\n    private static var fragmentStandard:String = mammoth.macros.StandardShader.source(\"frag\");\r\n\r\n    public function new(?origin:StandardShader) {\r\n        if(origin == null) return;\r\n\r\n        attributes = new EnumFlags<StandardAttributes>(origin.attributes.toInt());\r\n        uniforms = new EnumFlags<StandardUniforms>(origin.uniforms.toInt());\r\n\r\n        albedoColour = origin.albedoColour;\r\n        ambientColour = origin.ambientColour;\r\n    }\r\n\r\n    private function build():Void {\r\n        var prepends:Array<String> = new Array<String>();\r\n\r\n        if(attributes.has(StandardAttributes.UV)) {\r\n            prepends.push('#define ATTRIBUTE_NORMAL');\r\n        }\r\n        if(attributes.has(StandardAttributes.Colour)) {\r\n            prepends.push('#define ATTRIBUTE_COLOUR');\r\n        }\r\n        if(uniforms.has(StandardUniforms.DirectionalLights)) {\r\n            prepends.push('#define UNIFORM_DIRECTIONAL_LIGHTS');\r\n            prepends.push('#define NUMBER_DIRECTIONAL_LIGHTS 1');\r\n        }\r\n        if(uniforms.has(StandardUniforms.PointLights)) {\r\n            prepends.push('#define UNIFORM_POINT_LIGHTS');\r\n            prepends.push('#define NUMBER_POINT_LIGHTS 1');\r\n        }\r\n        if(uniforms.has(StandardUniforms.Texture)) {\r\n            prepends.push('#define UNIFORM_TEXTURE');\r\n        }\r\n\r\n        var pre:String = prepends.join('\\n');\r\n        vertex = pre + '\\n\\n' + vertexStandard;\r\n        fragment = pre + '\\n\\n' + fragmentStandard;\r\n\r\n        built = true;\r\n    }\r\n\r\n    public function setAttribute(attribute:StandardAttributes):StandardShader {\r\n        attributes.set(attribute);\r\n        built = false;\r\n        return this;\r\n    }\r\n\r\n    public function unsetAttribute(attribute:StandardAttributes):StandardShader {\r\n        attributes.unset(attribute);\r\n        built = false;\r\n        return this;\r\n    }\r\n\r\n    public function hasAttribute(attribute:StandardAttributes):Bool {\r\n        return attributes.has(attribute);\r\n    }\r\n\r\n    public function setUniform(uniform:StandardUniforms):StandardShader {\r\n        uniforms.set(uniform);\r\n        built = false;\r\n        return this;\r\n    }\r\n\r\n    public function unsetUniform(uniform:StandardUniforms):StandardShader {\r\n        uniforms.unset(uniform);\r\n        built = false;\r\n        return this;\r\n    }\r\n\r\n    public function hasUniform(uniform:StandardUniforms):Bool {\r\n        return uniforms.has(uniform);\r\n    }\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.loader;\r\n\r\nimport mammoth.Log;\r\nimport edge.Entity;\r\nimport glm.Vec2;\r\nimport glm.Mat4;\r\n\r\nimport mammoth.Mammoth;\r\nimport mammoth.components.DirectionalLight;\r\nimport mammoth.components.PointLight;\r\nimport mammoth.components.MeshRenderer;\r\nimport mammoth.defaults.StandardShader;\r\nimport mammoth.defaults.StandardShader.StandardAttributes;\r\nimport mammoth.defaults.StandardShader.StandardUniforms;\r\nimport mammoth.render.Attribute;\r\nimport mammoth.render.TAttribute;\r\n\r\nimport haxe.io.Bytes;\r\nimport haxe.crypto.Base64;\r\nimport haxe.ds.StringMap;\r\n\r\nusing StringTools;\r\n\r\nclass Loader {\r\n    private static var cameras:StringMap<mammoth.components.Camera> = new StringMap<mammoth.components.Camera>();\r\n    private static var lights:StringMap<edge.IComponent> = new StringMap<edge.IComponent>();\r\n    private static var shaders:StringMap<StandardShader> = new StringMap<StandardShader>();\r\n    private static var meshes:StringMap<mammoth.render.Mesh> = new StringMap<mammoth.render.Mesh>();\r\n\r\n    private function new(){}\r\n\r\n    private static function toColour(colour:Colour):mammoth.utilities.Colour {\r\n        var c:mammoth.utilities.Colour = new mammoth.utilities.Colour();\r\n        c.r = colour[0];\r\n        c.g = colour[1];\r\n        c.b = colour[2];\r\n        if(colour.length > 3)\r\n            c.a = colour[3];\r\n        return c;\r\n    }\r\n\r\n    private static function loadCamera(camera:mammoth.loader.Camera):Void {\r\n        var cam:mammoth.components.Camera = new mammoth.components.Camera();\r\n        cam.setNearFar(camera.near, camera.far);\r\n        cam.setClearColour(toColour(camera.clearColour));\r\n        cam.setProjection(switch(camera.type) {\r\n            case mammoth.loader.Camera.CameraType.Orthographic:\r\n                mammoth.components.Camera.ProjectionMode.Orthographic(camera.ortho_size);\r\n            case mammoth.loader.Camera.CameraType.Perspective:\r\n                mammoth.components.Camera.ProjectionMode.Perspective(camera.fov);\r\n        });\r\n        cam.setViewport(new Vec2(0, 0), new Vec2(1, 1));\r\n\r\n        cameras.set(camera.name, cam);\r\n    }\r\n\r\n    private static function loadLight(light:mammoth.loader.Light):Void {\r\n        lights.set(light.name, switch(light.type) {\r\n            case mammoth.loader.Light.LightType.Directional: {\r\n                var dirLight:DirectionalLight = new DirectionalLight();\r\n                dirLight.setColour(toColour(light.colour));\r\n                dirLight;\r\n            }\r\n            case mammoth.loader.Light.LightType.Point: {\r\n                var pointLight:PointLight = new PointLight();\r\n                pointLight.setColour(toColour(light.colour));\r\n                pointLight.setDistance(Math.sqrt(light.distance));\r\n                pointLight;\r\n            }\r\n        });\r\n    }\r\n\r\n    private static function loadShader(shad:mammoth.loader.Shader):Void {\r\n        var shader:StandardShader = new StandardShader();\r\n\r\n        if(shad.unlit != null) {\r\n            shader.albedoColour = toColour(shad.unlit.colour);\r\n        }\r\n        else if(shad.diffuse != null) {\r\n            shader.setUniform(StandardUniforms.DirectionalLights);\r\n            shader.setUniform(StandardUniforms.PointLights);\r\n\r\n            shader.albedoColour = toColour(shad.diffuse.colour);\r\n            shader.ambientColour = toColour(shad.diffuse.ambient);\r\n        }\r\n\r\n        if(shad.textures.length > 0) {\r\n            shader.setUniform(StandardUniforms.Texture);\r\n        }\r\n\r\n        shaders.set(shad.name, shader);\r\n    }\r\n\r\n    private static function loadMesh(me:mammoth.loader.Mesh):Void {\r\n        var mesh:mammoth.render.Mesh = new mammoth.render.Mesh(me.name, me.vlayout);\r\n\r\n        mesh.setVertexData(parseFloatArrayURI(me.vertices));\r\n        mesh.setIndexData(parseIntArrayURI(me.indices));\r\n\r\n        meshes.set(me.name, mesh);\r\n    }\r\n\r\n    private static function loadObject(parentTransform:mammoth.components.Transform, object:mammoth.loader.Object):Void {\r\n        var entity:Entity = Mammoth.engine.create([]);\r\n        if(object.transform != null) {\r\n            var transform:mammoth.components.Transform = new mammoth.components.Transform();\r\n            transform.position = cast(object.transform.translation);\r\n            transform.rotation = cast(object.transform.rotation);\r\n            transform.scale = cast(object.transform.scale);\r\n            transform.name = object.name;\r\n            transform.parent = parentTransform;\r\n\r\n            // load all children recursively\r\n            if(object.children != null) {\r\n                for(child in object.children) {\r\n                    loadObject(transform, child);\r\n                }\r\n            }\r\n\r\n            entity.add(transform);\r\n        }\r\n\r\n        if(object.render != null && object.render.shader != null) {\r\n            var renderer:MeshRenderer = new MeshRenderer()\r\n                .setMesh(meshes.get(object.render.mesh));\r\n\r\n            // create a material for this renderer\r\n            var material:mammoth.render.Material = new mammoth.render.Material(\r\n                object.render.mesh + \"->\" + object.render.shader\r\n            );\r\n            material.setStandardShader(shaders.get(object.render.shader));\r\n\r\n            // apply the attributes according to the mesh\r\n            for(attribute in renderer.mesh.attributeNames) {\r\n                switch(attribute) {\r\n                    case 'position': {};\r\n                    case 'normal': {};\r\n                    case 'uv': material.standardShader.setAttribute(StandardAttributes.UV);\r\n                    case 'colour': material.standardShader.setAttribute(StandardAttributes.Colour);\r\n                    case _: throw new mammoth.debug.Exception('Unknown vertex attribute \\'${attribute}\\'!', false, 'UnknownAttribute');\r\n                }\r\n            }\r\n\r\n            // compile it\r\n            material.compile();\r\n\r\n            // set attributes\r\n            var offset:Int = 0;\r\n            var attributes:Array<Attribute> = new Array<Attribute>();\r\n            for(attribute in renderer.mesh.attributeNames) {\r\n                switch(attribute) {\r\n                    case 'position': {\r\n                        attributes.push(new Attribute('position', TAttribute.Vec3, 0, offset));\r\n                        offset += 3 * 4;\r\n                    };\r\n                    case 'normal': {\r\n                        attributes.push(new Attribute('normal', TAttribute.Vec3, 0, offset));\r\n                        offset += 3 * 4;\r\n                    };\r\n                    case 'uv': {\r\n                        attributes.push(new Attribute('uv', TAttribute.Vec2, 0, offset));\r\n                        offset += 2 * 4;\r\n                    };\r\n                    case 'colour': {\r\n                        attributes.push(new Attribute('colour', TAttribute.Vec3, 0, offset));\r\n                        offset += 3 * 4;\r\n                    };\r\n                }\r\n            }\r\n            // adjust the stride and apply it to the material\r\n            for(attribute in attributes) {\r\n                attribute.stride = offset;\r\n                material.registerAttribute(attribute.name, attribute);\r\n            }\r\n\r\n            // apply the uniforms\r\n            material.setUniform('albedoColour', TUniform.RGB(material.standardShader.albedoColour));\r\n            material.setUniform('ambientColour', TUniform.RGB(material.standardShader.ambientColour));\r\n\r\n            material.setUniform('MVP', TUniform.Mat4(Mat4.identity(new Mat4())));\r\n            material.setUniform('M', TUniform.Mat4(Mat4.identity(new Mat4())));\r\n\r\n            // set 'empty' light uniforms\r\n            if(material.standardShader.hasUniform(StandardUniforms.DirectionalLights)) {\r\n                material.setUniform('directionalLights[0].direction', TUniform.Vec3(new Vec3()));\r\n                material.setUniform('directionalLights[0].colour', TUniform.RGB(mammoth.utilities.Colours.Black));\r\n            }\r\n            if(material.standardShader.hasUniform(StandardUniforms.PointLights)) {\r\n                material.setUniform('pointLights[0].position', TUniform.Vec3(new Vec3()));\r\n                material.setUniform('pointLights[0].colour', TUniform.RGB(mammoth.utilities.Colours.Black));\r\n                material.setUniform('pointLights[0].distance', TUniform.Float(0.0));\r\n            }\r\n            \r\n            // TODO..?\r\n\r\n            // apply the material\r\n            renderer.setMaterial(material);\r\n            entity.add(renderer);\r\n        }\r\n\r\n        if(object.camera != null) {\r\n            entity.add(cameras.get(object.camera));\r\n        }\r\n\r\n        if(object.light != null) {\r\n            entity.add(lights.get(object.light));\r\n        }\r\n    }\r\n\r\n    public static function load(file:MammothFile):Void {\r\n        Log.info('Loading data from ${file.meta.file}..');\r\n\r\n        // load cameras\r\n        cameras = new StringMap<mammoth.components.Camera>();\r\n        for(camera in file.cameras) {\r\n            loadCamera(camera);\r\n        }\r\n\r\n        // load lights\r\n        lights = new StringMap<edge.IComponent>();\r\n        for(light in file.lights) {\r\n            loadLight(light);\r\n        }\r\n\r\n        // load shaders\r\n        shaders = new StringMap<StandardShader>();\r\n        for(shad in file.shaders) {\r\n            loadShader(shad);\r\n        }\r\n\r\n        // load meshes\r\n        meshes = new StringMap<mammoth.render.Mesh>();\r\n        for(me in file.meshes) {\r\n            loadMesh(me);\r\n        }\r\n        \r\n        // load actual objects\r\n        for(object in file.objects) {\r\n            loadObject(null, object);\r\n        }\r\n    }\r\n\r\n    private static function parseFloatArrayURI(uri:String):Array<Float> {\r\n        if(!uri.startsWith('data:text/plain;base64,')) {\r\n            return new Array<Float>();\r\n        }\r\n\r\n        var data:Bytes = Base64.decode(uri.substr('data:text/plain;base64,'.length));\r\n        var arr:haxe.io.Float32Array = haxe.io.Float32Array.fromBytes(data);\r\n\r\n        var ret:Array<Float> = new Array<Float>();\r\n        for(i in 0...arr.length) {\r\n            ret.push(arr.get(i));\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private static function parseIntArrayURI(uri:String):Array<Int> {\r\n        if(!uri.startsWith('data:text/plain;base64,')) {\r\n            return new Array<Int>();\r\n        }\r\n\r\n        var data:Bytes = Base64.decode(uri.substr('data:text/plain;base64,'.length));\r\n        var arr:haxe.io.Int32Array = haxe.io.Int32Array.fromBytes(data);\r\n\r\n        var ret:Array<Int> = new Array<Int>();\r\n        for(i in 0...arr.length) {\r\n            ret.push(arr.get(i));\r\n        }\r\n        return ret;\r\n    }\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.render;\r\n\r\nimport mammoth.render.TAttribute;\r\n\r\n@:allow(mammoth.render.Material)\r\nclass Attribute {\r\n\tpublic var name(default, null):String;\r\n\tpublic var location(default, null):Int;\r\n\tpublic var bound(default, null):Bool = false;\r\n\tpublic var type:TAttribute;\r\n\tpublic var stride:Int;\r\n\tpublic var offset:Int;\r\n\r\n\tpublic function new(name:String, type:TAttribute, stride:Int, offset:Int) {\r\n\t\tthis.name = name;\r\n\t\tthis.type = type;\r\n\t\tthis.stride = stride;\r\n\t\tthis.offset = offset;\r\n\t}\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.render;\r\n\r\nimport haxe.ds.StringMap;\r\nimport mammoth.gl.Program;\r\nimport mammoth.gl.Shader;\r\nimport mammoth.debug.Exception;\r\nimport mammoth.gl.GL;\r\nimport mammoth.defaults.StandardShader;\r\nimport mammoth.render.Attribute;\r\nimport mammoth.render.CullMode;\r\nimport mammoth.render.DepthCompareMode;\r\nimport mammoth.render.TUniform;\r\nimport mammoth.render.Uniform;\r\n\r\n// TODO: generalize for cross-compatibility?\r\nclass Material {\r\n\tprivate var program:Program;\r\n\tprivate var vertexShader:String;\r\n\tprivate var fragmentShader:String;\r\n\r\n\tpublic var standardShader:StandardShader;\r\n\r\n\tpublic var name(default, null):String;\r\n\tpublic var attributes(default, null):StringMap<Attribute>;\r\n\tpublic var uniforms(default, null):StringMap<Uniform>;\r\n\r\n\tpublic var cullMode:CullMode = CullMode.Back;\r\n\tpublic var depthWrite:Bool = true;\r\n\tpublic var depthMode:DepthCompareMode = DepthCompareMode.LessOrEqual;\r\n\r\n\tpublic function new(name:String) {\r\n\t\tthis.name = name;\r\n\t\tthis.attributes = new StringMap<Attribute>();\r\n\t\tthis.uniforms = new StringMap<Uniform>();\r\n\t}\r\n\r\n\tprivate function compileShader(type:TShaderType, source:String):Shader {\r\n\t\tvar shader:Shader = Mammoth.gl.createShader(cast(type));\r\n\t\tMammoth.gl.shaderSource(shader, source);\r\n\t\tMammoth.gl.compileShader(shader);\r\n\t\tif(!Mammoth.gl.getShaderParameter(shader, GL.COMPILE_STATUS)) {\r\n\t\t\tvar info:String = Mammoth.gl.getShaderInfoLog(shader);\r\n\t\t\tvar typeStr:String = type == TShaderType.Vertex ? 'Vertex' : 'Fragment';\r\n\t\t\tthrow new Exception(info, true, 'Compile${typeStr}Shader');\r\n\t\t}\r\n\t\treturn shader;\r\n\t}\r\n\r\n\tpublic function setStandardShader(shader:StandardShader):Material {\r\n\t\tstandardShader = new StandardShader(shader);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic function setVertexShader(source:String):Material {\r\n\t\tvertexShader = source;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic function setFragmentShader(source:String):Material {\r\n\t\tfragmentShader = source;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic function compile():Material {\r\n\t\t// compile the shaders first\r\n\t\tvar vertex:Shader = compileShader(TShaderType.Vertex, standardShader == null ? vertexShader : standardShader.vertex);\r\n\t\tvar fragment:Shader = compileShader(TShaderType.Fragment, standardShader == null ? fragmentShader : standardShader.fragment);\r\n\r\n\t\t// and link them together\r\n\t\tprogram = Mammoth.gl.createProgram();\r\n\t\tMammoth.gl.attachShader(program, vertex);\r\n\t\tMammoth.gl.attachShader(program, fragment);\r\n\r\n\t\tMammoth.gl.linkProgram(program);\r\n\t\tif(!Mammoth.gl.getProgramParameter(program, GL.LINK_STATUS)) {\r\n\t\t\tvar info:String = Mammoth.gl.getProgramInfoLog(program);\r\n\t\t\tthrow new Exception(info, true, 'LinkProgram');\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic function registerAttribute(name:String, attribute:Attribute):Material {\r\n\t\tattributes.set(name, attribute);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic function setUniform(name:String, value:TUniform):Material {\r\n\t\tif(uniforms.exists(name)) {\r\n\t\t\tuniforms.get(name).value = value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar uniform:Uniform = new Uniform();\r\n\t\t\tuniform.value = value;\r\n\t\t\tuniforms.set(name, uniform);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic function setCullMode(cullMode:CullMode):Material {\r\n\t\tthis.cullMode = cullMode;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic function bindAttributes() {\r\n\t\tfor(name in attributes.keys()) {\r\n\t\t\tvar attribute:Attribute = attributes.get(name);\r\n\t\t\tif(attribute.bound) continue;\r\n\t\t\tattribute.location = Mammoth.gl.getAttribLocation(program, name);\r\n\t\t\tattribute.bound = true;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function bindUniforms() {\r\n\t\tfor(name in uniforms.keys()) {\r\n\t\t\tvar uniform:Uniform = uniforms.get(name);\r\n\t\t\tif(uniform.bound) continue;\r\n\r\n\t\t\tuniform.location = switch(uniform.value) {\r\n\t\t\t\t// TODO\r\n\t\t\t\t//case Texture2D(_): TLocation.Texture(pipeline.getConstantLocation(name), pipeline.getTextureUnit(name));\r\n\t\t\t\tcase _: TLocation.Uniform(Mammoth.gl.getUniformLocation(program, name));\r\n\t\t\t}\r\n\t\t\tuniform.bound = true;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function applyCullMode() {\r\n\t\tswitch(cullMode) {\r\n\t\t\tcase None:\r\n\t\t\t\tMammoth.gl.disable(GL.CULL_FACE);\r\n\t\t\tcase Back:\r\n\t\t\t\tMammoth.gl.enable(GL.CULL_FACE);\r\n\t\t\t\tMammoth.gl.cullFace(GL.BACK);\r\n\t\t\tcase Front:\r\n\t\t\t\tMammoth.gl.enable(GL.CULL_FACE);\r\n\t\t\t\tMammoth.gl.cullFace(GL.FRONT);\r\n\t\t\tcase Both:\r\n\t\t\t\tMammoth.gl.enable(GL.CULL_FACE);\r\n\t\t\t\tMammoth.gl.cullFace(GL.FRONT_AND_BACK);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function applyDepthMode() {\r\n\t\tif(depthWrite)\r\n\t\t\tMammoth.gl.enable(GL.DEPTH_TEST);\r\n\t\telse\r\n\t\t\tMammoth.gl.disable(GL.DEPTH_TEST);\r\n\t\tMammoth.gl.depthFunc(switch(depthMode) {\r\n\t\t\tcase Never: GL.NEVER;\r\n\t\t\tcase Less: GL.LESS;\r\n\t\t\tcase Equal: GL.EQUAL;\r\n\t\t\tcase LessOrEqual: GL.LEQUAL;\r\n\t\t\tcase Greater: GL.GREATER;\r\n\t\t\tcase NotEqual: GL.NOTEQUAL;\r\n\t\t\tcase GreaterOrEqual: GL.GEQUAL;\r\n\t\t\tcase Always: GL.ALWAYS;\r\n\t\t});\r\n\t\tMammoth.gl.depthMask(depthWrite);\r\n\r\n\t}\r\n\r\n\tprivate function applyStencilMode() {\r\n\t\t// TODO\r\n\t}\r\n\r\n\tprivate function applyBlendingMode() {\r\n\t\t// TODO\r\n\t}\r\n\r\n\t@:allow(mammoth.systems.RenderSystem)\r\n\tprivate function apply() {\r\n\t\t// apply our state variables\r\n\t\tapplyCullMode();\r\n\t\tapplyDepthMode();\r\n\t\tapplyStencilMode();\r\n\t\tapplyBlendingMode();\r\n\r\n\t\t// use our program\r\n\t\tMammoth.gl.useProgram(program);\r\n\r\n\t\t// set all the uniforms\r\n\t\tbindUniforms();\r\n\t\tfor(uniform in uniforms) {\r\n\t\t\tswitch(uniform.location) {\r\n\t\t\t\tcase Uniform(location): {\r\n\t\t\t\t\tswitch(uniform.value) {\r\n\t\t\t\t\t\tcase Bool(b): Mammoth.gl.uniform1i(location, b ? 1 : 0);\r\n\t\t\t\t\t\tcase Int(i): Mammoth.gl.uniform1i(location, i);\r\n\t\t\t\t\t\tcase Float(x): Mammoth.gl.uniform1f(location, x);\r\n\t\t\t\t\t\tcase Float2(x, y): Mammoth.gl.uniform2f(location, x, y);\r\n\t\t\t\t\t\tcase Float3(x, y, z): Mammoth.gl.uniform3f(location, x, y, z);\r\n\t\t\t\t\t\tcase Float4(x, y, z, w): Mammoth.gl.uniform4f(location, x, y, z, w);\r\n\t\t\t\t\t\tcase Floats(x): Mammoth.gl.uniform1fv(location, cast x);\r\n\t\t\t\t\t\tcase Vec2(v): Mammoth.gl.uniform2f(location, v.x, v.y);\r\n\t\t\t\t\t\tcase Vec3(v): Mammoth.gl.uniform3f(location, v.x, v.y, v.z);\r\n\t\t\t\t\t\tcase Vec4(v): Mammoth.gl.uniform4f(location, v.x, v.y, v.z, v.w);\r\n\t\t\t\t\t\tcase Mat4(m): Mammoth.gl.uniformMatrix4fv(location, cast(m));\r\n\t\t\t\t\t\tcase RGB(c): Mammoth.gl.uniform3f(location, c.r, c.g, c.b);\r\n\t\t\t\t\t\tcase RGBA(c): Mammoth.gl.uniform4f(location, c.r, c.g, c.b, c.a);\r\n\t\t\t\t\t\tcase _: throw 'Unhandled uniform type ${uniform.value}!';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// TODO: implement textures\r\n\t\t\t\t/*case Texture(location, unit): {\r\n\t\t\t\t\tswitch(uniform.value) {\r\n\t\t\t\t\t\tcase Texture2D(t, slot): {\r\n\t\t\t\t\t\t\tg.setInt(location, slot);\r\n\t\t\t\t\t\t\tg.setTexture(unit, t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase _: throw 'Unhandled texture type ${uniform.value}!';\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// prepare for render data\r\n\t\tbindAttributes();\r\n\t}\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.render;\r\n\r\nimport mammoth.platform.Float32Array;\r\nimport mammoth.platform.Int16Array;\r\nimport mammoth.gl.Buffer;\r\nimport mammoth.gl.GL;\r\n\r\nclass Mesh {\r\n\t@:allow(mammoth.systems.RenderSystem)\r\n\tprivate var vertexBuffer:Buffer;\r\n\t@:allow(mammoth.systems.RenderSystem)\r\n\tprivate var indexBuffer:Buffer;\r\n\r\n\t@:allow(mammoth.systems.RenderSystem)\r\n\tprivate var vertexCount:Int;\r\n\r\n\tpublic var name(default, null):String;\r\n\tpublic var attributeNames(default, null):Array<String>;\r\n\r\n\tpublic function new(name:String, attributeNames:Array<String>) {\r\n\t\tthis.name = name;\r\n\t\tthis.attributeNames = attributeNames;\r\n\r\n\t\tvertexBuffer = Mammoth.gl.createBuffer();\r\n\t\tindexBuffer = Mammoth.gl.createBuffer();\r\n\t}\r\n\r\n\tpublic function setVertexData(data:Array<Float>) {\r\n\t\tMammoth.gl.bindBuffer(GL.ARRAY_BUFFER, vertexBuffer);\r\n\t\tMammoth.gl.bufferData(GL.ARRAY_BUFFER, new Float32Array(data), GL.STATIC_DRAW);\r\n\t\tMammoth.gl.bindBuffer(GL.ARRAY_BUFFER, null);\r\n\t}\r\n\r\n\tpublic function setIndexData(data:Array<Int>) {\r\n\t\tMammoth.gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n\t\tMammoth.gl.bufferData(GL.ELEMENT_ARRAY_BUFFER, new Int16Array(data), GL.STATIC_DRAW);\r\n\t\tMammoth.gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, null);\r\n\t\tvertexCount = data.length;\r\n\t}\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.render;\r\n\r\nimport mammoth.render.TUniform;\r\n\r\nclass Uniform {\r\n\tpublic var value:TUniform;\r\n\tpublic var location:TLocation;\r\n\tpublic var bound:Bool = false;\r\n\r\n\tpublic function new(){}\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.systems;\r\n\r\nimport edge.ISystem;\r\nimport mammoth.components.Transform;\r\nimport mammoth.components.Camera;\r\nimport glm.GLM;\r\n\r\nusing glm.Mat4;\r\n\r\nclass CameraSystem implements ISystem {\r\n    public function update(transform:Transform, camera:Camera) {\r\n        // calculate the updated model matrix\r\n        camera.v = transform.m.copy(camera.v);\r\n        camera.v.invert(camera.v);\r\n\r\n        // check for aspect ratio changes\r\n        var aspect:Float = Mammoth.aspectRatio;\r\n        /*if(aspect != camera.aspect) {\r\n            camera.pDirty = true;\r\n        }*/\r\n        camera.pDirty = true;\r\n\r\n        if(camera.pDirty) {\r\n            camera.p = switch (camera.projection) {\r\n                case ProjectionMode.Perspective(fov): GLM.perspective(fov, aspect, camera.near, camera.far, camera.p);\r\n                case ProjectionMode.Orthographic(size): {\r\n                    var halfX:Float = size * 0.5;\r\n                    var halfY:Float = halfX / aspect;\r\n                    GLM.orthographic(-halfX, halfX, -halfY, halfY, camera.near, camera.far, camera.p);\r\n                }\r\n            };\r\n\r\n            camera.vp = Mat4.multMat(camera.p, camera.v, camera.vp);\r\n            camera.pDirty = false;\r\n        }\r\n    }\r\n}\r\n\r\n","package edge.core.macro;\r\n\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\nimport haxe.macro.ExprTools;\r\nimport haxe.macro.Type;\r\nusing haxe.macro.TypeTools;\r\nusing thx.macro.MacroFields;\r\nimport edge.core.macro.Macros.*;\r\n\r\nclass BuildSystem {\r\n  public inline static var PROCESS_SUFFIX = \"_SystemProcess\";\r\n\r\n  macro public static function complete() : Array<Field> {\r\n    var fields = Context.getBuildFields(),\r\n        type = Context.getLocalClass().get();\r\n    checkUpdate(fields);\r\n    injectToString(type, fields);\r\n    injectConstructor(type, fields);\r\n    makePublic(fields, \"engine\");\r\n    makePublic(fields, \"entity\");\r\n    makePublic(fields, \"timeDelta\");\r\n    makePublic(fields, \"before\");\r\n    injectSystemProcess(fields, Context.getLocalClass());\r\n    return fields;\r\n  }\r\n\r\n  static function injectSystemProcess(fields : Array<Field>, cls : Ref<ClassType>) {\r\n    var system = cls.toString(),\r\n        process = '$system${PROCESS_SUFFIX}';\r\n\r\n    BuildSystemProcess.createProcessType(system, process, fields);\r\n\r\n    fields.push(createVarField(\"__process__\", macro : edge.core.ISystemProcess));\r\n\r\n    appendExprToFieldFunction(\r\n      findField(fields, \"new\"),\r\n      Context.parse('__process__ = new $process(this)', Context.currentPos())\r\n    );\r\n  }\r\n\r\n  static function injectToString(type : ClassType, fields : Array<Field>) {\r\n    if(isFieldInHirearchy(type, \"toString\")) return;\r\n    var cls = clsName();\r\n    fields.push(createFunctionField(\"toString\", macro : String, macro return $v{cls}));\r\n  }\r\n\r\n  static function injectConstructor(type : ClassType, fields : Array<Field>) {\r\n    if(hasField(fields, \"new\")) return;\r\n    fields.push(createFunctionField(\r\n      \"new\",\r\n      isFieldInHirearchy(type, \"new\") ? macro super() : macro {}\r\n    ));\r\n  }\r\n\r\n  static function checkUpdate(fields : Array<Field>) {\r\n    var field = findField(fields, \"update\");\r\n    if(field == null)\r\n      Context.error('${clsName()} doesn\\'t contain a method `update`', Context.currentPos());\r\n    if(!field.isPublic())\r\n      field.access.push(APublic);\r\n    if(field.isStatic())\r\n      Context.error('${clsName()}.update() cannot be static', Context.currentPos());\r\n    if(!field.isMethod())\r\n      Context.error('${clsName()}.update() must be method', Context.currentPos());\r\n    switch field.kind {\r\n      case FFun(f):\r\n        for(arg in f.args) {\r\n          switch arg.type {\r\n            case TPath(p):\r\n              if(p.params.length > 0)\r\n                Context.error('argument `${arg.name}` of ${clsName()}.update() cannot have type parameters', Context.currentPos());\r\n              var t = Context.getType(p.name).follow();\r\n              switch t {\r\n                case TInst(s, _) if(s.toString() != \"String\"):\r\n                  // TODO, should we support enums?\r\n                case _:\r\n                  Context.error('argument `${arg.name}` of ${clsName()}.update() is not a class instance', Context.currentPos());\r\n              }\r\n            case _:\r\n              Context.error('argument `${arg.name}` of ${clsName()}.update() is not a class instance', Context.currentPos());\r\n          }\r\n        }\r\n        var ret = f.ret;\r\n        if(null == ret) {\r\n          ret = macro : Void;\r\n        }\r\n        switch ret {\r\n          case macro : Void: // change return type to Bool\r\n            var exprs = [\r\n                  changeReturnFromVoidToBool(f.expr),\r\n                  macro return true\r\n                ];\r\n            f.expr = macro $b{exprs};\r\n            f.ret = macro : Bool;\r\n          case macro : Bool: // you are good to go\r\n          case _: Context.error('${clsName()}.update() return type is invalid: ${ret}', Context.currentPos());\r\n        }\r\n      case _:\r\n    }\r\n    if(!fieldHasMeta(field, \":keep\"))\r\n      field.meta.push({ name : \":keep\", pos : Context.currentPos() });\r\n  }\r\n\r\n  static function changeReturnFromVoidToBool(expr) {\r\n    return ExprTools.map(expr, function(e) {\r\n      switch e.expr {\r\n        case EReturn(v) if(v == null):\r\n          return macro return true;\r\n        case EReturn(v):\r\n          return e;\r\n        case ex:\r\n          return changeReturnFromVoidToBool(e);\r\n        };\r\n    });\r\n  }\r\n}\r\n","package edge.core.macro;\r\n\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\nimport haxe.macro.Type;\r\nusing haxe.macro.TypeTools;\r\nusing thx.macro.MacroFields;\r\nimport Type in RType;\r\n\r\nclass Macros {\r\n  public static function getVarAsFunctionArgs(fields : Array<Field>) : Array<FunctionArg> {\r\n    return fields\r\n      .map(function(field) return switch field.kind {\r\n        case FVar(t, _) if(!field.isStatic()):\r\n          { name : field.name, type : t, opt : null, value : null, meta : null }\r\n        case _:\r\n          null;\r\n      })\r\n      .filter(function(field) return field != null);\r\n  }\r\n  \r\n  public static function getClassVarAsFunctionArgs(fields : Array<ClassField>) : Array<FunctionArg> {\r\n    return fields\r\n      .map(function(field) return switch field.kind {\r\n        case FVar(t, _):\r\n          { name : field.name, type : field.type.follow().toComplexType(), opt : null, value : null, meta : null }\r\n        case _:\r\n          null;\r\n      })\r\n      .filter(function(field) return field != null);\r\n  }\r\n\r\n  public static function createVarField(name : String, type : ComplexType) : Field {\r\n    return {\r\n      name: name,\r\n      kind: FVar(type, null),\r\n      pos: Context.currentPos()\r\n    };\r\n  }\r\n\r\n  public static function createFunctionField(name : String, ?args : Array<FunctionArg>, ?ret : ComplexType, ?expr : Expr, ?access : Array<Access>) : Field {\r\n    return {\r\n      name: name,\r\n      access: null != access ? access : [APublic],\r\n      kind: FFun({\r\n        ret  : null != ret ? ret : macro : Void,\r\n        expr : null != expr ? expr : macro {},\r\n        args : null != args ? args : []\r\n      }),\r\n      pos: Context.currentPos()\r\n    };\r\n  }\r\n\r\n  public static function makeVarsPublic(fields : Array<Field>) {\r\n    fields.map(function(field) switch field.kind {\r\n      case FVar(_, _) if(!field.isPublic()):\r\n        field.access.push(APublic);\r\n      case _:\r\n    });\r\n  }\r\n\r\n  public static function makePublic(fields : Array<Field>, name : String) {\r\n    var field = findField(fields, name);\r\n    if(null == field) return;\r\n    makeFieldPublic(field);\r\n  }\r\n\r\n  public static function makeFieldPublic(field : Field) {\r\n    if(isPublic(field)) return;\r\n    field.access.push(APublic);\r\n  }\r\n\r\n  public static function isPublic(field : Field) {\r\n    for(a in field.access)\r\n      if(RType.enumEq(a, APublic))\r\n        return true;\r\n    return false;\r\n  }\r\n\r\n  public static function hasField(fields : Array<Field>, name : String)\r\n    return null != findField(fields, name);\r\n\r\n  public static function findField(fields : Array<Field>, name : String) {\r\n    for(field in fields)\r\n      if(field.name == name)\r\n        return field;\r\n    return null;\r\n  }\r\n\r\n  public static function findClassField(fields : Array<ClassField>, name : String) {\r\n    for(field in fields) {\r\n      if(field.name == name)\r\n        return field;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public static function hasClassField(fields : Array<ClassField>, name : String)\r\n    return findClassField(fields, name) != null;\r\n\r\n  public static function isFieldInHirearchy(type : ClassType, name : String) : Bool {\r\n    if(name == \"new\") {\r\n      if(null != type.constructor)\r\n        return true;\r\n    } else {\r\n      if(hasClassField(type.fields.get(), name))\r\n        return true;\r\n    }\r\n    var superClass = type.superClass;\r\n    if(null == superClass) {\r\n      return false;\r\n    }\r\n    return isFieldInHirearchy(superClass.t.get(), name);\r\n  }\r\n\r\n  public static function hasVarField(fields : Array<Field>, fieldName : String) {\r\n    for(field in fields)\r\n      if(field.name == fieldName && switch field.kind {\r\n        case FVar(_, _): true;\r\n        case _: false;\r\n      })\r\n        return true;\r\n    return false;\r\n  }\r\n\r\n  public static function hasFunField(fields : Array<Field>, fieldName : String) {\r\n    for(field in fields)\r\n      if(field.name == fieldName && switch field.kind {\r\n        case FFun(_): true;\r\n        case _: false;\r\n      })\r\n        return true;\r\n    return false;\r\n  }\r\n\r\n  public static function fieldHasMeta(field : Field, name : String) {\r\n    if(field.meta == null) return false;\r\n    for(meta in field.meta)\r\n      if(meta.name == name)\r\n        return true;\r\n    return false;\r\n  }\r\n\r\n  inline public static function clsName()\r\n    return Context.getLocalClass().toString();\r\n\r\n  public static function appendExprToFieldFunction(field : Field, expr : Expr) {\r\n    switch field.kind {\r\n      case FFun(o):\r\n        var exprs = [o.expr, expr];\r\n        o.expr = macro $b{exprs};\r\n      case _:\r\n    }\r\n  }\r\n\r\n  public static function fieldFunctionHasArguments(field : Field) {\r\n    switch field.kind {\r\n      case FFun(o):\r\n        return o.args.length > 0;\r\n      case _:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  public static function fieldFunctionArguments(field : Field) {\r\n    switch field.kind {\r\n      case FFun(o):\r\n        return o.args;\r\n      case _:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  public static function getAncestor(type : ClassType):Null<ClassType>\r\n  {\r\n    var c = type.superClass;\r\n    if (c == null) return null;\r\n\r\n    return c.t.get();\r\n  }\r\n}\r\n","package edge.core.macro;\r\n\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\nimport haxe.macro.Type;\r\nusing haxe.macro.ComplexTypeTools;\r\nusing haxe.macro.TypeTools;\r\nimport edge.core.macro.Macros.*;\r\n\r\nclass BuildSystemProcess {\r\n  public static function createProcessType(systemName : String, processName : String, systemFields : Array<Field>) {\r\n    var pack = processName.split('.'),\r\n        name = pack.pop(),\r\n        type = Context.getType(systemName),\r\n        system = type.toComplexType(),\r\n        classType = switch type { case TInst(cls, _): cls.get(); case _: null; },\r\n        fields = [],\r\n        kind = TDClass(\r\n          null,\r\n          [{ pack : ['edge', 'core'], name : 'ISystemProcess' }],\r\n          false\r\n        );\r\n\r\n    injectConstructor(system, fields);\r\n    injectRemoveEntity(fields);\r\n    injectAddEntity(fields);\r\n    injectSystemField(system, fields);\r\n    injectUpdate(classType, systemFields, fields);\r\n    injectViews(systemFields, fields);\r\n    injectUpdateMatchRequirements(systemFields, fields);\r\n\r\n    Context.defineType({\r\n      pos : Context.currentPos(),\r\n      pack : pack,\r\n      name : name,\r\n      meta : [{\r\n          pos : Context.currentPos(),\r\n          name : \":access\",\r\n          params : [macro edge.View]\r\n        }],\r\n      kind : kind,\r\n      fields : fields\r\n    });\r\n  }\r\n\r\n  static function injectViews(systemFields : Array<Field>, fields : Array<Field>)\r\n    for(field in collectViewFields(systemFields))\r\n      injectView(field, systemFields, fields);\r\n\r\n  static function injectView(info : { name : String, types : Array<Field>, field : Field }, systemFields : Array<Field>, fields : Array<Field>) {\r\n    var name = info.name;\r\n    makeFieldPublic(info.field);\r\n    appendExprToFieldFunction(\r\n      findField(fields, \"new\"),\r\n      Context.parse('system.$name = new edge.View()', Context.currentPos())\r\n    );\r\n\r\n    injectViewMatchRequirements(info, systemFields, fields);\r\n  }\r\n\r\n  static function injectViewMatchRequirements(info : { name : String, types : Array<Field>, field : Field }, systemFields : Array<Field>, fields : Array<Field>) {\r\n    var name   = info.name,\r\n        types  = info.types,\r\n        sexprs = [];\r\n\r\n    sexprs.push('var removed = system.$name.tryRemove(entity)');\r\n    sexprs.push('var count = ' + types.length);\r\n    sexprs.push('var o : {' +\r\n      types.map(function(type) {\r\n          return type.name + \" : \" + switch type.kind {\r\n            case FVar(t, _): Context.follow(t.toType()).toComplexType().toString();\r\n            case _: \"\";\r\n          };\r\n        }).join(\", \") +\r\n      '} = {' +\r\n      types.map(function(type) return '${type.name} : null').join(\", \") + '}');\r\n    var expr = 'for(component in entity.components()) {\\n';\r\n    for(type in types) {\r\n      var t = switch type.kind {\r\n          case FVar(t, _): Context.follow(t.toType()).toComplexType().toString();\r\n          case _: \"\";\r\n        };\r\n      expr += '  if(Std.is(component, $t)) {\\n';\r\n      expr += '    o.${type.name} = cast component;\\n';\r\n      expr += '    if(--count == 0) break; else continue;\\n';\r\n      expr += '  }\\n';\r\n    }\r\n    expr += '}';\r\n    sexprs.push(expr);\r\n    sexprs.push('var added = count == 0 && system.$name.tryAdd(entity, o)');\r\n\r\n    if(hasFunField(systemFields, '${name}Removed')) {\r\n      sexprs.push('if((null != removed) && !added) system.${name}Removed(entity, removed)');\r\n    }\r\n    if(hasFunField(systemFields, '${name}Added')) {\r\n      sexprs.push('if(added && (null == removed)) system.${name}Added(entity, o)');\r\n    }\r\n\r\n    var exprs = sexprs.map(function(sexpr) return Context.parse(sexpr, Context.currentPos())),\r\n        methodName = '${name}MatchRequirements';\r\n    fields.push(createFunctionField(\r\n        methodName,\r\n        [{ name : \"entity\", type : macro : edge.Entity }],\r\n        macro $b{exprs}\r\n      ));\r\n\r\n    appendExprToFieldFunction(\r\n      findField(fields, \"addEntity\"),\r\n      Context.parse('$methodName(entity)', Context.currentPos())\r\n    );\r\n\r\n    expr = hasFunField(systemFields, '${name}Removed') ?\r\n      '{ var removed = system.$name.tryRemove(entity); if(removed != null) system.${name}Removed(entity, removed); }' :\r\n      'system.$name.tryRemove(entity)';\r\n    appendExprToFieldFunction(\r\n      findField(fields, \"removeEntity\"),\r\n      Context.parse(expr, Context.currentPos())\r\n    );\r\n  }\r\n\r\n  static function injectUpdate(systemType : ClassType, systemFields : Array<Field>, fields : Array<Field>) {\r\n    var exprs = [];\r\n    if(hasVarField(systemFields, \"engine\"))\r\n      exprs.push(macro system.engine = engine);\r\n    if(hasVarField(systemFields, \"timeDelta\"))\r\n      exprs.push(macro system.timeDelta = delta);\r\n\r\n    var update = findField(systemFields, \"update\"),\r\n        constructor = findField(fields, \"new\");\r\n\r\n    exprs.push(macro var result = true);\r\n    if(fieldFunctionHasArguments(update)) {\r\n      var args = fieldFunctionArguments(update),\r\n          fieldTypes = args.map(function(arg) : Field {\r\n              var t = Context.follow(arg.type.toType()).toComplexType(),\r\n                  kind : FieldType = FVar(t, null);\r\n              return {\r\n                pos  : Context.currentPos(),\r\n                name : arg.name,\r\n                kind : kind\r\n              };\r\n            }),\r\n          type = TPath({\r\n              pack : [\"edge\"],\r\n              name : \"View\",\r\n              params : [TPType(TAnonymous(fieldTypes))]\r\n            });\r\n      fields.push(createVarField(\"updateItems\", type));\r\n\r\n      var expr = hasFunField(systemFields, 'updateRemoved') ?\r\n        '{ var removed = updateItems.tryRemove(entity); if(removed != null) system.updateRemoved(entity, removed); }' :\r\n        'updateItems.tryRemove(entity)';\r\n      appendExprToFieldFunction(\r\n        findField(fields, \"removeEntity\"),\r\n        Context.parse(expr, Context.currentPos())\r\n      );\r\n\r\n      appendExprToFieldFunction(\r\n        constructor,\r\n        macro updateItems = new edge.View()\r\n      );\r\n\r\n      if(hasFunField(systemFields, \"before\") || isFieldInHirearchy(systemType, \"before\"))\r\n        exprs.push(macro if(updateItems.count > 0) system.before());\r\n      // create loop expression\r\n      exprs.push(macro var data);\r\n      var expr = '\\nfor(item in updateItems) {\\n';\r\n      // set entity if required\r\n      if(hasVarField(systemFields, \"entity\"))\r\n        expr += '  system.entity = item.entity;\\n';\r\n      // call update\r\n      expr += '  data = item.data;\\n';\r\n      expr += '  result = system.update(' + args.map(function(arg) {\r\n          return 'data.${arg.name}';\r\n        }).join(\", \") + ');\\n';\r\n      expr += '  if(!result) break;';\r\n      expr += '}';\r\n      exprs.push(Context.parse(expr, Context.currentPos()));\r\n    } else {\r\n      if(hasFunField(systemFields, \"before\") || isFieldInHirearchy(systemType, \"before\"))\r\n        exprs.push(macro system.before());\r\n      exprs.push(macro result = system.update());\r\n    }\r\n    if(hasFunField(systemFields, \"after\") || isFieldInHirearchy(systemType, \"after\"))\r\n      exprs.push(macro system.after());\r\n    exprs.push(macro return result);\r\n\r\n    //trace(haxe.macro.ExprTools.toString(macro $b{exprs}));\r\n\r\n    fields.push(createFunctionField(\r\n        \"update\",\r\n        [{ name : \"engine\", type : macro : edge.Engine },\r\n         { name : \"delta\", type : macro : Float }],\r\n        macro : Bool,\r\n        macro $b{exprs}\r\n      ));\r\n  }\r\n\r\n  static function injectUpdateMatchRequirements(systemFields : Array<Field>, fields : Array<Field>) {\r\n    var args = fieldFunctionArguments(findField(systemFields, \"update\"));\r\n    if(args.length == 0) return;\r\n\r\n    var sexprs = [];\r\n    sexprs.push('var removed = updateItems.tryRemove(entity)');\r\n    sexprs.push('var count = ' + args.length);\r\n    sexprs.push('var o : {' + args.map(function(arg) return '${arg.name} : ${Context.follow(arg.type.toType()).toComplexType().toString()}').join(\", \") + '} = {' + args.map(function(arg) return '${arg.name} : null').join(\", \") + '}');\r\n\r\n    var expr = 'for(component in entity.components()) {\\n';\r\n    for(arg in args) {\r\n      var t = Context.follow(arg.type.toType()).toComplexType().toString();\r\n      expr += '  if(Std.is(component, $t)) {\\n';\r\n      expr += '    o.${arg.name} = cast component;\\n';\r\n      expr += '    if(--count == 0) break; else continue;\\n';\r\n      expr += '  }\\n';\r\n    }\r\n    expr += '}';\r\n    sexprs.push(expr);\r\n\r\n    sexprs.push('var added = count == 0 && updateItems.tryAdd(entity, o)');\r\n\r\n    if(hasFunField(systemFields, 'updateRemoved')) {\r\n      sexprs.push('if((null != removed) && !added) system.updateRemoved(entity, removed)');\r\n    }\r\n    if(hasFunField(systemFields, 'updateAdded')) {\r\n      sexprs.push('if(added && (null == removed)) system.updateAdded(entity, o)');\r\n    }\r\n\r\n    var exprs = sexprs.map(function(sexpr) return Context.parse(sexpr, Context.currentPos()));\r\n    fields.push(createFunctionField(\r\n        \"updateMatchRequirements\",\r\n        [{ name : \"entity\", type : macro : edge.Entity }],\r\n        macro $b{exprs}\r\n      ));\r\n\r\n    appendExprToFieldFunction(\r\n      findField(fields, \"addEntity\"),\r\n      macro updateMatchRequirements(entity));\r\n  }\r\n\r\n  static function injectRemoveEntity(fields : Array<Field>)\r\n    fields.push(createFunctionField(\r\n        \"removeEntity\",\r\n        [{ name : \"entity\", type : macro : edge.Entity }]\r\n      ));\r\n\r\n  static function injectAddEntity(fields : Array<Field>)\r\n    fields.push(createFunctionField(\r\n        \"addEntity\",\r\n        [{ name : \"entity\", type : macro : edge.Entity }]\r\n      ));\r\n\r\n  static function injectSystemField(system : ComplexType, fields : Array<Field>)\r\n    fields.push(createVarField(\"system\", system));\r\n\r\n  static function injectConstructor(system : ComplexType, fields : Array<Field>)\r\n    fields.push(createFunctionField(\r\n        \"new\",\r\n        [{ name : \"system\", type : system }],\r\n        macro this.system = system\r\n      ));\r\n\r\n  static function collectViewFields(fields : Array<Field>) : Array<{ name : String, types : Array<Field>, field : Field }> {\r\n    var results = [];\r\n    for(field in fields) {\r\n      switch field.kind {\r\n        case FVar(tp, _):\r\n          if(tp == null) continue;\r\n          tp = Context.follow(tp.toType()).toComplexType();\r\n          switch tp {\r\n            case TPath({ name : \"View\", pack : [\"edge\"], params : [TPType(TAnonymous(p))] }):\r\n              results.push({\r\n                name  : field.name,\r\n                types : p,\r\n                field : field\r\n              });\r\n            case _:\r\n          };\r\n        case _:\r\n      }\r\n    }\r\n    return results;\r\n  }\r\n}\r\n","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.systems;\r\n\r\nimport edge.ISystem;\r\nimport glm.GLM;\r\nimport glm.Quat;\r\nimport glm.Vec3;\r\nimport glm.Mat4;\r\nimport mammoth.components.Transform;\r\n\r\nclass ModelMatrixSystem implements ISystem {\r\n    private var position:Vec3 = new Vec3();\r\n    private var rotation:Quat = new Quat();\r\n    private var scale:Vec3 = new Vec3();\r\n\r\n    private function calculateModelMatrix(transform:Transform) {\r\n        // interpolate based on timing\r\n        Vec3.lerp(transform.lastPosition, transform.position, Mammoth.timing.alpha, position);\r\n        Quat.slerp(transform.lastRotation, transform.rotation, Mammoth.timing.alpha, rotation);\r\n        Vec3.lerp(transform.lastScale, transform.scale, Mammoth.timing.alpha, scale);\r\n\r\n        // calculate the full transformation matrix\r\n        GLM.transform(position, rotation, scale, transform.m);\r\n\r\n        if(transform.parent != null) {\r\n            calculateModelMatrix(transform.parent);\r\n            Mat4.multMat(transform.parent.m, transform.m, transform.m);\r\n        }\r\n    }\r\n\r\n    public function update(transform:Transform) {\r\n        calculateModelMatrix(transform);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage glm;\r\n\r\nimport glm.GLM.FloatArray;\r\n\r\n/**\r\n *  A quaternion\r\n */\r\nabstract Quat(FloatArray) {\r\n    /**\r\n     *  Accessor utility for the first element of the quaternion\r\n     */\r\n    public var x(get, set):Float;\r\n    private inline function get_x():Float return this[0];\r\n    private inline function set_x(v:Float):Float return this[0] = v;\r\n\r\n    /**\r\n     *  Accessor utility for the second element of the quaternion\r\n     */\r\n    public var y(get, set):Float;\r\n    private inline function get_y():Float return this[1];\r\n    private inline function set_y(v:Float):Float return this[1] = v;\r\n\r\n    /**\r\n     *  Accessor utility for the third element of the quaternion\r\n     */\r\n    public var z(get, set):Float;\r\n    private inline function get_z():Float return this[2];\r\n    private inline function set_z(v:Float):Float return this[2] = v;\r\n\r\n    /**\r\n     *  Accessor utility for the fourth element of the quaternion\r\n     */\r\n    public var w(get, set):Float;\r\n    private inline function get_w():Float return this[3];\r\n    private inline function set_w(v:Float):Float return this[3] = v;\r\n\r\n\t@:arrayAccess\r\n\tpublic inline function get(key:Int) {\r\n\t\treturn this[key];\r\n\t}\r\n\r\n\t@:arrayAccess\r\n\tpublic inline function arrayWrite(key:Int, value:Float):Float {\r\n\t\treturn this[key] = value;\r\n\t}\r\n\r\n    public inline function new(x:Float = 0, y:Float = 0, z:Float = 0, w:Float = 1) {\r\n        this = new FloatArray(4);\r\n        this[0] = x;\r\n        this[1] = y;\r\n        this[2] = z;\r\n        this[3] = w;\r\n    }\r\n\r\n\t/**\r\n\t *  Checks if `this == v` on an element-by-element basis\r\n\t *  @param v - The quaternion to check against\r\n\t *  @return Bool\r\n\t */\r\n\tpublic inline function equals(b:Quat):Bool {\r\n\t\tvar equal:Bool = true;\r\n\t\tfor(i in 0...4) {\r\n\t\t\tif(Math.abs(this[i] - b[i]) >= glm.GLM.EPSILON) {\r\n\t\t\t\tequal = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn equal;\r\n\t}\r\n\r\n\t/**\r\n\t *  Creates a string reprentation of `this`\r\n\t *  @return String\r\n\t */\r\n\tpublic inline function toString():String {\r\n\t\treturn\r\n\t\t\t'{${this[0]}, ${this[1]}, ${this[2]}, ${this[3]}}';\r\n\t}\r\n\r\n    /**\r\n     *  Calculates the square of the magnitude of the quaternion, to save calculation time if the actual magnitude isn't needed\r\n     *  @return Float\r\n     */\r\n    public inline function lengthSquared():Float {\r\n        return x*x + y*y + z*z + w*w;\r\n    }\r\n\r\n    /**\r\n     *  Calculates the magnitude of the quaternion\r\n     *  @return Float\r\n     */\r\n    public inline function length():Float {\r\n        return Math.sqrt(lengthSquared());\r\n    }\r\n\r\n    /**\r\n     *  Normalizes `q` such that `q.length() == 1`, and stores the result in `dest`\r\n     *  @param q - \r\n     *  @param dest - \r\n     *  @return Quat\r\n     */\r\n    public inline static function normalize(q:Quat, dest:Quat):Quat {\r\n        var length:Float = q.length();\r\n        var mult:Float = 0;\r\n        if(length >= glm.GLM.EPSILON) {\r\n            mult = 1 / length;\r\n        }\r\n        return Quat.multiplyScalar(q, mult, dest);\r\n    }\r\n\r\n    /**\r\n     *  Calculates the dot product of two quaternions\r\n     *  @param a - \r\n     *  @param b - \r\n     *  @return Float\r\n     */\r\n    public inline static function dot(a:Quat, b:Quat):Float {\r\n        return a.x * b.x +\r\n            a.y * b.y +\r\n            a.z * b.z +\r\n            a.w * b.w;\r\n    }\r\n\r\n\t/**\r\n\t *  Fills `dest` with an identity quat\r\n\t *  @param dest - \r\n\t *  @return Quat\r\n\t */\r\n\tpublic inline static function identity(dest:Quat):Quat {\r\n        dest.x = 0;\r\n        dest.y = 0;\r\n        dest.z = 0;\r\n        dest.w = 1;\r\n        return dest;\r\n    }\r\n\r\n\t/**\r\n\t *  Copies one quaternion into another\r\n\t *  @param src - The quaternion to copy from\r\n\t *  @param dest - The quaternion to copy into\r\n\t *  @return Quat\r\n\t */\r\n\tpublic inline static function copy(src:Quat, dest:Quat):Quat {\r\n        dest.x = src.x;\r\n        dest.y = src.y;\r\n        dest.z = src.z;\r\n        dest.w = src.w;\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     *  Creates a quaternion from an axis and an angle (in radians).\r\n     *  @param axis - The axis to rotate about. Must be normalized first!\r\n     *  @param angle - The angle to rotate by, in radians\r\n     *  @param dest - Where to store the result\r\n     *  @return Quat\r\n     */\r\n    public inline static function axisAngle(axis:Vec3, angle:Float, dest:Quat):Quat {\r\n        angle *= 0.5;\r\n        var s:Float = Math.sin(angle);\r\n        dest.x = s * axis.x;\r\n        dest.y = s * axis.y;\r\n        dest.z = s * axis.z;\r\n        dest.w = Math.cos(angle);\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     *  Multiplies two quaternions together, both inputs are cached so either can be used as the destination\r\n     *  @param a - The left-hand side quaternion\r\n     *  @param b - The right-hand side quaternion\r\n     *  @param dest - Where to store the result\r\n     *  @return Quat\r\n     */\r\n    public inline static function multiplyQuats(a:Quat, b:Quat, dest:Quat):Quat {\r\n        var ax:Float = a.x, ay:Float = a.y, az:Float = a.z, aw:Float = a.w;\r\n        var bx:Float = b.x, by:Float = b.y, bz:Float = b.z, bw:Float = b.w;\r\n\r\n        dest.x = ax * bw + aw * bx + ay * bz - az * by;\r\n        dest.y = ay * bw + aw * by + az * bx - ax * bz;\r\n        dest.z = az * bw + aw * bz + ax * by - ay * bx;\r\n        dest.w = aw * bw - ax * bx - ay * by - az * bz;\r\n\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     *  Shortcut for `multiplyQuats(a, b, new Quat())`\r\n     *  @param a - The left-hand side quaternion\r\n     *  @param b - The right-hand side quaternion\r\n     *  @return Quat\r\n     */\r\n    @:op(A * B)\r\n    public inline static function multiplyQuatsOp(a:Quat, b:Quat):Quat {\r\n        return multiplyQuats(a, b, new Quat());\r\n    }\r\n\r\n    /**\r\n     *  Scales `a` by `s`, storing the result in `dest`\r\n     *  @param a - \r\n     *  @param s - \r\n     *  @param dest - \r\n     *  @return Quat\r\n     */\r\n    public inline static function multiplyScalar(a:Quat, s:Float, dest:Quat):Quat {\r\n        dest.x = a.x * s;\r\n        dest.y = a.y * s;\r\n        dest.z = a.z * s;\r\n        dest.w = a.w * s;\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     *  Shortcut for `multiplyScalar(a, s, new Quat())`\r\n     *  @param a - \r\n     *  @param s - \r\n     *  @return Quat\r\n     */\r\n    @:op(A * B)\r\n    public inline static function multiplyScalarOp(a:Quat, s:Float):Quat {\r\n        return multiplyScalar(a, s, new Quat());\r\n    }\r\n\r\n    /**\r\n     *  Linearly interpolates between `a` and `b`. Note: you probably want `slerp`!\r\n     *  @param a - The value when `t == 0`\r\n     *  @param b - The value when `t == 1`\r\n     *  @param t - A value between `0` and `1`, not clamped by the function\r\n     *  @param dest - The vector to store the result in\r\n     *  @return Quat\r\n     */\r\n    public inline static function lerp(a:Quat, b:Quat, t:Float, dest:Quat):Quat {\r\n        dest.x = glm.GLM.lerp(a.x, b.x, t);\r\n        dest.y = glm.GLM.lerp(a.y, b.y, t);\r\n        dest.z = glm.GLM.lerp(a.z, b.z, t);\r\n        dest.w = glm.GLM.lerp(a.w, b.w, t);\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     *  Spherical-linear interpolates between `a` and `b`\r\n     *  @param a - The value when `t == 0`\r\n     *  @param b - The value when `t == 1`\r\n     *  @param t - A value between `0` and `1`, not clamped by the function\r\n     *  @param dest - The vector to store the result in\r\n     *  @return Quat\r\n     */\r\n    public inline static function slerp(a:Quat, b:Quat, t:Float, dest:Quat):Quat {\r\n        var bx:Float = b.x, by:Float = b.y, bz:Float = b.z, bw:Float = b.w;\r\n\r\n        // calculate cosine\r\n        var cosTheta:Float = dot(a, b);\r\n\r\n        // if cosTheta < 0, the interpolation will go the long way around\r\n        // invert \r\n        if(cosTheta < 0) {\r\n            cosTheta = -cosTheta;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n\r\n        // perform a linear interpolation when cosTheta is\r\n        // close to 1 to avoid side effect of sin(angle)\r\n        // becoming a zero denominator\r\n        if(cosTheta > 1 - glm.GLM.EPSILON) {\r\n            return lerp(a, b, t, dest);\r\n        }\r\n        else {\r\n            var angle:Float = Math.acos(cosTheta);\r\n            var sa:Float = 1 / Math.sin(angle);\r\n            var i:Float = Math.sin((1 - t) * angle);\r\n            var j:Float = Math.sin(t * angle);\r\n\r\n            dest.x = (i * a.x + j * bx) * sa;\r\n            dest.y = (i * a.y + j * by) * sa;\r\n            dest.z = (i * a.z + j * bz) * sa;\r\n            dest.w = (i * a.w + j * bw) * sa;\r\n            return dest;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  Inverts the quaterion `q`, storing the result in `dest`\r\n     *  @param q - \r\n     *  @param dest - \r\n     *  @return Quat\r\n     */\r\n    public inline static function invert(q:Quat, dest:Quat):Quat {\r\n        var x:Float = q.x, y:Float = q.y, z:Float = q.z, w:Float = q.w;\r\n        var d:Float = dot(q, q);\r\n        var oneOverD:Float = if(d < glm.GLM.EPSILON) 0; else 1 / d;\r\n\r\n        dest.x = -x * oneOverD;\r\n        dest.y = -y * oneOverD;\r\n        dest.z = -z * oneOverD;\r\n        dest.w =  w * oneOverD;\r\n\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     *  Calculates the conjugate of `q`, storing the result in `dest`\r\n     *  @param q - \r\n     *  @param dest - \r\n     *  @return Quat\r\n     */\r\n    public inline static function conjugate(q:Quat, dest:Quat):Quat {\r\n        dest.x = -1 * q.x;\r\n        dest.y = -1 * q.y;\r\n        dest.z = -1 * q.z;\r\n        dest.w =      q.w;\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     *  Constructs a quaternion from roll, pitch, and yaw (x, y, and z axes)\r\n     *  @param x - The angle to rotate around x\r\n     *  @param y - The angle to rotate around y\r\n     *  @param z - The angle to rotate around z\r\n     *  @param dest - Where to store the result\r\n     *  @return Quat\r\n     */\r\n    public inline static function fromEuler(x:Float, y:Float, z:Float, dest:Quat):Quat {\r\n        var c1:Float = Math.cos(x / 2), c2:Float = Math.cos(y / 2), c3:Float = Math.cos(z / 2);\r\n        var s1:Float = Math.sin(x / 2), s2:Float = Math.sin(y / 2), s3:Float = Math.sin(z / 2);\r\n\r\n        dest.x = s1 * c2 * c3 + c1 * s2 * s3;\r\n        dest.y = c1 * s2 * c3 - s1 * c2 * s3;\r\n        dest.z = c1 * c2 * s3 + s1 * s2 * c3;\r\n        dest.w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n        return dest;\r\n    }\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.systems;\r\n\r\nimport edge.ISystem;\r\nimport mammoth.components.Transform;\r\n\r\nusing glm.Vec3;\r\nusing glm.Quat;\r\n\r\nclass PreTransformSystem implements ISystem {\r\n    public function update(transform:Transform) {\r\n        // update the previous values to equal our current ones\r\n        transform.position.copy(transform.lastPosition);\r\n        transform.rotation.copy(transform.lastRotation);\r\n        transform.scale.copy(transform.lastScale);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.systems;\r\n\r\nimport edge.ISystem;\r\nimport edge.View;\r\nimport mammoth.components.MeshRenderer;\r\nimport mammoth.components.Transform;\r\nimport mammoth.components.Camera;\r\nimport mammoth.components.DirectionalLight;\r\nimport mammoth.components.PointLight;\r\nimport mammoth.Mammoth;\r\nimport mammoth.gl.Graphics;\r\nimport mammoth.gl.GL;\r\nimport mammoth.render.Attribute;\r\nimport mammoth.render.Material;\r\nimport mammoth.render.Mesh;\r\n\r\nclass RenderSystem implements ISystem {\r\n    var objects:View<{ transform:Transform, renderer:MeshRenderer }>;\r\n    var directionalLights:View<{ transform:Transform, light:DirectionalLight }>;\r\n    var pointLights:View<{ transform:Transform, light:PointLight }>;\r\n\r\n    public function update(camera:Camera) {\r\n        // calculate the viewport\r\n        var vpX:Int = Std.int(camera.viewportMin.x * Mammoth.width);\r\n        var vpY:Int = Std.int(camera.viewportMin.y * Mammoth.height);\r\n        var vpW:Int = Std.int((camera.viewportMax.x - camera.viewportMin.x) * Mammoth.width);\r\n        var vpH:Int = Std.int((camera.viewportMax.y - camera.viewportMin.y) * Mammoth.height);\r\n\r\n        // clear our region of the screen\r\n        Mammoth.gl.viewport(vpX, vpY, vpW, vpH);\r\n        Mammoth.gl.scissor(vpX, vpY, vpW, vpH);\r\n        Mammoth.gl.clearColor(camera.clearColour);\r\n        Mammoth.gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\r\n\r\n        // render each object!\r\n        for(o in objects) {\r\n            // cache the things we care about\r\n            var transform:Transform = o.data.transform;\r\n            var renderer:MeshRenderer = o.data.renderer;\r\n            var mesh:Mesh = renderer.mesh;\r\n            var material:Material = renderer.material;\r\n\r\n            // calculate the MVP for this object\r\n            renderer.MVP = Mat4.multMat(camera.vp, transform.m, renderer.MVP);\r\n\r\n            // set the M, V, P uniforms\r\n            if(material.uniforms.exists('MVP')) {\r\n                material.setUniform('MVP', TUniform.Mat4(renderer.MVP));\r\n            }\r\n            if(material.uniforms.exists('M')) {\r\n                material.setUniform('M', TUniform.Mat4(transform.m));\r\n            }\r\n            if(material.uniforms.exists('VP')) {\r\n                material.setUniform('VP', TUniform.Mat4(camera.vp));\r\n            }\r\n            if(material.uniforms.exists('V')) {\r\n                material.setUniform('V', TUniform.Mat4(camera.v));\r\n            }\r\n            if(material.uniforms.exists('P')) {\r\n                material.setUniform('P', TUniform.Mat4(camera.p));\r\n            }\r\n        \r\n            if(material.uniforms.exists('directionalLights[0].direction')) {\r\n                var i:Int = 0;\r\n                for(dl in directionalLights) {\r\n                    // calculate the direction\r\n                    // TODO: calculate this offline somewhere else for efficiency!\r\n                    var dir:Vec4 = dl.data.transform.m.multVec(new Vec4(0, 0, 1, 1), new Vec4());\r\n\r\n                    material.setUniform('directionalLights[${i}].direction', TUniform.Vec3(new Vec3(dir.x, dir.y, dir.z)));\r\n                    material.setUniform('directionalLights[${i}].colour', TUniform.RGB(dl.data.light.colour));\r\n                    i++;\r\n                }\r\n            }\r\n            if(material.uniforms.exists('pointLights[0].position')) {\r\n                var i:Int = 0;\r\n                for(pl in pointLights) {\r\n                    material.setUniform('pointLights[${i}].position', TUniform.Vec3(pl.data.transform.position));\r\n                    material.setUniform('pointLights[${i}].colour', TUniform.RGB(pl.data.light.colour));\r\n                    material.setUniform('pointLights[${i}].distance', TUniform.Float(pl.data.light.distance));\r\n                    i++;\r\n                }\r\n            }\r\n            // TODO: spotlights\r\n            \r\n            // apply the material and render!\r\n            material.apply();\r\n\r\n            // set up the attributes\r\n            Mammoth.gl.bindBuffer(GL.ARRAY_BUFFER, mesh.vertexBuffer);\r\n            for(attributeName in mesh.attributeNames) {\r\n                if(!material.attributes.exists(attributeName)) continue;\r\n                var attribute:Attribute = material.attributes.get(attributeName);\r\n                \r\n                Mammoth.gl.enableVertexAttribArray(attribute.location);\r\n                Mammoth.gl.vertexAttribPointer(\r\n                    attribute.location,\r\n                    switch(attribute.type) {\r\n                        case Float: 1;\r\n                        case Vec2: 2;\r\n                        case Vec3: 3;\r\n                        case Vec4: 4;\r\n                    },\r\n                    GL.FLOAT,\r\n                    false,\r\n                    attribute.stride,\r\n                    attribute.offset);\r\n            }\r\n\r\n            // bind the index buffer to the vertices for triangles\r\n            Mammoth.gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, mesh.indexBuffer);\r\n\r\n            // and draw those suckers!\r\n            Mammoth.gl.drawElements(GL.TRIANGLES, mesh.vertexCount, GL.UNSIGNED_SHORT, 0);\r\n            Mammoth.stats.drawCalls++;\r\n            Mammoth.stats.triangles += Std.int(mesh.vertexCount / 3);\r\n        }\r\n    }\r\n}\r\n","/**\n  This is a primitive asynchronous class, used as a base class for Promise and\n  Signal.\n **/\n\n\npackage promhx.base;\n\n#if macro\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\nimport haxe.macro.Context;\n#end\nimport promhx.base.EventLoop;\nimport promhx.Thenable;\n\ntypedef AsyncLink<T> = {\n    async : AsyncBase<Dynamic>,\n    linkf : T->Void\n}\n\n\nclass AsyncBase<T>{\n#if debug\n    // add ids to the async instances so they are easier to track\n    static var id_ctr  = 0;\n    var id          : Int;\n    public var constructorPos :haxe.PosInfos;\n    public var parentConstructorPos :Array<haxe.PosInfos> = [];\n    // var constructorPos :haxe.PosInfos;\n#end\n    var _val        : T;\n    var _resolved   : Bool;\n    var _fulfilled  : Bool;\n    var _pending    : Bool;\n    var _update     : Array<AsyncLink<T>>;\n    var _error      : Array<Dynamic->Void>;\n    var _errored    : Bool;\n    var _errorMap   : Dynamic->T;\n    var _errorVal   : Dynamic;\n    var _errorPending : Bool;\n\n    public function new(?d:Deferred<T> #if debug ,?pos:haxe.PosInfos #end) {\n#if debug\n        id = id_ctr +=1;\n        constructorPos = pos;\n#end\n        _resolved   = false;\n        _pending = false;\n        _errorPending = false;\n        _fulfilled  = false;\n        _update     = [];\n        _error      = [];\n        _errored    = false;\n\n        if (d != null){\n            link(d,this, function(x) return x);\n        }\n\n    }\n\n    /**\n      Catch error, effectively halting the current update chain.\n      This will prevent downstream async objects from receiving\n      the error message.\n     **/\n    public function catchError(f : Dynamic->Void) {\n        _error.push(f);\n        return this;\n    }\n\n    /**\n      Map errors back to the expected type, and continue as normal.\n     **/\n    public function errorThen( f : Dynamic -> T){\n        _errorMap = f;\n        return this;\n    }\n\n    /**\n      Utility function to determine if a Promise value has been resolved.\n     **/\n    public inline function isResolved() : Bool\n        return _resolved;\n\n    /**\n      Utility function to determine if a Promise value is in an error state.\n     **/\n    public inline function isErrored() : Bool\n        return _errored;\n\n    /**\n      Utility function to determine if a Promise has handled the error.\n     **/\n    public inline function isErrorHandled() : Bool\n        return _error.length > 0;\n\n    /**\n      Utility function to determine if a Promise error is pending.\n     **/\n    public inline function isErrorPending() : Bool\n        return _errorPending;\n\n    /**\n      Utility function to determine if a Promise value has been rejected.\n     **/\n    public inline function isFulfilled(): Bool\n        return _fulfilled;\n\n    /**\n      Utility function to determine if a Promise value is pending operations\n      on the next loop.\n     **/\n    public inline function isPending() : Bool\n        return _pending;\n\n\n    function handleResolve(val:T) : Void {\n        _resolve(val);\n    }\n    /**\n      Resolves the given value for processing on any waiting functions.\n     **/\n    function _resolve(val : T) : Void {\n\n        // this async is pending an update on the next loop, move the\n        // resolve to the loop after that.\n        if (_pending){\n            EventLoop.enqueue(_resolve.bind(val));\n        } else {\n\n            // point of no return, this async has now been resolved at least once.\n            _resolved = true;\n\n            // we are now in the act of fulfilling the async... which\n            // involves waiting for the next enqueued loop\n            _pending = true;\n\n            // the loop handler, which may not even be used\n            EventLoop.enqueue(function(){\n                _val = val; // save the value\n                for (up in _update){\n#if PromhxExposeErrors\n                    up.linkf(val);\n#else\n                    try up.linkf(val)\n                catch (e:Dynamic) up.async.handleError(e);\n#end\n                }\n                _fulfilled = true; // we're in a fulfilled state\n                _pending = false; // we're done fulfilling for this resolve\n            });\n        }\n\n    }\n\n    /**\n      Handle errors, can be overridden\n     **/\n    function handleError(error : Dynamic) : Void {\n        _handleError(error);\n    }\n\n    function _handleError(error : Dynamic) : Void {\n        var update_errors = function(e:Dynamic){\n            if (_error.length > 0) for (ef in _error) ef(e);\n            else if (_update.length > 0) for (up in _update) up.async.handleError(e);\n            else {\n#if debug\n                var stacks = parentConstructorPos.concat([]);\n                stacks.push(constructorPos);\n                //Deduplicate\n                var set = new Map<String, Bool>();\n                var i = 0;\n                while (i < stacks.length) {\n                    var key = stacks[i].className + stacks[i].methodName + stacks[i].lineNumber;\n                    if (set.exists(key)) {\n                        stacks.splice(i, 1);\n                    } else {\n                        set.set(key, true);\n                        i++;\n                    }\n                }\n                var stackString = 'Promise Call Stack:\\n\\t' + stacks.map(function(s) {\n                    return '${s.fileName}:${s.lineNumber} ${s.className}.${s.methodName}()';\n                }).join('\\n\\t');\n                // haxe.Json.stringify(stacks, null, '\\t');\n                trace(stackString);\n#end\n#if (js && nodejs)\n                // Node sometimes doesn't produce helpful stack information on thrown errors.\n                trace('Call Stack: ' + haxe.CallStack.toString(haxe.CallStack.callStack()));\n#end\n                throw e;\n            }\n            this._errorPending = false;\n        }\n        if (!_errorPending){\n            _errorPending = true;\n            _errored = true;\n            _errorVal = error;\n\n            EventLoop.enqueue(function(){\n                if (_errorMap != null){\n#if PromhxExposeErrors\n                    this._resolve(_errorMap(error));\n                    _resolve(_errorMap(error));\n#else\n                    try this._resolve(_errorMap(error))\n                        catch (e : Dynamic) update_errors(e);\n#end\n                } else {\n                    update_errors(error);\n                }\n            });\n        }\n    }\n\n    /**\n      This function returns a new AsyncBase.  When this instance resolves,\n      it will resolve the new AsyncBase with the function callback argument.\n     **/\n    public function then<A>(f : T->A #if debug ,?pos:haxe.PosInfos #end) : AsyncBase<A> {\n        var ret = new AsyncBase<A>(null #if debug ,pos #end);\n        link(this, ret, f);\n        return ret;\n    }\n\n    /**\n      Remove an Async that is updated from this Async.  This action is\n      performed on the next event loop.\n     **/\n    public function unlink( to : AsyncBase<Dynamic>) {\n        EventLoop.enqueue(function(){\n            _update =  _update.filter(function(x) return x.async != to);\n        });\n    }\n\n    /**\n      Determine if an Async is updated from this Async.\n     **/\n    public function isLinked( to : AsyncBase<Dynamic>) : Bool {\n        var updated = false;\n        for (u in _update) if (u.async == to) return true;\n        return updated;\n    }\n\n\n    /**\n      This is the base \"link\" method for wiring up the \"current\" async to\n      the \"next\" one via the transform defined by the f argument.\n     **/\n    inline public static function link<A,B>\n        (current : AsyncBase<A>, next: AsyncBase<B>, f : A->B) : Void\n    {\n#if debug\n        next.parentConstructorPos = current.parentConstructorPos.concat([]);\n        next.parentConstructorPos.push(current.constructorPos);\n#end\n        // the function wrapper for the callback, which will resolve the return\n        // if current is not resolved, or will resolve next loop, push to\n        // update queues.\n        current._update.push({\n            async : next,\n            linkf : function(x){\n                next.handleResolve(f(x));\n            }\n        });\n        immediateLinkUpdate(current, next, f);\n    }\n\n    static function immediateLinkUpdate<A,B>\n        (current : AsyncBase<A>, next : AsyncBase<B>, f : A->B) : Void\n    {\n        if (current.isErrored()  // is there an error?\n                && !current.isErrorPending()  // if the error is pending, we can rely on current to update this async on the next loop.\n                && !current.isErrorHandled() ) // if the error is handled by current, we'll ignore it.\n                    next.handleError(current._errorVal);\n\n        // then the value\n        if (current.isResolved() && !current.isPending()){\n            // we can go ahead and resolve this.\n#if PromhxExposeErrors\n            next.handleResolve(f(current._val));\n#else\n            try next.handleResolve(f(current._val))\n            catch (e:Dynamic) next.handleError(e);\n#end\n        }\n\n    }\n\n    inline public static function linkAll<T>\n        (all : Iterable<AsyncBase<T>>, next: AsyncBase<Array<T>>) : Void\n    {\n        // a helper callback function.  This will be called for each Stream in\n        // the iterable argument.  The \"arr\" argument will be all of the Streams\n        // *except* the one currently resolving.  If there's only one Stream\n        // in the iterable, it will always resolve.\n        var cthen = function(arr:Array<AsyncBase<T>>, current:AsyncBase<T>,  v){\n            if (arr.length == 0 || AsyncBase.allFulfilled(arr)){\n                var vals = [for (a in all) a == current ? v : a._val];\n                next.handleResolve(vals);\n            }\n            return null;\n        };\n        for (a in all){\n            a._update.push({\n                async : next,\n                linkf: cthen.bind([for (a2 in all) if (a2 != a) a2], a, _)\n            });\n        }\n\n        if (AsyncBase.allFulfilled(all)) {\n            next.handleResolve([for (a in all) a._val]);\n        }\n    }\n\n    /**\n      Similar to the link function, except the [f] function must return an\n      AsyncBase instance.\n     **/\n    inline static public function pipeLink<A,B>\n        ( current : AsyncBase<A>, ret : AsyncBase<B>, f : A->AsyncBase<B> ) : Void\n    {\n        var linked = false;\n        var linkf = function(x){ // updates go to pipe function.\n                if (!linked){ // but only once\n                    linked = true; // the piped async doesn't actually respond to updates from current\n                    var pipe_ret = f(x); // it just needs to be created\n                    pipe_ret._update.push({  // and to be linked to ret\n                        async : ret, // errors go to ret\n                        linkf : ret.handleResolve // updates go directly to ret\n                    });\n                    immediateLinkUpdate(pipe_ret, ret, function(x) return x );\n                }\n            }\n\n        current._update.push({\n            async : ret, // errors go to ret\n            linkf : linkf\n        });\n\n        if (current.isResolved() && !current.isPending()){\n#if PromhxExposeErrors\n            linkf(current._val);\n#else\n            try linkf(current._val)\n            catch (e:Dynamic) ret.handleError(e);\n#end\n        }\n    }\n\n    /**\n      Utility function to determine if all Promise values are set.\n     **/\n    public static function allResolved\n        (as : Iterable<AsyncBase<Dynamic>>) : Bool\n    {\n        for (a in as) {\n            if (!a.isResolved()) return false;\n        }\n        return true;\n    }\n\n    /**\n      Utility function to determine if all Promise values are resolved and\n      are currently fulfilled (not in the process of fulfilling).\n     **/\n    static function allFulfilled\n        (as : Iterable<AsyncBase<Dynamic>>) : Bool\n    {\n        for (a in as) {\n            if (!a.isFulfilled()) return false;\n        }\n        return true;\n    }\n\n}\n","package promhx;\nimport promhx.base.AsyncBase;\n\n@:expose\nclass Deferred<T> extends AsyncBase<T> {\n\n    public function new() super();\n\n    /**\n      The public write interface\n     **/\n    public function resolve(val:T) handleResolve(val);\n\n    inline public function throwError(e:Dynamic) handleError(e);\n\n    /**\n      Returns a new promise based on the current deferred instance\n     **/\n    public function promise(){\n        return new Promise(this);\n    }\n\n    /**\n      Returns a new stream based on the current deferred instance\n     **/\n    public function stream(){\n        return new Stream(this);\n    }\n\n    /**\n      Returns a stream based on the current deferred instance\n     **/\n    public function publicStream(){\n        return new PublicStream(this);\n    }\n}\n","package promhx;\n\n#if macro\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\nimport haxe.macro.Context;\n#end\nimport promhx.base.EventLoop;\nimport promhx.base.AsyncBase;\nimport promhx.error.PromiseError;\n\n@:expose\nclass Promise<T> extends AsyncBase<T>{\n    var _rejected   : Bool;\n\n    public function new(?d:Deferred<T> #if debug, ?pos:haxe.PosInfos #end){\n        super(d #if debug, pos #end);\n        _rejected = false;\n    }\n\n\n\n    /**\n      Macro method that binds the promise arguments to a single function\n      callback that is triggered when all promises are resolved.\n      Note: You may call this function on as many promise arguments as you\n      like.\n     **/\n    macro public static function when<T>( args : Array<ExprOf<Promise<Dynamic>>>) : Expr {\n\n        // a default position\n        var pos = Context.currentPos();\n\n        //the macro arguments translated to an array expression.\n        var eargs = {expr:EArrayDecl(args), pos:pos};\n\n        // An array of the resolved promise values\n        var epargs = [for (i in 0...args.length) macro arr[$v{i}]._val];\n\n        // the returned function that actually does the runtime work.\n        return macro @:privateAccess {\n            // a function that accepts a variable argument function\n            var varargf = function(f){\n                // we wait on all of the promises with the iterable-based \"whenAll\"\n                // this will resolve an array, so we use pipe to ignore it, and set\n                // up a new promise for return.\n                // this new promise resolves via a macro-defined function expression\n                // on \"f\" that provides arity and types for the resolved promise values.\n                var ret = new promhx.Promise();\n                var arr : Array<promhx.Promise<Dynamic>> = $eargs;\n                var p = new Promise<Array<Dynamic>>();\n                promhx.base.AsyncBase.linkAll(arr, p);\n                p._update.push({\n                    async : ret,\n                    linkf : function(x) ret.handleResolve(f($a{epargs}))\n                });\n                return ret;\n            };\n\n            // return an anonymous object with the function definition for \"then\"\n            { then : varargf };\n        }\n    }\n\n    /**\n      Utility function to determine if a Promise value has been rejected.\n     **/\n    public inline function isRejected(): Bool {\n        return _rejected;\n    }\n\n    /**\n      Rejects the promise, throwing an error.\n     **/\n    public function reject(e : Dynamic): Void {\n        _rejected = true;\n        handleError(e);\n    }\n\n    /**\n      Transforms an iterable of promises into a single promise which resolves\n      to an array of values.\n     **/\n    public static function whenAll<T>(itb : Iterable<Promise<T>> #if debug ,?pos:haxe.PosInfos #end) : Promise<Array<T>> {\n        var ret : Promise<Array<T>> = new Promise(null #if debug ,pos #end);\n        AsyncBase.linkAll(itb, ret);\n        return ret;\n    }\n\n    /**\n      Resolves the given value for processing on any waiting functions.\n     **/\n    override function handleResolve(val : T): Void {\n        if (_resolved) {\n            var msg = \"Promise has already been resolved\";\n            throw(AlreadyResolved(msg));\n        }\n        _resolve(val);\n    }\n\n    /**\n      add a wait function directly to the Promise instance.\n     **/\n    override public function then<A>(f : T->A #if debug ,?pos:haxe.PosInfos #end): Promise<A> {\n        var ret  = new Promise<A>(null #if debug ,pos #end);\n        AsyncBase.link(this, ret, f);\n        return ret;\n    }\n\n    override public function unlink( to : AsyncBase<Dynamic>) {\n        EventLoop.enqueue(function(){\n            if (!isFulfilled()) {\n                var msg = \"Downstream Promise is not fullfilled\";\n                handleError(DownstreamNotFullfilled(msg));\n            }\n            else{\n                _update =  _update.filter(function(x) return x.async != to);\n            }\n        });\n    }\n\n    override function handleError(error : Dynamic) : Void {\n       _rejected = true;\n       _handleError(error);\n    }\n\n    public function pipe<A>(f : T->Promise<A> #if debug ,?pos:haxe.PosInfos #end) : Promise<A> {\n        var ret = new Promise<A>(null #if debug ,pos #end);\n        AsyncBase.pipeLink(this, ret, f);\n        return ret;\n    }\n\n    /**\n      Pipes an error back into a normal type.\n      **/\n    public function errorPipe( f: Dynamic-> Promise<T>){\n        var ret = new Promise<T>();\n        catchError(function(e){\n            var piped = f(e);\n            piped.then(ret._resolve);\n        });\n        then(ret._resolve);\n        return ret;\n    }\n\n    /**\n      Converts any value to a resolved Promise\n     **/\n    public static function promise<T>(_val : T #if debug ,?pos:haxe.PosInfos #end): Promise<T> {\n        var ret = new Promise<T>(#if debug null,pos #end);\n        ret.handleResolve(_val);\n        return ret;\n    }\n}\n\n","package promhx.base;\n\nprivate typedef Queue = #if java java.vm.AtomicList #else List #end <Void->Void>;\n\nclass EventLoop {\n    static var queue : Queue = new Queue();\n\n    // public static var nextLoop(default, set) : (Void->Void)-> Void;\n    public static var nextLoop : (Void->Void)-> Void;\n\n#if (js && !nodejs && !noEmbedJs && !noEmbedSetImmediate)\n    static function __init__() untyped {\n#if !nodejs\n        // we need to use global as an alternate since setImmediate expects this == window\n        var global = window;\n#end\n        haxe.macro.Compiler.includeFile(\"lib/setImmediate/setImmediate.js\");\n    }\n#end\n\n    public static inline function enqueue(eqf:Void->Void)  {\n        queue.add(eqf);\n        continueOnNextLoop();\n    }\n    static function set_nextLoop(f : (Void->Void)->Void) : (Void->Void)->Void{\n        if (nextLoop != null) throw \"nextLoop has already been set\";\n        else nextLoop = f;\n        return nextLoop;\n    }\n\n    /**\n      Retrieve the current length of the queue.\n     **/\n    public static inline function queueEmpty() {\n        return #if java queue.peekLast() == null #else queue.isEmpty() #end;\n    }\n\n    /**\n      Attempt to finish the remaining loops in the queue.  Returns true\n      if all loops are finished.  If [max_iterations] pass, then exit and\n      return false.\n     **/\n    public static function finish(max_iterations = 1000){\n        var fn = null;\n        while (max_iterations-- > 0 && (fn = queue.pop()) != null){\n            fn();\n        }\n        return queueEmpty();\n    }\n\n    /**\n      Clear the existing event loop queue.\n     **/\n    public static function clear(){\n        queue = new Queue();\n    }\n\n    static function f(){\n        var fn = queue.pop();\n        if (fn != null) fn();\n        if (!queueEmpty()) continueOnNextLoop();\n    }\n\n    static function continueOnNextLoop(){\n        if (nextLoop != null) nextLoop(f);\n        else {\n\n#if flash\n            haxe.Timer.delay(f,0);\n#elseif (js && (noEmbedJs || noEmbedSetImmediate) && !nodejs)\n            // fallback to setTimeout\n            untyped __js__(\"(typeof setImmediate === 'function' ? setImmediate : setTimeout)\")(f);\n#elseif js\n            // use polyfill or native node\n            untyped __js__(\"setImmediate\")(f);\n#else\n            f();\n#end\n        }\n    }\n}\n","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage systems;\r\n\r\nimport mammoth.Mammoth;\r\nimport edge.ISystem;\r\nimport mammoth.components.Transform;\r\nimport components.Spin;\r\n\r\nclass SpinSystem implements ISystem {\r\n    private var axis:Vec3 = new Vec3(0, 0, 1);\r\n\r\n    public function update(transform:Transform, spin:Spin) {\r\n        spin.angle += spin.speed * Mammoth.timing.dt;\r\n        Quat.axisAngle(axis, spin.angle, transform.rotation);\r\n    }\r\n}","package tusk;\r\n\r\nimport tusk.text.Font;\r\n\r\nclass Draw {\r\n    public var screenWidth(default, set):Float = 1;\r\n    private function set_screenWidth(w:Float):Float {\r\n        if(w != screenWidth) vpDirty = true;\r\n        return screenWidth = w;\r\n    }\r\n\r\n    public var screenHeight(default, set):Float = 1;\r\n    private function set_screenHeight(h:Float):Float {\r\n        if(h != screenHeight) vpDirty = true;\r\n        return screenHeight = h;\r\n    }\r\n\r\n    private var vpDirty:Bool = true;\r\n    public var vpMatrix(get, null):Mat4 = Mat4.identity(new Mat4());\r\n    private function get_vpMatrix():Mat4 {\r\n        if(vpDirty) {\r\n            GLM.orthographic(0, screenWidth, screenHeight, 0, 0, 1, vpMatrix);\r\n            vpDirty = false;\r\n        }\r\n        return vpMatrix;\r\n    }\r\n\r\n    public var buffer(default, null):FloatArray = new FloatArray(8 * 6 * 32);\r\n    public var numVertices(default, null):Int = 0;\r\n\r\n    public var font:Font;\r\n\r\n    public function new() {\r\n        font = Font.fromFontSrc(Tusk.fontSrc);\r\n    }\r\n\r\n    public function newFrame():Void {\r\n        numVertices = 0;\r\n    }\r\n\r\n    private function addVertex(x:Float, y:Float, u:Float, v:Float, colour:Vec4):Void {\r\n        var i:Int = numVertices * 8;\r\n        buffer[i + 0] = x;\r\n        buffer[i + 1] = y;\r\n        buffer[i + 2] = u;\r\n        buffer[i + 3] = v;\r\n        buffer[i + 4] = colour.r;\r\n        buffer[i + 5] = colour.g;\r\n        buffer[i + 6] = colour.b;\r\n        buffer[i + 7] = colour.a;\r\n        numVertices++;\r\n\r\n        if((numVertices * 8) >= buffer.length) {\r\n            // resize the buffer\r\n            var newBuffer:FloatArray = new FloatArray(buffer.length + (8 * 6 * 32));\r\n            for(i in 0...buffer.length)\r\n                newBuffer[i] = buffer[i];\r\n            buffer = newBuffer;\r\n        }\r\n    }\r\n\r\n    public function text(x:Float, y:Float, text:String, ?colour:Vec4):Void {\r\n        if(colour == null) colour = TuskConfig.text_Colour;\r\n        font.print(x, y + font.ascent, text, function(_x:Float, _y:Float, _u:Float, _v:Float):Void {\r\n            addVertex(_x, _y, _u, _v, colour);\r\n        });\r\n    }\r\n\r\n    public function window(x:Float, y:Float, w:Float, h:Float, title:String):Void {\r\n        // draw the body\r\n        addVertex(x + 0, y + TuskConfig.window_headerHeight, 1, 1, TuskConfig.window_bodyColour);\r\n        addVertex(x + w, y + TuskConfig.window_headerHeight, 1, 1, TuskConfig.window_bodyColour);\r\n        addVertex(x + 0, y + h, 1, 1, TuskConfig.window_bodyColour);\r\n\r\n        addVertex(x + 0, y + h, 1, 1, TuskConfig.window_bodyColour);\r\n        addVertex(x + w, y + TuskConfig.window_headerHeight, 1, 1, TuskConfig.window_bodyColour);\r\n        addVertex(x + w, y + h, 1, 1, TuskConfig.window_bodyColour);\r\n        \r\n        // draw the header\r\n        addVertex(x + 0, y + 0, 1, 1, TuskConfig.window_headerColour);\r\n        addVertex(x + w, y + 0, 1, 1, TuskConfig.window_headerColour);\r\n        addVertex(x + 0, y + TuskConfig.window_headerHeight, 1, 1, TuskConfig.window_headerColour);\r\n\r\n        addVertex(x + 0, y + TuskConfig.window_headerHeight, 1, 1, TuskConfig.window_headerColour);\r\n        addVertex(x + w, y + 0, 1, 1, TuskConfig.window_headerColour);\r\n        addVertex(x + w, y + TuskConfig.window_headerHeight, 1, 1, TuskConfig.window_headerColour);\r\n\r\n        // draw the title over the header\r\n        text(\r\n            Math.ffloor(x + ((w - font.textWidth(title)) * 0.5)),\r\n            Math.ffloor(y + (TuskConfig.window_headerHeight - font.lineHeight) * 0.5),\r\n            title, TuskConfig.window_headerTextColour);\r\n    }\r\n\r\n    public function button(x:Float, y:Float, w:Float, h:Float, label:String, state:InputState):Void {\r\n        var buttonColour:Vec4 = switch(state) {\r\n            case InputState.Normal: TuskConfig.button_normalColour;\r\n            case InputState.Hovered: TuskConfig.button_hoveredColour;\r\n            case InputState.Pressed: TuskConfig.button_pressedColour;\r\n            case InputState.Disabled: TuskConfig.button_disabledColour;\r\n        }\r\n\r\n        // draw the body\r\n        addVertex(x + 0, y + 0, 1, 1, buttonColour);\r\n        addVertex(x + w, y + 0, 1, 1, buttonColour);\r\n        addVertex(x + 0, y + h, 1, 1, buttonColour);\r\n\r\n        addVertex(x + 0, y + h, 1, 1, buttonColour);\r\n        addVertex(x + w, y + 0, 1, 1, buttonColour);\r\n        addVertex(x + w, y + h, 1, 1, buttonColour);\r\n\r\n        // draw the label\r\n        text(Math.ffloor(x + ((w - font.textWidth(label)) * 0.5)), Math.ffloor(y + (h - font.lineHeight) * 0.5), label);\r\n    }\r\n}","package tusk.text;\r\n\r\nimport haxe.ds.IntMap;\r\nimport haxe.Json;\r\n\r\nclass Font {\r\n    public var glyphs:IntMap<Glyph> = new IntMap<Glyph>();\r\n\r\n    public var base(default, null):Float;\r\n    public var lineHeight(default, null):Float;\r\n    public var spaceWidth(default, null):Float;\r\n    public var ascent(default, null):Float;\r\n    public var descent(default, null):Float;\r\n\r\n    private var unknownGlyph:Glyph;\r\n\r\n    public static function fromFontSrc(src:String):Font {\r\n        return new Font(Json.parse(src));\r\n    }\r\n\r\n    public function new(bmFont:BMFont) {\r\n        base = bmFont.common.base;\r\n        lineHeight = bmFont.common.lineHeight;\r\n        descent = lineHeight - base;\r\n        ascent = 0;\r\n\r\n        var imSize:Vec2 = new Vec2(bmFont.common.scaleW, bmFont.common.scaleH);\r\n        for(char in bmFont.chars) {\r\n            var g:Glyph = new Glyph(char, imSize);\r\n            glyphs.set(char.id, g);\r\n\r\n            // find the maximum ascent\r\n            var a:Float = base - g.size.y;\r\n            if(a > ascent) {\r\n                ascent = a;\r\n            }\r\n        }\r\n\r\n        unknownGlyph = glyphs.get('?'.charCodeAt(0));\r\n        spaceWidth = glyphs.get(' '.charCodeAt(0)).xAdvance;\r\n    }\r\n\r\n    public function textWidth(text:String):Float {\r\n        var width:Float = 0, maxWidth:Float = 0;\r\n\r\n        for(i in 0...text.length) {\r\n            var idx:Int = text.charCodeAt(i);\r\n            if(idx == null) continue;\r\n\r\n            // deal with special characters\r\n            width += switch(idx) {\r\n                case 32: { // ' '\r\n                    spaceWidth;\r\n                }\r\n\r\n                case 10: { // '\\n'\r\n                    if(width > maxWidth)\r\n                        maxWidth = width;\r\n                    -1 * width;\r\n                }\r\n\r\n                case 13: { // '\\r'\r\n                    if(width > maxWidth)\r\n                        maxWidth = width;\r\n                    -1 * width;\r\n                }\r\n\r\n                case 9: { // '\\t'\r\n                    4 * spaceWidth;\r\n                }\r\n\r\n                case _: {\r\n                    var g:Glyph = glyphs.get(idx);\r\n                    if(g == null) g = unknownGlyph;\r\n                    g.xAdvance;\r\n                }\r\n            }\r\n        }\r\n\r\n        if(width > maxWidth)\r\n            maxWidth = width;\r\n\r\n        return maxWidth;\r\n    }\r\n\r\n    public function print(x:Float, y:Float, text:String, addVertex:AddVertexFunc):Void {\r\n        var _x:Float = x;\r\n        var _y:Float = y;\r\n\r\n        for(i in 0...text.length) {\r\n            var idx:Int = text.charCodeAt(i);\r\n            if(idx == null) continue;\r\n\r\n            // deal with special characters\r\n            if(idx == ' '.charCodeAt(0)) {\r\n                _x += spaceWidth;\r\n                continue;\r\n            }\r\n            else if(idx == '\\n'.charCodeAt(0)) {\r\n                _x = x;\r\n                _y += lineHeight;\r\n                continue;\r\n            }\r\n            else if(idx == '\\r'.charCodeAt(0)) {\r\n                _x = x;\r\n                continue;\r\n            }\r\n            else if(idx == '\\t'.charCodeAt(0)) {\r\n                _x += (spaceWidth * 4);\r\n                continue;\r\n            }\r\n\r\n            // draw a glyph\r\n            var g:Glyph = glyphs.get(idx);\r\n            if(g == null) g = unknownGlyph;\r\n\r\n            var x0:Float = _x + g.offset.x;\r\n            var x1:Float = x0 + g.size.x;\r\n            var y0:Float = _y + g.offset.y - base;\r\n            var y1:Float = y0 + g.size.y;\r\n\r\n            addVertex(x0, y0, g.uvMin.x, g.uvMin.y);\r\n            addVertex(x1, y0, g.uvMax.x, g.uvMin.y);\r\n            addVertex(x0, y1, g.uvMin.x, g.uvMax.y);\r\n\r\n            addVertex(x0, y1, g.uvMin.x, g.uvMax.y);\r\n            addVertex(x1, y0, g.uvMax.x, g.uvMin.y);\r\n            addVertex(x1, y1, g.uvMax.x, g.uvMax.y);\r\n\r\n            _x += g.xAdvance;\r\n        }\r\n    }\r\n}","package tusk.text;\r\n\r\nclass Glyph {\r\n    public var uvMin:Vec2;\r\n    public var uvMax:Vec2;\r\n\r\n    public var xAdvance:Float;\r\n    public var size:Vec2;\r\n    public var offset:Vec2;\r\n\r\n    public function new(char:BMFont.Char, imSize:Vec2) {\r\n        uvMin = new Vec2(char.x / imSize.x, char.y / imSize.y);\r\n        uvMax = new Vec2(uvMin.x + (char.width / imSize.x), uvMin.y + (char.height / imSize.y));\r\n\r\n        xAdvance = char.xadvance;\r\n        size = new Vec2(char.width, char.height);\r\n        offset = new Vec2(char.xoffset, char.yoffset);\r\n    }\r\n}","package tusk;\r\n\r\nimport haxe.ds.IntMap;\r\nimport tusk.macros.FileContents;\r\n\r\n#if js\r\ntypedef FloatArray = js.html.Float32Array;\r\n#else\r\ntypedef FloatArray = haxe.io.Float32Array;\r\n#end\r\n\r\nclass Tusk {\r\n    public static var vertexShaderSrc(default, null):String = FileContents.contents('tusk/assets/vertex.glsl');\r\n    public static var fragmentShaderSrc(default, null):String = FileContents.contents('tusk/assets/fragment.glsl');\r\n    public static var fontTextureSrc(default, null):String = 'data:image/png;base64,' + FileContents.base64contents('tusk/assets/coderscrux.png');\r\n    public static var fontSrc(default, null):String = FileContents.contents('tusk/assets/coderscrux.json');\r\n\r\n    public static var draw(default, null):Draw = new Draw();\r\n    public static var controls(default, null):IntMap<Control> = new IntMap<Control>();\r\n\r\n    private function new() {}\r\n\r\n    private static var mousePos:Vec2 = new Vec2();\r\n    private static var mousePressed:Bool = false;\r\n    private static var mouseDown:Bool = false;\r\n    private static var mouseReleased:Bool = false;\r\n\r\n    private static var nextPos:Vec2 = new Vec2();\r\n    private static var currentWidth:Float = 0;\r\n\r\n    public static function updateInput(mx:Float, my:Float, mouseDown:Bool):Void {\r\n        mousePos.set(mx, my);\r\n\r\n        Tusk.mousePressed = mouseDown && !Tusk.mouseDown;\r\n        Tusk.mouseReleased = !mouseDown && Tusk.mouseDown;\r\n        Tusk.mouseDown = mouseDown;\r\n    }\r\n\r\n    private inline static function getControl(uuid:Int):Control {\r\n        // get or create the control\r\n        if(!controls.exists(uuid))\r\n            controls.set(uuid, new Control());\r\n        return controls.get(uuid);\r\n    }\r\n\r\n    private static function updateInputState(control:Control, x:Float, y:Float, w:Float, h:Float):Void {\r\n        // skip all this logic if we're disabled\r\n        if(control.state == InputState.Disabled) return;\r\n        \r\n        // detect hovers\r\n        var mousedOver:Bool = mousePos.x >= x && mousePos.x <= x + w && mousePos.y >= y && mousePos.y <= y + h;\r\n        if(mousedOver) {\r\n            if(control.state == InputState.Normal) {\r\n                control.state = InputState.Hovered;\r\n            }\r\n            if(Tusk.mousePressed) {\r\n                control.state = InputState.Pressed;\r\n            }\r\n        }\r\n        else if(control.state == InputState.Hovered) {\r\n            control.state = InputState.Normal;\r\n        }\r\n\r\n        // detect clicks\r\n        control.clicked = false;\r\n        if(control.state == InputState.Pressed && Tusk.mouseReleased) {\r\n            control.clicked = true;\r\n\r\n            if(mousedOver) {\r\n                control.state = InputState.Hovered;\r\n            }\r\n            else {\r\n                control.state = InputState.Normal;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static function window(uuid:Int, x:Float, y:Float, w:Float, h:Float, title:String):Void {\r\n        // TODO\r\n        var control:Control = getControl(uuid);\r\n\r\n        nextPos.set(x + 2, y + 2 + TuskConfig.window_headerHeight);\r\n        currentWidth = w - 4;\r\n        draw.window(x, y, w, h, title);\r\n    }\r\n\r\n    public static function label(text:String):Void {\r\n        draw.text(nextPos.x, nextPos.y, text);\r\n        nextPos.y += draw.font.lineHeight + 4;\r\n    }\r\n\r\n    public static function button(uuid:Int, label:String):Bool {\r\n        var control:Control = getControl(uuid);\r\n        updateInputState(control, nextPos.x, nextPos.y, currentWidth, draw.font.lineHeight + 4);\r\n        draw.button(nextPos.x, nextPos.y, currentWidth, draw.font.lineHeight + 4, label, control.state);\r\n        nextPos.y += draw.font.lineHeight + 4 + 4;\r\n        return control.clicked;\r\n    }\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage glm;\r\n\r\nusing glm.Mat4;\r\nusing glm.Vec4;\r\n\r\n#if js\r\ntypedef FloatArray = js.html.Float32Array;\r\n#else\r\ntypedef FloatArray = haxe.io.Float32Array;\r\n#end\r\n\r\nclass GLM {\r\n    /**\r\n     *  Minimum absolute value difference of floats before they are considered equal\r\n     */\r\n    public static var EPSILON:Float = 0.0000001;\r\n\r\n    /**\r\n     *  Utility for linearly interpolating between two values\r\n     *  @param a - The value when `t == 0`\r\n     *  @param b - The value when `t == 1`\r\n     *  @param t - A value between `0` and `1`, not clamped by the function\r\n     *  @return Float\r\n     */\r\n    public inline static function lerp(a:Float, b:Float, t:Float):Float {\r\n        return a + t * (b - a);\r\n    }\r\n\r\n    /**\r\n     *  Constructs a 3D translation matrix\r\n     *  @param translation - How far to move in each of the directions\r\n     *  @param dest - Where the result will be stored\r\n     *  @return Mat4\r\n     */\r\n    public inline static function translate(translation:Vec3, dest:Mat4):Mat4 {\r\n        dest.identity();\r\n        dest.r0c3 = translation.x;\r\n        dest.r1c3 = translation.y;\r\n        dest.r2c3 = translation.z;\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     *  Constructs a 3D rotation matrix\r\n     *  @param rotation - The quaternion to use as rotation\r\n     *  @param dest - Where the result will be stored\r\n     *  @return Mat4\r\n     */\r\n    public inline static function rotate(rotation:Quat, dest:Mat4):Mat4 {\r\n        var x2:Float = rotation.x+rotation.x, y2:Float = rotation.y+rotation.y, z2:Float = rotation.z+rotation.z;\r\n\t\tvar xx:Float = rotation.x * x2, xy:Float = rotation.x * y2, xz:Float = rotation.x * z2;\r\n\t\tvar yy:Float = rotation.y * y2, yz:Float = rotation.y * z2, zz:Float = rotation.z * z2;\r\n\t\tvar wx:Float = rotation.w * x2, wy:Float = rotation.w * y2, wz:Float = rotation.w * z2;\r\n\r\n        dest.r0c0 = 1 - (yy + zz);\r\n        dest.r0c1 = xy - wz;\r\n        dest.r0c2 = xz + wy;\r\n        dest.r0c3 = 0;\r\n\r\n        dest.r1c0 = xy + wz;\r\n        dest.r1c1 = 1 - (xx + zz);\r\n        dest.r1c2 = yz - wx;\r\n        dest.r1c3 = 0;\r\n        \r\n        dest.r2c0 = xz - wy;\r\n        dest.r2c1 = yz + wx;\r\n        dest.r2c2 = 1 - (xx + yy);\r\n        dest.r2c3 = 0;\r\n\r\n        dest.r3c0 = 0;\r\n        dest.r3c1 = 0;\r\n        dest.r3c2 = 0;\r\n        dest.r3c3 = 1;\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     *  Constructs a 3D scale matrix\r\n     *  @param amount - How much to scale by in each of the three directions\r\n     *  @param dest - Where the result will be stored\r\n     *  @return Mat4\r\n     */\r\n    public inline static function scale(amount:Vec3, dest:Mat4):Mat4 {\r\n        dest.identity();\r\n        dest.r0c0 = amount.x;\r\n        dest.r1c1 = amount.y;\r\n        dest.r2c2 = amount.z;\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     *  Constructs a complete transformation matrix from translation, rotation, and scale components.\r\n     *  It should be a fair bit faster than constructing each on their own and multiplying together.\r\n     *  @param translation - The translation vector\r\n     *  @param rotation - The rotation quaternion\r\n     *  @param scale - The scale vector\r\n     *  @param dest - Where to store the result\r\n     *  @return Mat4\r\n     */\r\n    public inline static function transform(translation:Vec3, rotation:Quat, scale:Vec3, dest:Mat4):Mat4 {\r\n        var x2:Float = rotation.x + rotation.x;\r\n        var y2:Float = rotation.y + rotation.y;\r\n        var z2:Float = rotation.z + rotation.z;\r\n\r\n        var xx:Float = rotation.x * x2;\r\n        var xy:Float = rotation.x * y2;\r\n        var xz:Float = rotation.x * z2;\r\n        var yy:Float = rotation.y * y2;\r\n        var yz:Float = rotation.y * z2;\r\n        var zz:Float = rotation.z * z2;\r\n        var wx:Float = rotation.w * x2;\r\n        var wy:Float = rotation.w * y2;\r\n        var wz:Float = rotation.w * z2;\r\n\r\n        dest.r0c0 = (1 - (yy + zz)) * scale.x;\r\n        dest.r1c0 = (xy + wz) * scale.x;\r\n        dest.r2c0 = (xz - wy) * scale.x;\r\n        dest.r3c0 = 0;\r\n        dest.r0c1 = (xy - wz) * scale.y;\r\n        dest.r1c1 = (1 - (xx + zz)) * scale.y;\r\n        dest.r2c1 = (yz + wx) * scale.y;\r\n        dest.r3c1 = 0;\r\n        dest.r0c2 = (xz + wy) * scale.z;\r\n        dest.r1c2 = (yz - wx) * scale.z;\r\n        dest.r2c2 = (1 - (xx + yy)) * scale.z;\r\n        dest.r3c2 = 0;\r\n        dest.r0c3 = translation.x;\r\n        dest.r1c3 = translation.y;\r\n        dest.r2c3 = translation.z;\r\n        dest.r3c3 = 1;\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     *  Constructs a lookat matrix to position a view matrix at `eye`, looking at `centre`, with `up` orienting the view\r\n     *  @param eye - Where the viewer is located\r\n     *  @param centre - Where the viewer is looking at\r\n     *  @param up - A vector pointing `up` for the view\r\n     *  @param dest - Where to store the result\r\n     *  @return Mat4\r\n     */\r\n    public static function lookAt(eye:Vec3, centre:Vec3, up:Vec3, dest:Mat4):Mat4 {\r\n        var x0:Float, x1:Float, x2:Float, y0:Float, y1:Float, y2:Float, z0:Float, z1:Float, z2:Float;\r\n        var len:Float;\r\n\r\n        if (Math.abs(eye.x - centre.x) < EPSILON &&\r\n            Math.abs(eye.y - centre.y) < EPSILON &&\r\n            Math.abs(eye.z - centre.z) < EPSILON) {\r\n            dest.identity();\r\n            return dest;\r\n        }\r\n\r\n        z0 = eye.x - centre.x;\r\n        z1 = eye.y - centre.y;\r\n        z2 = eye.z - centre.z;\r\n\r\n        len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n        z0 *= len;\r\n        z1 *= len;\r\n        z2 *= len;\r\n\r\n        x0 = up.y * z2 - up.z * z1;\r\n        x1 = up.z * z0 - up.x * z2;\r\n        x2 = up.x * z1 - up.y * z0;\r\n        len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n        if (len <= EPSILON) {\r\n            x0 = 0;\r\n            x1 = 0;\r\n            x2 = 0;\r\n        }\r\n        else {\r\n            len = 1 / len;\r\n            x0 *= len;\r\n            x1 *= len;\r\n            x2 *= len;\r\n        }\r\n\r\n        y0 = z1 * x2 - z2 * x1;\r\n        y1 = z2 * x0 - z0 * x2;\r\n        y2 = z0 * x1 - z1 * x0;\r\n\r\n        len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n        if (len <= EPSILON) {\r\n            y0 = 0;\r\n            y1 = 0;\r\n            y2 = 0;\r\n        }\r\n        else {\r\n            len = 1 / len;\r\n            y0 *= len;\r\n            y1 *= len;\r\n            y2 *= len;\r\n        }\r\n\r\n        dest.r0c0 = x0;\r\n        dest.r1c0 = y0;\r\n        dest.r2c0 = z0;\r\n        dest.r3c0 = 0;\r\n\r\n        dest.r0c1 = x1;\r\n        dest.r1c1 = y1;\r\n        dest.r2c1 = z1;\r\n        dest.r3c1 = 0;\r\n\r\n        dest.r0c2 = x2;\r\n        dest.r1c2 = y2;\r\n        dest.r2c2 = z2;\r\n        dest.r3c2 = 0;\r\n\r\n        dest.r0c3 = -(x0 * eye.x + x1 * eye.y + x2 * eye.z);\r\n        dest.r1c3 = -(y0 * eye.x + y1 * eye.y + y2 * eye.z);\r\n        dest.r2c3 = -(z0 * eye.x + z1 * eye.y + z2 * eye.z);\r\n        dest.r3c3 = 1;\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     *  Constructs a perspective projection matrix\r\n     *  Taken from https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js#L1788\r\n     *  @param fovy - The vertical field of view in radians\r\n     *  @param aspectRatio - The aspect ratio of the view\r\n     *  @param near - The near clipping plane\r\n     *  @param far - The far clipping plane\r\n     *  @param dest - Where to store the result\r\n     *  @return Mat4\r\n     */\r\n    public inline static function perspective(fovy:Float, aspectRatio:Float, near:Float, far:Float, dest:Mat4):Mat4 {\r\n        var f:Float = 1 / Math.tan(fovy / 2);\r\n        var nf:Float = 1 / (near - far);\r\n\r\n        dest.r0c0 = f / aspectRatio;\r\n        dest.r1c0 = 0;\r\n        dest.r2c0 = 0;\r\n        dest.r3c0 = 0;\r\n\r\n        dest.r0c1 = 0;\r\n        dest.r1c1 = f;\r\n        dest.r2c1 = 0;\r\n        dest.r3c1 = 0;\r\n        \r\n        dest.r0c2 = 0;\r\n        dest.r1c2 = 0;\r\n        dest.r2c2 = (far + near) * nf;\r\n        dest.r3c2 = -1;\r\n\r\n        dest.r0c3 = 0;\r\n        dest.r1c3 = 0;\r\n        dest.r2c3 = (2 * far * near) * nf;\r\n        dest.r3c3 = 0;\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     *  Constructs an orthographic projection matrix\r\n     *  @param left - \r\n     *  @param right - \r\n     *  @param bottom - \r\n     *  @param top - \r\n     *  @param near - \r\n     *  @param far - \r\n     *  @param dest - Where to store the result\r\n     *  @return Mat4\r\n     */\r\n    public inline static function orthographic(left:Float, right:Float, bottom:Float, top:Float, near:Float=-1, far:Float=1, dest:Mat4):Mat4 {\r\n        var rl:Float = 1 / (right - left);\r\n        var tb:Float = 1 / (top - bottom);\r\n        var fn:Float = 1 / (far - near);\r\n\r\n        dest.r0c0 = 2 * rl;\r\n        dest.r0c1 = 0;\r\n        dest.r0c2 = 0;\r\n        dest.r0c3 = -1 * (left + right) * rl;\r\n\r\n        dest.r1c0 = 0;\r\n        dest.r1c1 = 2 * tb;\r\n        dest.r1c2 = 0;\r\n        dest.r1c3 = -1 * (top + bottom) * tb;\r\n\r\n        dest.r2c0 = 0;\r\n        dest.r2c1 = 0;\r\n        dest.r2c2 = -2 * fn;\r\n        dest.r2c3 = -1 * (far + near) * fn;\r\n\r\n        dest.r3c0 = 0;\r\n        dest.r3c1 = 0;\r\n        dest.r3c2 = 0;\r\n        dest.r3c3 = 1;\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     *  Constructs an orthographic projection matrix\r\n     *  Taken from: https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js#L1755\r\n     *  @param left - \r\n     *  @param right - \r\n     *  @param bottom - \r\n     *  @param top - \r\n     *  @param near - \r\n     *  @param far - \r\n     *  @param dest - Where to store the result\r\n     *  @return Mat4\r\n     */\r\n    public inline static function frustum(left:Float, right:Float, bottom:Float, top:Float, near:Float=-1, far:Float=1, dest:Mat4):Mat4 {\r\n        var rl:Float = 1 / (right - left);\r\n        var tb:Float = 1 / (top - bottom);\r\n        var nf:Float = 1 / (near - far);\r\n\r\n        dest.r0c0 = (near * 2) * rl;\r\n        dest.r1c0 = 0;\r\n        dest.r2c0 = 0;\r\n        dest.r3c0 = 0;\r\n\r\n        dest.r0c1 = 0;\r\n        dest.r1c1 = (near * 2) * tb;\r\n        dest.r2c1 = 0;\r\n        dest.r3c1 = 0;\r\n        \r\n        dest.r0c2 = (right + left) * tb;\r\n        dest.r1c2 = (top + bottom) * tb;\r\n        dest.r2c2 = (far + near) * nf;\r\n        dest.r3c2 = -1;\r\n\r\n        dest.r0c3 = 0;\r\n        dest.r1c3 = 0;\r\n        dest.r2c3 = (far * near * 2) * nf;\r\n        dest.r3c3 = 0;\r\n        return dest;\r\n    }\r\n}","package mammoth.macros;\r\n\r\nimport haxe.macro.Expr;\r\nimport haxe.io.Path;\r\n\r\nclass StandardShader {\r\n    macro public static function source(type:String):ExprOf<String> {\r\n        var filename:String = 'standard.${type}.glsl';\r\n\r\n        #if sys\r\n        var assetSrcFolder:String = Path.join([Sys.getCwd(), \"src\", \"mammoth\", \"assets\"]);\r\n        #else\r\n        var assetSrcFolder:String = Path.join([\"src\", \"mammoth\", \"assets\"]);\r\n        #end\r\n\r\n        var source:String = sys.io.File.getContent(Path.join([assetSrcFolder, filename]));\r\n        return macro $v{source};\r\n    }\r\n}","/*\r\n * Copyright (c) 2017 Kenton Hamaluik\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at:\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\npackage mammoth.utilities;\r\n\r\nclass Colours {\r\n    public static var Black:Colour = new Colour(0, 0, 0, 1);\r\n    public static var White:Colour = new Colour(1, 1, 1, 1);\r\n}","package tusk.macros;\r\n\r\nimport haxe.macro.Expr;\r\nimport haxe.io.Path;\r\nimport haxe.io.Bytes;\r\nimport haxe.crypto.Base64;\r\n\r\nclass FileContents {\r\n    macro public static function contents(path:String):ExprOf<String> {\r\n        var parts:Array<String> = path.split('/');\r\n        parts.insert(0, 'src');\r\n        #if sys\r\n        parts.insert(0, Sys.getCwd());\r\n        #end\r\n        var assetFilename:String = Path.join(parts);\r\n\r\n        var source:String = sys.io.File.getContent(assetFilename);\r\n        return macro $v{source};\r\n    }\r\n\r\n    macro public static function base64contents(path:String):ExprOf<String> {\r\n        var parts:Array<String> = path.split('/');\r\n        parts.insert(0, 'src');\r\n        #if sys\r\n        parts.insert(0, Sys.getCwd());\r\n        #end\r\n        var assetFilename:String = Path.join(parts);\r\n\r\n        var source:Bytes = sys.io.File.getBytes(assetFilename);\r\n        var srcString:String = Base64.encode(source);\r\n        return macro $v{srcString};\r\n    }\r\n}","package tusk;\r\n\r\nclass TuskConfig {\r\n    public static var text_Colour:Vec4 = new Vec4(1, 1, 1, 1);\r\n\r\n    public static var window_headerHeight:Float = 16;\r\n    public static var window_headerColour:Vec4 = new Vec4(0, 0, 0, 0.75);\r\n    public static var window_headerTextColour:Vec4 = new Vec4(1, 1, 1, 1);\r\n    public static var window_bodyColour:Vec4 = new Vec4(0, 0, 0, 0.5);\r\n\r\n    public static var button_normalColour:Vec4 = new Vec4(0.5, 0.5, 0.5, 0.9);\r\n    public static var button_hoveredColour:Vec4 = new Vec4(0.75, 0.75, 0.75, 1);\r\n    public static var button_pressedColour:Vec4 = new Vec4(1, 1, 1, 1);\r\n    public static var button_disabledColour:Vec4 = new Vec4(0.25, 0.25, 0.25, 0.9);\r\n}"],
"names":[],
"mappings":"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"
}